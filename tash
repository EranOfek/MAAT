[1mdiff --git a/+ImUtil/+Im/background_image.m b/+ImUtil/+Im/background_image.m[m
[1mindex e76c90c..11b447b 100755[m
[1m--- a/+ImUtil/+Im/background_image.m[m
[1m+++ b/+ImUtil/+Im/background_image.m[m
[36m@@ -139,7 +139,7 @@[m [mfor Ilist=1:1:Nlist[m
             % is mode_fit requested also for the std:[m
             switch lower(InPar.MethodStD)[m
                 case 'mode_fit'[m
[31m-                    [SubBack(Ilist),SubStd(Ilist)] = Util.stat.mode_fit(SubImage,InPar.FunBackPar{:});[m
[32m+[m[32m                    [SubBack(Ilist),SubStd(Ilist)] = Util.stat.mode_fit(SubImage(~isnan(SubImage)),InPar.FunBackPar{:});[m
                     CalcStd = false;[m
                 otherwise[m
                     SubBack(Ilist) = Util.stat.mode_fit(SubImage,InPar.FunBackPar{:});[m
[1mdiff --git a/+ImUtil/+pattern/match_pattern_shift_rot.m~ b/+ImUtil/+pattern/match_pattern_shift_rot.m~[m
[1mdeleted file mode 100644[m
[1mindex d4e762b..0000000[m
[1m--- a/+ImUtil/+pattern/match_pattern_shift_rot.m~[m
[1m+++ /dev/null[m
[36m@@ -1,409 +0,0 @@[m
[31m-function [Res,IndBest,H2]=match_pattern_shift_rot(Cat,Ref,Rotation,varargin)[m
[31m-% Match X/Y coordinates in two shifted and rotated lists.[m
[31m-% Description: ImUtil.pattern[m
[31m-% Input  : - Catalog list, containing at least two columns of [X,Y].[m
[31m-%            Should be sorted by Y.[m
[31m-%            If this is an AstCat object then AstCat/pattern_match_shift[m
[31m-%            will be called.[m
[31m-%          - Reference list, containing at least two columns of [X,Y].[m
[31m-%            Sorted by Y.[m
[31m-%          - Vector of rotations to check [deg].[m
[31m-%          * Arbitrary number of pairs of arguments: ...,keyword,value,...[m
[31m-%            where keyword are one of the followings:[m
[31m-%            'ColXc' - Column name or column index of the X coordinate in[m
[31m-%                      the catalog. Default is 1.[m
[31m-%            'ColYc' - Column name or column index of the Y coordinate in[m
[31m-%                      the catalog. Default is 2.[m
[31m-%            'ColXr' - Column name or column index of the X coordinate in[m
[31m-%                      the reference. Default is 1.[m
[31m-%            'ColYr' - Column name or column index of the Y coordinate in[m
[31m-%                      the reference. Default is 2.[m
[31m-%            'FunCatSelect' - Function handle for selecting good sources in[m
[31m-%                      input Cat. Flag=fun(Cat,additional_arg), where Flag[m
[31m-%                      is a logical vector indicating good sources.[m
[31m-%                      Default is [].[m
[31m-%            'FunCatSelectPar' - Additional parameters to pass to the[m
[31m-%                      FunCatSelect function. Default is {}.[m
[31m-%            'FunRefSelect' - Function handle for selecting good sources in[m
[31m-%                      input Ref. Flag=fun(Ref,additional_arg), where Flag[m
[31m-%                      is a logical vector indicating good sources.[m
[31m-%                      Default is [].[m
[31m-%            'FunRefSelectPar' - Additional parameters to pass to the[m
[31m-%                      FunRefSelect function. Default is {}.[m
[31m-%            'SearchRangeX' - X shift search range (in coordinate units).[m
[31m-%                      If empty then set to half the max X coordinates in[m
[31m-%                      the input Cat.[m
[31m-%                      Default is [].       [m
[31m-%            'SearchRangeY' - Y shift search range (in coordinate units).[m
[31m-%                      If empty then set to half the max X coordinates in[m
[31m-%                      the input Cat.[m
[31m-%                      Default is [].[m
[31m-%            'SearchStepX' - X shift search step size (in coordinate units).[m
[31m-%                      Default is 2.[m
[31m-%            'SearchStepY' - Y shift search step size (in coordinate units).[m
[31m-%                      Default is 2.[m
[31m-%            'MaxMethod' - Method by which to use the best match[m
[31m-%                      solution/s. Options are:[m
[31m-%                      'sort' - sort by number of matches and return the[m
[31m-%                               best solutions. Default.[m
[31m-%                      'max1' - Return the soltion with the largest[m
[31m-%                               number of matches.[m
[31m-%            'MinNinPeak' - Minimum number of histogram matching for a[m
[31m-%                      valid solution. Default is 5.[m
[31m-%                      If value is <1, then this is the fraction of matches[m
[31m-%                      out of the total number of sources in the catalog.[m
[31m-%            'MaxPeaks' - Maximum number of histogram peaks (matches) to[m
[31m-%                      return. Default is 10.[m
[31m-%            'MaxPeaksCheck' - Out of the returned peaks, this is the[m
[31m-%                      maximum nuber of peaks to check. Default is 10.[m
[31m-%                      Checking includes trying to use the transformation[m
[31m-%                      to match all the sources.[m
[31m-%                      If 0 then 'SelectBest' will use the MaxHistMatch[m
[31m-%                      value.[m
[31m-%            'CooType' - Coordinate type {'plane'|'sphere'}.[m
[31m-%                      Default is 'plane'.[m
[31m-%            'SearchRad' - Search radius for final matching. Default is 2.[m
[31m-%            'SearchMethod' - Catalg matching search method.[m
[31m-%                      See search_cat.m for options. Default is 'binms'.[m
[31m-%            'SelectBest' - How to select the best solution. Options are:[m
[31m-%                      'meanerr' - Choose the solution with the minimal[m
[31m-%                                  error on the mean.[m
[31m-%                      'N'       - Choose the solution with the largest[m
[31m-%                                  number of matched sources.[m
[31m-%                      'std'     - Choose the solution with the minmum[m
[31m-%                                  std.[m
[31m-%                      'comb'    - Use both meanerr and N. Default.[m
[31m-%            'FalseAlarm' - In the adaptive peak detection option,[m
[31m-%                      this is the false alarm probability that will be[m
[31m-%                      used in order to calculate the detection threshold.[m
[31m-%                      Default is 1e-4.[m
[31m-%            'RegionMaxConn' - connectivity for imregionalmax. Default is 8.[m
[31m-% Output : - Structure array of all the possible shift solutions.[m
[31m-%            The following fields are available:[m
[31m-%          - Index of the best shift solution in the structure of all[m
[31m-%            possible solutions.[m
[31m-%          - The 2D histogram of all possible combination of X and Y[m
[31m-%            distances.         [m
[31m-% License: GNU general public license version 3[m
[31m-%     By : Eran O. Ofek                    Jan 2018[m
[31m-%    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-% Example: [Res,IndBest,H2]=ImUtil.pattern.match_pattern_shift_rot[m
[31m-% Reliable: 2[m
[31m-%--------------------------------------------------------------------------[m
[31m-[m
[31m-RAD = 180./pi;[m
[31m-[m
[31m-if (nargin==0)[m
[31m-    % simulation mode[m
[31m-    Rotation = (-1:0.1:1)';[m
[31m-    Nstar = 1000;[m
[31m-    Ref = rand(Nstar,2).*2048;[m
[31m-    Ref = sortrows(Ref,2);[m
[31m-    Noverlap = 50;[m
[31m-    Cat = [Ref(1:Noverlap,1), Ref(1:Noverlap,2)];[m
[31m-    Cat = [Cat; rand(Nstar-Noverlap,2).*2048];[m
[31m-    Cat(:,1) = Cat(:,1) + 20 + randn(Nstar,1).*0.3;[m
[31m-    Cat(:,2) = Cat(:,2) + 30 + randn(Nstar,1).*0.3;[m
[31m-    Cat      = sortrows(Cat,2);[m
[31m-end[m
[31m-[m
[31m-[m
[31m-[m
[31m-DefV.Radius           = 2;[m
[31m-DefV.Flip             = [1 1];[m
[31m-DefV.ColXc            = 1;            % or string[m
[31m-DefV.ColYc            = 2;[m
[31m-DefV.ColXr            = 1;[m
[31m-DefV.ColYr            = 2;[m
[31m-DefV.FunCatSelect     = [];[m
[31m-DefV.FunCatSelectPar  = {};[m
[31m-DefV.FunRefSelect     = [];[m
[31m-DefV.FunRefSelectPar  = {};[m
[31m-DefV.CutRefCat        = true;[m
[31m-DefV.SearchRangeX     = [-1000 1000];[m
[31m-DefV.SearchRangeY     = [-1000 1000];[m
[31m-DefV.SearchRangeFactor= 0.5;[m
[31m-DefV.SearchStepX      = 3;[m
[31m-DefV.SearchStepY      = 3;[m
[31m-DefV.MaxMethod        = 'adaptive'; %'sort';       % {'max1'|'sort'|'[m
[31m-DefV.FalseAlarm       = 1e-2;[m
[31m-DefV.MinNinPeak       = 5;            % min number of matches in peak - if <1 then fraction of ListCat[m
[31m-DefV.RetSolFracMax    = 0.5;          % return only solutions that their HistNmatch is larger than this fraction*max(HistNmatch)[m
[31m-DefV.MaxPeaks         = 10;            % maximum number of peaks to return in individual rotations[m
[31m-DefV.MaxPeaksCheck    = 10;            % out of the returned peaks - this is the maximum nuber of peaks to check[m
[31m-%DefV.SearchRad        = 2;[m
[31m-DefV.SortResBy        = 'N';[m
[31m-DefV.SelectBest       = 'comb';    % {'N','std','meanerr','comb'}[m
[31m-%DefV.RegionMaxConn = 8;[m
[31m-[m
[31m-if (~isempty(varargin))[m
[31m-    InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-else[m
[31m-    InPar = DefV;[m
[31m-end[m
[31m-[m
[31m-[m
[31m-% set SearchRangeX/Y[m
[31m-if (isempty(InPar.SearchRangeX))[m
[31m-    SizeX = max(Cat(:,InPar.ColXc)).*InPar.SearchRangeFactor;[m
[31m-    InPar.SearchRangeX = [-SizeX +SizeX];[m
[31m-end[m
[31m-if (isempty(InPar.SearchRangeY))[m
[31m-    SizeY = max(Cat(:,InPar.ColYc)).*InPar.SearchRangeFactor;[m
[31m-    InPar.SearchRangeY = [-SizeY +SizeY];[m
[31m-end[m
[31m-[m
[31m-% If SearchRange is a scalar then assume the range is symmetric[m
[31m-if (numel(InPar.SearchRangeX)==1)[m
[31m-    InPar.SearchRangeX = [-InPar.SearchRangeX InPar.SearchRangeX];[m
[31m-end[m
[31m-if (numel(InPar.SearchRangeY)==1)[m
[31m-    InPar.SearchRangeY = [-InPar.SearchRangeY InPar.SearchRangeY];[m
[31m-end[m
[31m-[m
[31m-% select best targets from List and Cat for matching[m
[31m-if (~isempty(InPar.FunCatSelect))[m
[31m-    FlagCat = InPar.FunCatSelect(Cat,InPar.FunCatSelectPar{:});[m
[31m-    Cat     = Cat(FlagCat,:);[m
[31m-end[m
[31m-if (~isempty(InPar.FunRefSelect))[m
[31m-    FlagRef = InPar.FunRefSelect(Ref,InPar.FunRefSelectPar{:});[m
[31m-    Ref     = Cat(FlagRef,:);[m
[31m-end[m
[31m-[m
[31m-% % select best targets from List and Cat for matching[m
[31m-% % select targets if columns are in required range[m
[31m-% FlagSelCat = Util.array.array_select(Cat,InPar.CatSelectOp,InPar.CatSelect{:});[m
[31m-% FlagSelRef = Util.array.array_select(Ref,InPar.RefSelectOp,InPar.RefSelect{:});[m
[31m-% SubCat     = Cat(FlagSelCat,:);[m
[31m-% SubRef     = Ref(FlagSelRef,:);[m
[31m-[m
[31m-    [m
[31m-% number of elements in Ref and Cat[m
[31m-Ncat = size(Cat,1);[m
[31m-Nref = size(Ref,1);[m
[31m-[m
[31m-% if InPar.MinNinPeak<1 then use it as the fraction of matches for Ncat[m
[31m-if (InPar.MinNinPeak<1)[m
[31m-    InPar.MinNinPeak = ceil(InPar.MinNinPeak.*Ncat);[m
[31m-end[m
[31m-[m
[31m-[m
[31m-%Xref = Ref(:,InPar.ColXr);[m
[31m-%Yref = Ref(:,InPar.ColYr);[m
[31m-[m
[31m-% if (InPar.MaxPeaksCheck>0 && ~issorted(Ycat))[m
[31m-%     error('Input catalog is not sorted');[m
[31m-% end[m
[31m-[m
[31m-Nflip = size(InPar.Flip,1);[m
[31m-Res = [];[m
[31m-for Iflip=1:1:Nflip[m
[31m-    % Vectors of X/Y coordinates[m
[31m-    Xcat = Cat(:,InPar.ColXc);[m
[31m-    Ycat = Cat(:,InPar.ColYc);[m
[31m-[m
[31m-    % Flip coordinates[m
[31m-    % Note this assumes that the coordinates are specified relative to[m
[31m-    % image center.[m
[31m-    Xcat = InPar.Flip(Iflip,1).*Xcat;[m
[31m-    Ycat = InPar.Flip(Iflip,2).*Ycat;[m
[31m-    [m
[31m-[m
[31m-    Nrot = numel(Rotation);[m
[31m-    for Irot=1:1:Nrot[m
[31m-        % rotate Cat - rotation in deg[m
[31m-        % note the rotation is applied after flip![m
[31m-        XcatRot = Xcat.*cosd(Rotation(Irot)) - Ycat.*sind(Rotation(Irot));[m
[31m-        YcatRot = Xcat.*sind(Rotation(Irot)) + Ycat.*cosd(Rotation(Irot));[m
[31m-        [m
[31m-        if (InPar.CutRefCat)[m
[31m-            MinX = min(XcatRot) - max(abs(InPar.SearchRangeX));[m
[31m-            MaxX = max(XcatRot) + max(abs(InPar.SearchRangeX));[m
[31m-            MinY = min(YcatRot) - max(abs(InPar.SearchRangeY));[m
[31m-            MaxY = max(YcatRot) + max(abs(InPar.SearchRangeY));[m
[31m-[m
[31m-            % use only Ref sources in SubCat region[m
[31m-            FinCut = Ref(:,InPar.ColXr)>MinX & ...[m
[31m-                     Ref(:,InPar.ColXr)<MaxX & ...[m
[31m-                     Ref(:,InPar.ColYr)>MinY & ...[m
[31m-                     Ref(:,InPar.ColYr)<MaxY;[m
[31m-                 [m
[31m-            RefSub = Ref(FinCut,:);[m
[31m-        else[m
[31m-            RefSub = Ref;[m
[31m-        end[m
[31m-[m
[31m-        [ResT,IndBest,H2]=ImUtil.pattern.match_pattern_shift([XcatRot,YcatRot],RefSub,...[m
[31m-                                                 'ColXc',1,...[m
[31m-                                                 'ColYc',2,...[m
[31m-                                                 'ColXr',InPar.ColXr,...[m
[31m-                                                 'ColYr',InPar.ColYr,...[m
[31m-                                                 'SearchRangeX',InPar.SearchRangeX,...[m
[31m-                                                 'SearchRangeY',InPar.SearchRangeY,...[m
[31m-                                                 'SearchRangeFactor',InPar.SearchRangeFactor,...[m
[31m-                                                 'SearchStepX',InPar.SearchStepX,...[m
[31m-                                                 'SearchStepY',InPar.SearchStepY,...[m
[31m-                                                 'MaxMethod',InPar.MaxMethod,...[m
[31m-                                                 'FalseAlarm',InPar.FalseAlarm,...[m
[31m-                                                 'RetSolFracMax',InPar.RetSolFracMax,...[m
[31m-                                                 'FunCatSelect',[],...[m
[31m-                                                 'FunCatSelectPar',{},...[m
[31m-                                                 'FunRefSelect',[],...[m
[31m-                                                 'FunRefSelectPar',{},...[m
[31m-                                                 'RetSolFracMax',InPar.RetSolFracMax,...[m
[31m-                                                 'MaxPeaks',InPar.MaxPeaks,...[m
[31m-                                                 'Radius',InPar.Radius,...[m
[31m-                                                 'SelectBest',InPar.SelectBest,...[m
[31m-                                                 'MaxPeaksCheck',0,...[m
[31m-                                                 'MinNinPeak',InPar.MinNinPeak);[m
[31m-        [m
[31m-        if (~isempty(IndBest))[m
[31m-            Npeak   = numel(ResT);[m
[31m-            CellRot = num2cell(Rotation(Irot).*ones(Npeak,1));[m
[31m-            [ResT(1:1:Npeak).Rot]   = deal(CellRot{:});[m
[31m-            CellFlipX = num2cell(InPar.Flip(Iflip,1).*ones(Npeak,1));[m
[31m-            CellFlipY = num2cell(InPar.Flip(Iflip,2).*ones(Npeak,1));[m
[31m-            [ResT(1:1:Npeak).FlipX]   = deal(CellFlipX{:});[m
[31m-            [ResT(1:1:Npeak).FlipY]   = deal(CellFlipY{:});[m
[31m-            if (isempty(Res))[m
[31m-                Res = ResT;[m
[31m-            else[m
[31m-                Res = [Res(:); ResT(:)];  [m
[31m-            end[m
[31m-        end[m
[31m-    end[m
[31m-end[m
[31m-[m
[31m-% return only solutions that their HistNmatch> MaxHistNmatch.*InPar.RetSolFracMax[m
[31m-if (~isempty(Res))[m
[31m-    % sort by HistNmatch[m
[31m-    [~,SI] = sort([Res.HistNmatch],2,'descend');[m
[31m-    Res    = Res(SI);[m
[31m-    [m
[31m-    MaxHistNmatch = max([Res.HistNmatch]);[m
[31m-    FlagFracMax   = [Res.HistNmatch]>(MaxHistNmatch.*InPar.RetSolFracMax);[m
[31m-    Res           = Res(FlagFracMax);[m
[31m-    [m
[31m-    [m
[31m-end[m
[31m-[m
[31m-[m
[31m-% Check if Res contains the multiple candidates of the same solution[m
[31m-if (numel(Res)>1)[m
[31m-    DD = sqrt(([Res.HistShiftX] - [Res.HistShiftX]').^2 + ([Res.HistShiftY] - [Res.HistShiftY]').^2 );[m
[31m-    CritDist = sqrt(InPar.SearchStepX.^2 + InPar.SearchStepY.^2).*1.5;[m
[31m-    [DI,DJ] = find(triu(DD)>CritDist);[m
[31m-    % keep only one solution [m
[31m-    Res = Res([1;DI]);[m
[31m-end[m
[31m-[m
[31m-Npeak      = numel(Res);[m
[31m-NpeakCheck = min(InPar.MaxPeaksCheck,Npeak);   % max. number of peaks to check[m
[31m-%Res   = struct_def({'IndRef','IndCat','MatchedCat','MatchedRef','MatchedResid','StdResid','Std','MeanErr'},Npeak,1);[m
[31m-for Ipeak=1:1:NpeakCheck[m
[31m-    % given possible shift[m
[31m-    % matche Cat and Ref [m
[31m-    [m
[31m-    Xcat = Cat(:,InPar.ColXc);[m
[31m-    Ycat = Cat(:,InPar.ColYc);[m
[31m-%     Xcat = Res(Ipeak).FlipX.*Xcat;[m
[31m-%     Ycat = Res(Ipeak).FlipY.*Ycat;[m
[31m-[m
[31m-    %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-    %[ResMatch,OutCat]     = ImUtil.pattern.test_match(Cat,Ref,[Res(Ipeak).ShiftX, Res(Ipeak).ShiftY, Res(Ipeak).Rot./RAD],'Radius',InPar.Radius);[m
[31m-    %[ResMatch,OutCat,CatS]= ImUtil.pattern.test_match([Xcat, Ycat],Ref,...[m
[31m-    %                                                  [Res(Ipeak).ShiftX, Res(Ipeak).ShiftY, Res(Ipeak).Rot./RAD],...[m
[31m-    %                                                  'Radius',InPar.Radius,...[m
[31m-    %                                                  'Flip',[Res(Ipeak).FlipX, Res(Ipeak).FlipY]);[m
[31m-    [m
[31m-    %inserting the whole catalog instead of only X-Y columns[m
[31m-    [ResMatch,OutCat,CatS]= ImUtil.pattern.test_match(Cat,Ref,...[m
[31m-                                                      'ColXc',InPar.ColXc,...[m
[31m-                                                      'ColYc',InPar.ColYc,...[m
[31m-                                                      [Res(Ipeak).ShiftX, Res(Ipeak).ShiftY, Res(Ipeak).Rot./RAD],...[m
[31m-                                                      'Radius',InPar.Radius,...[m
[31m-                                                      'Flip',[Res(Ipeak).FlipX, Res(Ipeak).FlipY]);[m
[31m-    %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-                                                  [m
[31m-    Res(Ipeak).Nmatch     = numel(ResMatch.IndCat);[m
[31m-    %Res(Ipeak).MatchedCat = OutCat(ResMatch.IndCat,:);[m
[31m-    Res(Ipeak).MatchedCat = CatS(ResMatch.IndCat,:);[m
[31m-    %Res(Ipeak).MatchedCat = Cat(ResMatch.IndCat,1:2);[m
[31m-    Res(Ipeak).MatchedRef = Ref(ResMatch.IndRef,:);[m
[31m-    Res(Ipeak).ResidX     = ResMatch.ResidX;[m
[31m-    Res(Ipeak).ResidY     = ResMatch.ResidY;[m
[31m-    Res(Ipeak).Resid      = sqrt(ResMatch.ResidX.^2 + ResMatch.ResidY.^2);[m
[31m-    Res(Ipeak).StdX       = ResMatch.StdX;[m
[31m-    Res(Ipeak).StdY       = ResMatch.StdY;[m
[31m-    Res(Ipeak).Std        = std(Res(Ipeak).Resid);[m
[31m-    Res(Ipeak).Rstd       = Util.stat.rstd(Res(Ipeak).Resid);[m
[31m-    Res(Ipeak).MeanErr    = Res(Ipeak).Rstd./sqrt(Res(Ipeak).Nmatch);[m
[31m-end[m
[31m-[m
[31m-  [m
[31m-if (Npeak==0)[m
[31m-    IndBest = [];[m
[31m-else[m
[31m-    if (NpeakCheck==0)[m
[31m-        % can use only MaxHistMatch[m
[31m-        [~,IndBest] = min([Res.HistNmatch]);[m
[31m-    else[m
[31m-[m
[31m-        switch lower(InPar.SelectBest)[m
[31m-            case 'meanerr'[m
[31m-                [~,IndBest] = min([Res.MeanErr]);[m
[31m-            case 'std'[m
[31m-                [~,IndBest] = min([Res.Std]);[m
[31m-            case 'rstd'[m
[31m-                [~,IndBest] = min([Res.Rstd]);[m
[31m-            case 'n'[m
[31m-                [~,IndBest] = max([Res.Nmatch]);[m
[31m-            case 'comb'[m
[31m-                MaxNmatch = max([Res.Nmatch]);[m
[31m-                IndGood = find([Res.Nmatch]>(MaxNmatch.*0.8));[m
[31m-                [~,IndBest] = min([Res(IndGood).MeanErr]);[m
[31m-                IndBest = IndGood(IndBest);[m
[31m-            otherwise[m
[31m-                error('Unknown SelectBest option');[m
[31m-        end[m
[31m-    end[m
[31m-end[m
[31m-[m
[31m-[m
[31m-[m
[31m-% % order Res by quality of solution[m
[31m-% switch lower(InPar.SortResBy)[m
[31m-%     case 'n'[m
[31m-%         [~,SI] = sort([Res.Nmatch]);[m
[31m-%     otherwise[m
[31m-%         error('Unknown SortResBy option');[m
[31m-% end[m
[31m-% Res = Res(SI);[m
[31m-[m
[31m-% go over all possible peaks in the 2D histogram of X/Y distances[m
[31m-% and for each possibility search for matches in the complete[m
[31m-% catalogs[m
[31m-%Npeak      = numel(Res);[m
[31m-%NpeakCheck = min(InPar.MaxPeaksCheckInd,Npeak);   % max. number of peaks to check[m
[31m-%Res   = struct_def({'IndRef','IndCat','MatchedCat','MatchedRef','MatchedResid','StdResid','Std','MeanErr'},Npeak,1);[m
[31m-[m
[31m-% % select best[m
[31m-% Res        = Res(1:NpeakCheck);[m
[31m-% for Ipeak=1:1:NpeakCheck[m
[31m-%     % given possible shift[m
[31m-%     % matche Cat and Ref [m
[31m-%     [m
[31m-%     [ResMatch,OutCat]     = ImUtil.pattern.test_match(Cat,Ref,[Res(Ipeak).ShiftX, Res(Ipeak).ShiftY],'Radius',InPar.Radius);[m
[31m-%     Res(Ipeak).Nmatch     = numel(ResMatch.IndCat);[m
[31m-%     Res(Ipeak).MatchedCat = OutCat(ResMatch.IndCat,:);[m
[31m-%     Res(Ipeak).MatchedRef = Ref(ResMatch.IndRef,:);[m
[31m-%     Res(Ipeak).ResidX     = ResMatch.ResidX;[m
[31m-%     Res(Ipeak).ResidY     = ResMatch.ResidY;[m
[31m-%     Res(Ipeak).Resid      = sqrt(ResMatch.ResidX.^2 + ResMatch.ResidY.^2);[m
[31m-%     Res(Ipeak).StdX       = ResMatch.StdX;[m
[31m-%     Res(Ipeak).StdY       = ResMatch.StdY;[m
[31m-%     Res(Ipeak).Std        = std(Res(Ipeak).Resid);[m
[31m-%     Res(Ipeak).Rstd       = Util.stat.rstd(Res(Ipeak).Resid);[m
[31m-%     Res(Ipeak).MeanErr    = Res(Ipeak).Std./sqrt(Res(Ipeak).Nmatch);[m
[31m-% end[m
[1mdiff --git a/@AstCat/astrometry.m b/@AstCat/astrometry.m[m
[1mindex 2b45ee8..08a00a2 100644[m
[1m--- a/@AstCat/astrometry.m[m
[1m+++ b/@AstCat/astrometry.m[m
[36m@@ -295,7 +295,7 @@[m [mfor Isim=1:1:Nsim[m
                                             [m
             %apply the limit on the PM error (if given by the user)[m
             if (~isempty(InPar.MaxPMerr))[m
[31m-                IndForPMerr= RefCat.Cat(:,9)<InPar.MaxPMerr;[m
[32m+[m[32m                IndForPMerr= RefCat.Cat(:,RefCat.Col.ErrPMRA)<InPar.MaxPMerr;[m
                 RefCat.Cat=RefCat.Cat(IndForPMerr,:);[m
             end[m
             %%% ----- !!!!!!!!!!!  ----- !!!!!!!!!!!![m
[1mdiff --git a/@AstCat/astrometry.m~ b/@AstCat/astrometry.m~[m
[1mdeleted file mode 100644[m
[1mindex 21feae1..0000000[m
[1m--- a/@AstCat/astrometry.m~[m
[1m+++ /dev/null[m
[36m@@ -1,674 +0,0 @@[m
[31m-function [ResAst,OrigSim]=astrometry(Sim,varargin)[m
[31m-% Search astrometric solution to an image or catalog.[m
[31m-% Package: @AstCat[m
[31m-% Description: Search astrometric solution to an image or catalog.[m
[31m-%              Given a guess coordinates to an image or catalogs (of X/Y[m
[31m-%              positions), the image plate scale, and rough rotation,[m
[31m-%              the program attemt to identify the stars in the image[m
[31m-%              relative to stars in a reference catalog.[m
[31m-%              The matched stars are than used to solve for a[m
[31m-%              transformation between the X/Y coordinates and the RA/Dec.[m
[31m-%              The program is designed to be robust against failures. As[m
[31m-%              such the matching is doing in sub sections of the main image[m
[31m-%              so if some are failed there is still a chance to recover.[m
[31m-%              The fitting is done, by default, using orthogonal[m
[31m-%              polynomilas that makes the solution more stable.[m
[31m-% Input  : - An AstCat object or a SIM object.[m
[31m-%            An AstCat object that contains a catalog of sources in the[m
[31m-%            image, or a SIM object that contains an image and optionaly a[m
[31m-%            catalog of sources. If the catalog of sources in a SIM object[m
[31m-%            is not provided, then the sources will be extracted.[m
[31m-%          * Arbitrary number of pairs of arguments: ...,keyword,value,...[m
[31m-%            where keyword are one of the followings:[m
[31m-%            '[m
[31m-% Output : - A structure array of astrometric solutions and quality[m
[31m-%            parameters for each image.[m
[31m-%          - [m
[31m-% License: GNU general public license version 3[m
[31m-%     By : Eran O. Ofek                    Jan 2018[m
[31m-%    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-% Example: ResAst=astrometry(Sim);[m
[31m-% Reliable: 2[m
[31m-%--------------------------------------------------------------------------[m
[31m-[m
[31m-RAD = 180./pi;[m
[31m-[m
[31m-CatField  = AstCat.CatField;[m
[31m-OrigColXY = {'dup_X','dup_Y'};[m
[31m-[m
[31m-[m
[31m-[m
[31m-%--- Source extractor parameters ---[m
[31m-DefV.RePopCat           = false;[m
[31m-DefV.SrcExtractorProg   = @mextractor;[m
[31m-DefV.SrcExtractorPar    = {};[m
[31m-%--- Approximate guess position ---[m
[31m-DefV.Scale              = 1.01; % arcsec/pix[m
[31m-DefV.RA                 = [];   % rad,...[m
[31m-DefV.Dec                = [];   % rad,...[m
[31m-DefV.Equinox            = 2000.0;[m
[31m-DefV.KeyScale           = 'SCALE'; %[m
[31m-DefV.KeyRA              = {'RA','OBJRA','OBJRAD','CRVAL1'};[m
[31m-DefV.KeyDec             = {'DEC','OBJDEC','OBJDECD','CRVAL2'};[m
[31m-DefV.KeyEquinox         = {'EQUINOX'};[m
[31m-DefV.UnitsRA            = [];       % [], 'deg','r'[m
[31m-DefV.UnitsDec           = [];       % [], 'deg','r'[m
[31m-%--- Reference catalog ---[m
[31m-DefV.RefCat             = 'GAIADR2';  %@get_ucac4; %@wget_ucac4;   % string, function, struct[m
[31m-DefV.RCrad              = 0.8./RAD; %0.8/RAD;   % [radian][m
[31m-DefV.RefCatMagRange     = [12 19.0]; %19.0];[m
[31m-DefV.UseMagRangeCat     = false;[m
[31m-DefV.MaxRefStars        = 15000;[m
[31m-DefV.Shape              = 'box';[m
[31m-DefV.RC_ColRA           = 'RA';[m
[31m-DefV.RC_ColDec          = 'Dec';[m
[31m-DefV.RC_ColMag          = 'Mag_G'; %'MagModel'; %'ModelMag';[m
[31m-DefV.RC_ColColor        = 'Mag_BP-Mag_RP';[m
[31m-DefV.ApplyPM            = false; %true; %true;[m
[31m-DefV.RC_ColPM_RA        = 'PMRA';[m
[31m-DefV.RC_ColPM_Dec       = 'PMDec';[m
[31m-DefV.RC_ColPlx          = 'Plx';[m
[31m-DefV.RC_ColRV           = 'RV';[m
[31m-DefV.RC_EpochInRA       = 'Epoch';[m
[31m-DefV.RC_EpochInDec      = 'Epoch';[m
[31m-DefV.RC_EpochInUnits    = 'yr';[m
[31m-DefV.CutRefCat          = true; %false;[m
[31m-%--- Catalog ---[m
[31m-DefV.ImSize             = [];  % [x,y][m
[31m-DefV.ColXc              = {'XWIN_IMAGE','X','xpos'};[m
[31m-DefV.ColYc              = {'YWIN_IMAGE','Y','ypos'};[m
[31m-DefV.CatColMag          = 'MAG_PSF';  % Mag column name in SIM[m
[31m-%--- Cleaning ---[m
[31m-DefV.CleanLines         = true;[m
[31m-DefV.FlagLinesPar       = {};[m
[31m-DefV.CleanOverDense     = true;[m
[31m-DefV.FlagOverdensePar   = {};[m
[31m-%--- Matching ---[m
[31m-DefV.Flip               = [1 -1]; %1 1];[m
[31m-DefV.MatchRotMethod     = 'xcrot';     % 'scan' | 'xcrot'[m
[31m-DefV.HistDistEdges      = (12:3:300)';[m
[31m-DefV.MinRot             = -15;[m
[31m-DefV.MaxRot             = +15;[m
[31m-DefV.StepRot            = 0.5;[m
[31m-DefV.ReFindMatches      = true;[m
[31m-DefV.SearchRangeX       = [-1000 1000]; %[-1000 1000];[m
[31m-DefV.SearchRangeY       = [-1000 1000]; %[-1000 1000];[m
[31m-DefV.SearchRangeFactor  = 0.5;[m
[31m-DefV.SearchStepX        = 4; %3;[m
[31m-DefV.SearchStepY        = 4; %3;[m
[31m-DefV.SearchRad          = 4; %3;   % pix[m
[31m-DefV.MaxMethod          = 'adaptive'; %'sort';       % {'max1'|'sort'|'[m
[31m-DefV.MinNinPeak         = 5;            % min number of matches in peak - if <1 then fraction of ListCat[m
[31m-DefV.MaxPeaks           = 10;           % maximum number of peaks to return[m
[31m-DefV.MaxPeaksCheckI     = 5;     % 10      % out of the returned peaks - this is the maximum nuber of peaks to check[m
[31m-DefV.MaxPeaksCheckF     = 5;     % 10      % out of the returned peaks - this is the maximum nuber of peaks to check[m
[31m-DefV.SelectBest         = 'comb';    % {'N','std','meanerr','comb'}[m
[31m-DefV.FalseAlarm         = 1e-4;[m
[31m-DefV.RegionMaxConn      = 8;[m
[31m-DefV.AdjustStarDensity  = true;[m
[31m-DefV.MaxDensityAdjust   = 0.5; % 0.5;[m
[31m-DefV.NstarsRescaleBlock = 9000;     % if Nstars> then shrink blocksize by x2 and increase StepRot by x2[m
[31m-DefV.ReScaleFactor      = 2;[m
[31m-DefV.BlockSize          = [1024 1024]; %[512 512]; %[1024 1024]; %'full';[m
[31m-DefV.BufferSize         = 200;[m
[31m-[m
[31m-%--- Fitting ---[m
[31m-%DefV.UseCase_TranC      = {'affine',             5}; %{'affine_tt_cheby2_4', 100; 'affine_tt_cheby2_3', 70; 'affine_tt',          20; 'affine',             5};[m
[31m-DefV.UseCase_TranC      = {'affine_tt_cheby2_4', 100; 'affine_tt_cheby2_3', 70; 'affine_tt',          10; 'affine',             5};[m
[31m-DefV.Niter              = 1;[m
[31m-DefV.SigClip            = 5;[m
[31m-DefV.MaxResid           = 1./3600;  % assuming coordinates in deg[m
[31m-%--- Analysis ---[m
[31m-DefV.AnalysisBlockSize  = [512 512];[m
[31m-%--- Verbose/plot ---[m
[31m-DefV.Verbose            = true;[m
[31m-DefV.Plot               = false;[m
[31m-[m
[31m-%maximum Excess noise in the reference catalog (GAIA)[m
[31m-DefV.MaxExcessNoise     = 10;[m
[31m-%threshold for proper motion errors(GAIA)[m
[31m-DefV.MaxPMerr           = [];[m
[31m-%Logical for applying parallax correction (barycentric)[m
[31m-DefV.ApplyParallax      = false;[m
[31m-[m
[31m-InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-[m
[31m-% number of images[m
[31m-Nsim = numel(Sim);[m
[31m-[m
[31m-%------------------------[m
[31m-%--- source extractor ---[m
[31m-%------------------------[m
[31m-if (SIM.issim(Sim))[m
[31m-    IsCatPop = isfield_populated(Sim, CatField);[m
[31m-    if (~any(IsCatPop))[m
[31m-        Sim(~IsCatPop) = InPar.SrcExtractorProg(Sim(~IsCatPop),InPar.SrcExtractorPar{:});[m
[31m-    else[m
[31m-        if (InPar.RePopCat)[m
[31m-            Sim(~IsCatPop) = InPar.SrcExtractorProg(Sim(~IsCatPop),InPar.SrcExtractorPar{:});[m
[31m-        end[m
[31m-    end[m
[31m-else[m
[31m-    % assume SIM is an AstCat object with populated catalog[m
[31m-end[m
[31m-[m
[31m-%-----------------------------------------------[m
[31m-%--- Convert user supplied coo user to J2000 ---[m
[31m-%-----------------------------------------------[m
[31m-if (~isempty(InPar.RA) && ~isempty(InPar.Dec))[m
[31m-    % User supplied RA/Dec[m
[31m-    RA  = celestial.coo.convertdms(InPar.RA,'gH','r');[m
[31m-    Dec = celestial.coo.convertdms(InPar.Dec,'gD','R');[m
[31m-    if (InPar.Equinox~=2000)[m
[31m-        Coo2000 = celestial.coo.coco([RA,Dec],sprintf('j%06.1f',InPar.Equinox),'j2000.0');  % Na'ama, 20180524[m
[31m-        RA  = Coo2000(:,1);[m
[31m-        Dec = Coo2000(:,2);[m
[31m-    end    [m
[31m-else[m
[31m-    % Read RA/Dec from header[m
[31m-    Out     = getcoo(Sim,'KeyRA',InPar.KeyRA,'KeyDec',InPar.KeyDec,'KeyEquinox',InPar.KeyEquinox,'OutUnits','rad');[m
[31m-    Coo2000 = celestial.coo.coco([[Out.RA].',[Out.Dec].'],sprintf('j%06.1f',Out(1).Equinox),'j2000.0');[m
[31m-    RA  = Coo2000(:,1);[m
[31m-    Dec = Coo2000(:,2);[m
[31m-end[m
[31m-[m
[31m-%--- Read scale ---[m
[31m-if (isempty(InPar.Scale))[m
[31m-    Val = cell2mat(mgetkey(Sim,InPar.KeyScale));[m
[31m-    if any(isnan(Val))[m
[31m-        error('Some header scale keyword values are not available');[m
[31m-    end[m
[31m-    [m
[31m-    InPar.Scale = Val;[m
[31m-else[m
[31m-    InPar.Scale = InPar.Scale(:).*ones(Nsim,1);[m
[31m-end[m
[31m-[m
[31m-% Debuging   [m
[31m-%Dec = Dec - 10./3600./RAD;[m
[31m-% [RA,Dec]=xy2coo(S,[1; 1024],[1; 2048]); [RA1,Dec1]=xy2coo(S1,[1; 1024],[1; 2048]); (RA-RA1).*RAD.*3600, (Dec-Dec1).*RAD.*360[m
[31m-[m
[31m-%------------------[m
[31m-%--- Image size ---[m
[31m-%------------------[m
[31m-if (~isempty(InPar.ImSize))[m
[31m-    ImSize = InPar.ImSize;    % [X, Y][m
[31m-else[m
[31m-    ImSize = imagesize(Sim);  % [X, Y][m
[31m-end[m
[31m-[m
[31m-[m
[31m-OrigSim = Sim;[m
[31m-[m
[31m-% astrometry for each image[m
[31m-FitRes     = Util.struct.struct_def({'Par','ParErr','Resid','ResidX','ResidY','ResidT',...[m
[31m-                         'Rrms','Chi2','Nobs','Npar','Ndof','rms','AstT','Flag','rmsAll','RrmsAll','Wrms','MagRef','Xref','Yref'},Nsim,1);[m
[31m-Log        = Util.struct.struct_def({'PatternMatch','FitMerge','FitFinal','Analysis'},Nsim,1);[m
[31m-ReturnFlag = false(Nsim,1);[m
[31m-for Isim=1:1:Nsim[m
[31m-[m
[31m-    [m
[31m-    Scale = InPar.Scale(Isim);[m
[31m-    [m
[31m-    %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-    %add column with the order of the objects in the catalog [m
[31m-    %Y location sorted in order find the objects that used in the fit[m
[31m-    [m
[31m-    [m
[31m-    [~,ColXc]     = select_exist_colnames(Sim(Isim),InPar.ColXc(:));[m
[31m-    [~,ColYc]     = select_exist_colnames(Sim(Isim),InPar.ColYc(:));[m
[31m-    [m
[31m-    Sim(Isim).Cat(:,end+1)=(1:1:length(Sim(Isim).Cat(:,ColXc))).'; [m
[31m-[m
[31m-    Sim(Isim) = col_insert(Sim(Isim),...[m
[31m-            (1:1:length(Sim(Isim).Cat(:,ColXc))).', [m
[31m-    [m
[31m-    Sim(Isim).Col.IndexSimYsorted=length(Sim(Isim).Cat(1,:)); [m
[31m-    [m
[31m-    Sim(Isim).ColCell{end+1}='IndexSimYsorted'; [m
[31m-    [m
[31m-    [m
[31m-    %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-    %--------------------------[m
[31m-    %--- Reference Catalaog ---[m
[31m-    %--------------------------[m
[31m-    if (AstCat.isastcat(InPar.RefCat) || isstruct(InPar.RefCat))[m
[31m-        % RefCat was provided[m
[31m-        RefCat = InPar.RefCat;[m
[31m-[m
[31m-        % convert to AstCat object[m
[31m-        RefCat = AstCat.struct2astcat(RefCat);[m
[31m-    else[m
[31m-        % External catalog was not provided[m
[31m-        % try to retrieve[m
[31m-        RefCat = VO.search.cat_cone(InPar.RefCat,RA(1),Dec(1),InPar.RCrad,'RadiusUnits','rad','OutType','astcat');[m
[31m-    end[m
[31m-    [m
[31m-    % what to do if RefCat is empty[m
[31m-    if (isempty(RefCat.Cat))[m
[31m-        % No reference catalog found - astrometric solution failed[m
[31m-        %ResAst(Isim) = [];[m
[31m-        warning('Reference catalog is empty - no solution found');[m
[31m-    else[m
[31m-        % RefCat is not empty[m
[31m-        [m
[31m-        % clean the GAIA catalog[m
[31m-        switch lower(InPar.RefCat)[m
[31m-            case 'gaiadr1'[m
[31m-                % remove sources with excess noise >5 sigma and outside the[m
[31m-                % mag range[m
[31m-                InPar.RC_ColMag = 'MagG';   % override mag column[m
[31m-                F = RefCat.(CatField)(:,8) < 80 & RefCat.(CatField)(:,5)> InPar.RefCatMagRange(1) & RefCat.(CatField)(:,5)< InPar.RefCatMagRange(2);[m
[31m-                RefCat.(CatField) = RefCat.(CatField)(F,:);[m
[31m-                [m
[31m-            case 'gaiadr2'[m
[31m-                MagG = col_get(RefCat,{InPar.RC_ColMag});[m
[31m-                ExcessNoise = col_get(RefCat,{'ExcessNoise'});[m
[31m-                F = ExcessNoise<InPar.MaxExcessNoise & MagG> InPar.RefCatMagRange(1) & MagG< InPar.RefCatMagRange(2);[m
[31m-                RefCat.(CatField) = RefCat.(CatField)(F,:);[m
[31m-                [m
[31m-                [m
[31m-        end[m
[31m-        [m
[31m-        %---------------------------[m
[31m-        %--- apply proper motion ---[m
[31m-        %---------------------------[m
[31m-        if (InPar.ApplyPM)[m
[31m-            % applay proper motion, RV and parallax to star positions[m
[31m-            EpochOut = julday(Sim);  % get JD of image - (image epoch)[m
[31m-            %%% ----- !!!!!!!!!!!  ----- !!!!!!!!!!!![m
[31m-            [m
[31m-            %The field 'ApplyParallax' added to the apply proper motion[m
[31m-            %call[m
[31m-            RefCat = apply_proper_motion(RefCat,'EpochInRA',InPar.RC_EpochInRA,...[m
[31m-                                                'EpochInDec',InPar.RC_EpochInDec,...[m
[31m-                                                'EpochInUnits',InPar.RC_EpochInUnits,...[m
[31m-                                                'EpochOut',EpochOut,...[m
[31m-                                                'EpochOutUnits','JD',...[m
[31m-                                                'ColPM_RA',InPar.RC_ColPM_RA,...[m
[31m-                                                'ColPM_Dec',InPar.RC_ColPM_Dec,...[m
[31m-                                                'ColPlx',InPar.RC_ColPlx,...[m
[31m-                                                'ColRV',InPar.RC_ColRV, ...[m
[31m-                                                'ApplyParallax', InPar.ApplyParallax);[m
[31m-                                            [m
[31m-            %apply the limit on the PM error (if given by the user)[m
[31m-            if (~isempty(InPar.MaxPMerr))[m
[31m-                IndForPMerr= RefCat.Cat(:,9)<InPar.MaxPMerr;[m
[31m-                RefCat.Cat=RefCat.Cat(IndForPMerr,:);[m
[31m-            end[m
[31m-            %%% ----- !!!!!!!!!!!  ----- !!!!!!!!!!!![m
[31m-        end[m
[31m-[m
[31m-        % Generate a version of the reference catalog with only selected columns[m
[31m-        % RA, Dec, Mag, Color[m
[31m-        [RC_ColRA, RC_ColDec, RC_ColMag] = colname2ind(RefCat,{InPar.RC_ColRA, InPar.RC_ColDec, InPar.RC_ColMag});[m
[31m-        RC                = col_arith(RefCat,{InPar.RC_ColRA,InPar.RC_ColDec,...[m
[31m-                                                  InPar.RC_ColMag,InPar.RC_ColColor},...[m
[31m-                                      'astcat',true);[m
[31m-        RC.ColCell        = {InPar.RC_ColRA,InPar.RC_ColDec,'Mag','Color'};[m
[31m-        RC_ColMag         = 3;   % Mag in 3rd column[m
[31m-        RC                = colcell2col(RC);[m
[31m-[m
[31m-        % applay MaxRefStars[m
[31m-        % If Ref catalogs have too many starts select only the brightest[m
[31m-        NrefStars = size(RC.(CatField),1);[m
[31m-        if (NrefStars>InPar.MaxRefStars)[m
[31m-            [~,IsM] = sort(RC.(CatField)(:,RC_ColMag));[m
[31m-            MaxMag  = RC.(CatField)(IsM(InPar.MaxRefStars),RC_ColMag);[m
[31m-            FlagMM  = RC.(CatField)(:,RC_ColMag)<MaxMag;[m
[31m-            RC.(CatField) = RC.(CatField)(FlagMM,:);[m
[31m-            [m
[31m-        end[m
[31m-            [m
[31m-        [m
[31m-        % calculate average density of sources in RefCat (RC):[m
[31m-        % this is used to adjust the number of stars in the catalog and reference.[m
[31m-        DensityRef = size(RC.Cat,1)./(pi.*(InPar.RCrad.*RAD).^2);   % stars/deg^2[m
[31m-[m
[31m-[m
[31m-        % project catalog coordinates from celestial sphere to plane[m
[31m-        % X,Y in units of pixels (using first guess pixel scale).[m
[31m-        % Note that the X=0,Y=0 position is the position defined[m
[31m-        % by the guess RA/Dec (RA, Dec parameters).[m
[31m-        % This are the "projection-plan coordinates"[m
[31m-        % relative to the native long and lat of the fiducial point[m
[31m-        [X,Y]=projection(RC,'tan',[RC_ColRA RC_ColDec],[RAD.*3600./Scale RA Dec],'rad');[m
[31m-        % add the projected X/Y as the 1st and 2nd columns in the reference catalog[m
[31m-        ColRef   = {'X','Y'};[m
[31m-        RC = col_insert(RC,X,1,'X');[m
[31m-        RC = col_insert(RC,Y,2,'Y');[m
[31m-        RC_ColMag         = 5;  % Mag is now in the 5th column![m
[31m-        % sort the reference catalog by the Y position[m
[31m-        RC = sortrows(RC,'Y');[m
[31m-        % plot(RC.Cat(:,1),RC.Cat(:,2),'.')[m
[31m-[m
[31m-        %------------------[m
[31m-        %--- Prep image ---[m
[31m-        %------------------[m
[31m-        CatColMagInd = colname2ind(Sim(Isim),InPar.CatColMag);[m
[31m-        [m
[31m-        % mag range[m
[31m-        if (InPar.UseMagRangeCat)[m
[31m-            FlagM = Sim(Isim).(CatField)(:,CatColMagInd)>InPar.RefCatMagRange(1) & ...[m
[31m-                    Sim(Isim).(CatField)(:,CatColMagInd)<InPar.RefCatMagRange(2);[m
[31m-            Sim(Isim).(CatField) = Sim(Isim).(CatField)(FlagM,:);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % clean sources out of image boundries[m
[31m-        [~,ColXc]     = select_exist_colnames(Sim(Isim),InPar.ColXc(:));[m
[31m-        [~,ColYc]     = select_exist_colnames(Sim(Isim),InPar.ColYc(:));[m
[31m-        [m
[31m-        FlagIn = Sim(Isim).(CatField)(:,ColXc)>0 & ...[m
[31m-                 Sim(Isim).(CatField)(:,ColXc)<ImSize(1) & ...[m
[31m-                 Sim(Isim).(CatField)(:,ColYc)>0 & ...[m
[31m-                 Sim(Isim).(CatField)(:,ColYc)<ImSize(2);[m
[31m-        Sim(Isim).(CatField) = Sim(Isim).(CatField)(FlagIn,:);[m
[31m-             [m
[31m-        % clean lines/rows[m
[31m-        % search for excess of sources on the same line/row and remove[m
[31m-        if (InPar.CleanLines)[m
[31m-            FlagCat = flag_bleeding_src(Sim(Isim),InPar.FlagLinesPar{:});[m
[31m-            Sim(Isim).(CatField) = Sim(Isim).(CatField)(~FlagCat.Flag,:);[m
[31m-        end[m
[31m-[m
[31m-        % clean overdensity regions[m
[31m-        % search for excess f sources in some regions and remove[m
[31m-        if (InPar.CleanOverDense)[m
[31m-            FlagCat = flag_overdense_src(Sim,InPar.FlagOverdensePar{:});[m
[31m-            Sim(Isim).(CatField) = Sim(Isim).(CatField)(~FlagCat.Flag,:);[m
[31m-        end[m
[31m-        [m
[31m-        % adjust number of stars in Sim such that it will be roughly equal to[m
[31m-        % the star density in the reference image[m
[31m-        [m
[31m-        [m
[31m-        % Note that density adjustment can be done only if stars magnitudes[m
[31m-        % are provided[m
[31m-        % Check if magnitude is ok[m
[31m-        if (~isempty(CatColMagInd))[m
[31m-            if (numel(unique(Sim(Isim).(CatField)(:,CatColMagInd)))>1)[m
[31m-                ValidMag = true;[m
[31m-            else[m
[31m-                ValidMag = false;[m
[31m-            end[m
[31m-        else[m
[31m-            ValidMag = false;[m
[31m-        end[m
[31m-        if (~ValidMag && InPar.Verbose)[m
[31m-            warning('Invalid magnitudes - avoid using');[m
[31m-        end[m
[31m-[m
[31m-        if (InPar.AdjustStarDensity && ValidMag)[m
[31m-            DensityCat = size(Sim(Isim).Cat,1)./prod(ImSize(Isim,:).*Scale./3600);[m
[31m-            [m
[31m-            DensityRatio = DensityRef./DensityCat;[m
[31m-            [m
[31m-            if (DensityRatio<1)[m
[31m-                [m
[31m-                % adjust the number of sources in the Sim image[m
[31m-                Fraction = max(DensityRatio, InPar.MaxDensityAdjust);[m
[31m-                Quant    = quantile(Sim(Isim).Cat(:,CatColMagInd),Fraction);[m
[31m-                Flag     = Sim(Isim).Cat(:,CatColMagInd)<Quant;[m
[31m-                Sim(Isim).Cat = Sim(Isim).Cat(Flag,:);[m
[31m-                [m
[31m-                [m
[31m-            else[m
[31m-                DensityRatio = 1./DensityRatio;[m
[31m-               [m
[31m-                % adjust the number of sources in the Ref [m
[31m-                Fraction = max(DensityRatio, InPar.MaxDensityAdjust);[m
[31m-                Quant    = quantile(RC.Cat(:,RC_ColMag),Fraction);[m
[31m-                Flag     = RC.Cat(:,RC_ColMag)<Quant;[m
[31m-                RC.Cat   = RC.Cat(Flag,:);[m
[31m-            end[m
[31m-                [m
[31m-        end[m
[31m-[m
[31m-        [m
[31m-        [m
[31m-        [m
[31m-        % define VecRot[m
[31m-        % define BlockSize and step size based on number of stars[m
[31m-        Nsrc   = size(Sim(Isim).(CatField),1);[m
[31m-        if (Nsrc>InPar.NstarsRescaleBlock)[m
[31m-            if (InPar.Verbose)[m
[31m-                fprintf('ReScale BlockSize and StepRot by %f\n',InPar.ReScaleFactor);[m
[31m-            end[m
[31m-            BlockSize = InPar.BlockSize./InPar.ReScaleFactor;[m
[31m-            VecRot = (InPar.MinRot:InPar.ReScaleFactor.*InPar.StepRot:InPar.MaxRot).';[m
[31m-        else[m
[31m-            BlockSize = InPar.BlockSize;[m
[31m-            VecRot = (InPar.MinRot:InPar.StepRot:InPar.MaxRot).';[m
[31m-        end[m
[31m-[m
[31m-        % get X and Y column indices in SIM[m
[31m-        %[ColXc,ColYc] = colname2ind(Sim(Isim),{InPar.ColXc,InPar.ColYc});   [m
[31m-        %[~,ColXc]     = select_exist_colnames(Sim(Isim),InPar.ColXc(:));[m
[31m-        %[~,ColYc]     = select_exist_colnames(Sim(Isim),InPar.ColYc(:));[m
[31m-        [m
[31m-[m
[31m-        % Construct a table with [X,Y] columns only[m
[31m-[m
[31m-        SimCat = AstCat.sim2astcat(Sim(Isim));[m
[31m-[m
[31m-        % Duplicate X/Y columns in SimCat[m
[31m-        % Original X/Y are named: 'dup_X' and 'dup_Y'[m
[31m-        % transformed X/Y are '*WIN_IMAGE'...[m
[31m-        SimCat     = col_duplicate(SimCat,[ColXc,ColYc],OrigColXY);[m
[31m-[m
[31m-        % select sources in sub image [m
[31m-        % If the solution is done in sub image then this generate[m
[31m-        % a catalog for each sub image (block).[m
[31m-        [m
[31m-        SubCat     = subcat_regional(SimCat,ImSize(Isim,:),BlockSize,InPar.BufferSize,[ColXc,ColYc]);[m
[31m-        Nsub       = numel(SubCat);[m
[31m-      [m
[31m-        ResBest    = Util.struct.struct_def({'MaxHistMatch','MaxHistShiftX','MaxHistShiftY',...[m
[31m-                            'ShiftX','ShiftY','Tran','Nmatch','IndRef','IndCat',...[m
[31m-                            'MatchedCat','MatchedRef','MatchedResid','StdResid',...[m
[31m-                            'Std','MeanErr','BestRot','BestFlip'},Nsub,1);[m
[31m-                        [m
[31m-       ShiftRes = nan(Nsub,2);[m
[31m-       ImCenter = ImSize(Isim,:).*0.5;[m
[31m-       for Isub=1:1:Nsub[m
[31m-           %Isub[m
[31m-            % for each sub region[m
[31m-        [m
[31m-            % match ref catalog with image catalog[m
[31m-            % find also the correct image flip and rotation.[m
[31m-            % The origin of the reference catalog (RC) is [RA, Dec].[m
[31m-            % The origin of the image is its geometric center.[m
[31m-            % Note that the output MatchedCat[m
[31m-            % contains the columns: {'XWIN_IMAGE'  'YWIN_IMAGE'  'dup_X'  'dup_Y'}[m
[31m-            [m
[31m-            [m
[31m-            % SubCat contains sources in a sub image region[m
[31m-            % next line transform its coordinates from image corner to[m
[31m-            % image center (i.e., similar to that of the reference catalog)[m
[31m-            SubCat(Isub).(CatField)(:,[ColXc, ColYc]) = SubCat(Isub).(CatField)(:,[ColXc, ColYc]) - ImCenter;  % +[50 50];[m
[31m-            [m
[31m-            switch lower(InPar.MatchRotMethod)[m
[31m-                case 'xcrot'[m
[31m-                    % cross match the rotation using histogram of[m
[31m-                    % distances/angles[m
[31m-                    ResRot = ImUtil.pattern.match_pattern_rot(SubCat(Isub).(CatField),RC.(CatField),...[m
[31m-                                                              'CatColX',ColXc,...[m
[31m-                                                              'CatColY',ColYc,...[m
[31m-                                                              'HistDistEdges',InPar.HistDistEdges,...[m
[31m-                                                              'CutRefCat',InPar.CutRefCat,...[m
[31m-                                                              'SearchRangeX',InPar.SearchRangeX,...[m
[31m-                                                              'SearchRangeY',InPar.SearchRangeY);[m
[31m-[m
[31m-                    % go over all rotational possibilities[m
[31m-                    Nrot = size(ResRot.MatchedRot,1);[m
[31m-                    K = 0;[m
[31m-                    VecRotSel = [];[m
[31m-                    for Irot=1:1:Nrot[m
[31m-                        if (any(all(ResRot.MatchedRot(Irot,3:4)==InPar.Flip,2)))[m
[31m-                            K = K + 1;[m
[31m-                            VecRotSel(K) = ResRot.MatchedRot(Irot,1);[m
[31m-                        end[m
[31m-                    end[m
[31m-                    [m
[31m-                    if (isempty(VecRotSel))[m
[31m-                        % No rotation candidate solution found[m
[31m-                        % go back to scanning[m
[31m-                        VecRotSel = VecRot;[m
[31m-                    else[m
[31m-                    [m
[31m-                        Fvrs = VecRotSel<InPar.MaxRot | (VecRotSel>InPar.MinRot | VecRotSel>(360+InPar.MinRot));[m
[31m-                        VecRotSel = VecRotSel(Fvrs);[m
[31m-                        %ImUtil.pattern.match_pattern_rot finds minus the rotation[m
[31m-                        VecRotSel = -VecRotSel;[m
[31m-                    end[m
[31m-                case 'scan'[m
[31m-                    % match rotation by scanning all possible rotations[m
[31m-                    VecRotSel = VecRot;[m
[31m-                otherwise[m
[31m-                    error('Unknown MatchRotMethod option');[m
[31m-            end[m
[31m-           [m
[31m-            [Res,IndBest,H] = ImUtil.pattern.match_pattern_shift_rot(SubCat(Isub).(CatField),RC.(CatField),...[m
[31m-                                                        VecRotSel,...[m
[31m-                                                        'ColXc',ColXc,...[m
[31m-                                                        'ColYc',ColYc,...[m
[31m-                                                        'Flip',InPar.Flip,...[m
[31m-                                                        'CutRefCat',InPar.CutRefCat,...[m
[31m-                                                        'SearchRangeX',InPar.SearchRangeX,...[m
[31m-                                                        'SearchRangeY',InPar.SearchRangeY,...[m
[31m-                                                        'SearchRangeFactor',InPar.SearchRangeFactor,...[m
[31m-                                                        'SearchStepX',InPar.SearchStepX,...[m
[31m-                                                        'SearchStepY',InPar.SearchStepY,...[m
[31m-                                                        'Radius',InPar.SearchRad);[m
[31m-                                                    [m
[31m-                                             [m
[31m-            if (~isempty(Res) && ~isempty(IndBest))      [m
[31m-                ShiftRes(Isub,:) = [Res(IndBest).ShiftX, Res(IndBest).ShiftY];[m
[31m-                [m
[31m-                ResSub(Isub) = Res(IndBest);   [m
[31m-            end[m
[31m-            [m
[31m-       end[m
[31m-       [m
[31m-       % DEBUG[m
[31m-       %for Isub=1:1:8; plot(SubCat(Isub).Cat(:,2),SubCat(Isub).Cat(:,3),'.'); hold on; end[m
[31m-       %for Isub=1:1:8; plot(ResSub(Isub).MatchedCat(:,1),ResSub(Isub).MatchedCat(:,2),'.'); hold on; end[m
[31m-       [m
[31m-       MedianShift = nanmedian(ShiftRes,1);[m
[31m-       FlagShift   = abs(ShiftRes - MedianShift)< (max(InPar.SearchStepX,InPar.SearchStepY).*5);[m
[31m-       %FlagShift   = abs(ShiftRes - MedianShift)< (max(InPar.SearchStepX,InPar.SearchStepY).*50); % for LFC[m
[31m-       [m
[31m-       SubGood     = and(FlagShift(:,1),FlagShift(:,2));[m
[31m-       MatchedCat = [];[m
[31m-       MatchedRef = [];[m
[31m-       [m
[31m-       for Isub=1:1:Nsub[m
[31m-            % join the matched catalogs from the sub images[m
[31m-            if (SubGood(Isub))[m
[31m-                if (isempty(MatchedCat))[m
[31m-                    MatchedCat = ResSub(Isub).MatchedCat;[m
[31m-                    MatchedRef = ResSub(Isub).MatchedRef;[m
[31m-                else[m
[31m-                    MatchedCat = [MatchedCat; ResSub(Isub).MatchedCat];[m
[31m-                    MatchedRef = [MatchedRef; ResSub(Isub).MatchedRef];[m
[31m-                end[m
[31m-            end[m
[31m-       end[m
[31m-       [m
[31m-       [m
[31m-       if (isempty(MatchedRef) || isempty(MatchedCat))[m
[31m-           ResAst(Isim).ShiftRes = ShiftRes;[m
[31m-           ResAst(Isim).SubGood = any(SubGood);[m
[31m-       else[m
[31m-       [m
[31m-           Nmatch = size(MatchedRef,1);[m
[31m-           [m
[31m-           % select transformation based on number of sources[m
[31m-           Iuse = find([InPar.UseCase_TranC{:,2}]<Nmatch,1);[m
[31m-           if (isempty(Iuse))[m
[31m-               error('Number of stars (Nmatch=%d) is too low for solution',Nmatch);[m
[31m-           end[m
[31m-           TranC = InPar.UseCase_TranC{Iuse,1};[m
[31m-[m
[31m-           % A factor for normalizing the X/Y coordinates to unity[m
[31m-           NormXY = max(ImSize(Isim,:));[m
[31m-           % Fit transformation[m
[31m-%            ResAst(Isim) = ImUtil.pattern.fit_transform(MatchedRef,MatchedCat,TranC,'ImSize',ImSize(Isim,:),...[m
[31m-%                                                                           'BlockSize',InPar.AnalysisBlockSize,...[m
[31m-%                                                                           'NormXY',NormXY,...[m
[31m-%                                                                           'PolyMagDeg',3,...[m
[31m-%                                                                           'StepMag',0.1,...[m
[31m-%                                                                           'Niter',InPar.Niter,...[m
[31m-%                                                                           'SigClip',InPar.SigClip,...[m
[31m-%                                                                           'MaxResid',InPar.MaxResid,...[m
[31m-%                                                                           'Plot',InPar.Plot);[m
[31m-                                                                      [m
[31m-         [m
[31m-           % Special treatment for PV distortions[m
[31m-           % convert coordinates from pixels to deg[m
[31m-           CD = [1 0; 0 1].*Scale./3600;[m
[31m-           %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-           %clear many appearence of the same object.[m
[31m-           [indexes,ia,ic]=unique(MatchedCat(:,Sim(Isim).Col.IndexSimYsorted));[m
[31m-           MatchedRef=MatchedRef(ia,:);[m
[31m-           MatchedCat=MatchedCat(ia,:);[m
[31m-           %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-[m
[31m-           MatchedRefCD        = MatchedRef;[m
[31m-           MatchedRefCD(:,1:2) = [CD*MatchedRefCD(:,1:2)']';[m
[31m-           MatchedCatCD        = MatchedCat;[m
[31m-           MatchedCatCD(:,1:2) = [CD*MatchedCatCD(:,1:2)']';[m
[31m-           [m
[31m-           ResAst(Isim) = ImUtil.pattern.fit_transform(MatchedRefCD,MatchedCatCD,TranC,'ImSize',ImSize(Isim,:),...[m
[31m-                                                                          'BlockSize',InPar.AnalysisBlockSize,...[m
[31m-                                                                          'PixScale',InPar.Scale,...[m
[31m-                                                                          'CooUnits','deg',...[m
[31m-                                                                          'NormXY',1,...[m
[31m-                                                                          'PolyMagDeg',3,...[m
[31m-                                                                          'StepMag',0.1,...[m
[31m-                                                                          'Niter',InPar.Niter,...[m
[31m-                                                                          'SigClip',InPar.SigClip,...[m
[31m-                                                                          'MaxResid',InPar.MaxResid,...[m
[31m-                                                                          'Plot',InPar.Plot);[m
[31m-           [m
[31m-           [m
[31m-           ResAst(Isim).ShiftRes   = ShiftRes;[m
[31m-           ResAst(Isim).SubGood    = any(SubGood);[m
[31m-           %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-           %add the catalog data of the used objects with the cols data[m
[31m-           TempAstCat=AstCat;[m
[31m-           TempAstCat.Cat = MatchedCat(ResAst.FlagMag,:);[m
[31m-           TempAstCat.Col=SimCat.Col; [m
[31m-           TempAstCat.ColCell=SimCat.ColCell; [m
[31m-           ResAst(Isim).AstCat= TempAstCat;[m
[31m-           %indexes vector of the used objects in the original catalog[m
[31m-           ResAst(Isim).IndexInSim1=unique(MatchedCat(ResAst.FlagMag,ResAst(Isim).AstCat.Col.IndexSimYsorted));[m
[31m-           ResAst(Isim).IndexInSimN= ResAst(Isim).IndexInSim1(ResAst.FlagG);[m
[31m-           ResAst(Isim).FlagMag=[];[m
[31m-           %!!!!!!!!!!!!!!!!!!!-----------------------!!!!!!!!!!!!!!!!!!!!![m
[31m-           [m
[31m-           %---------------------------------------------------------[m
[31m-           %--- Convert the transformation to WCS header keywords ---[m
[31m-           %---------------------------------------------------------[m
[31m-           % ImCenter - Coordinate zero in the image X/Y coordinate system[m
[31m-           % NormXY   - Coordinate normalization[m
[31m-           % RA,Dec   - assumed center [rad][m
[31m-           [m
[31m-           %W = ClassWCS.tranclass2wcs(ResAst(Isim).TranC,'CooCenter',[RA,Dec], 'ImCenter',ImCenter, 'NormXY',NormXY, 'Scale',Scale);[m
[31m-           if (nargout>1)[m
[31m-               W = ClassWCS.tranclass2wcs_tpv(ResAst(Isim).TranC,'CooCenter',[RA,Dec], 'ImCenter',ImCenter, 'NormXY',NormXY, 'Scale',Scale,'CD',CD);[m
[31m-               OrigSim(Isim) = wcs2head(W,OrigSim(Isim));[m
[31m-             [m
[31m-             %add WCS field[m
[31m-               ResAst(Isim).WCS=OrigSim(Isim).WCS;[m
[31m-             [m
[31m-           end[m
[31m-           [m
[31m-           [m
[31m-     [m
[31m-           %Res(Isim).plot_resmag = @(Res) semilogy(Res([m
[31m-       end[m
[31m-        [m
[31m-    end[m
[31m-end[m
[1mdiff --git a/@ClassWCS/ClassWCS.m b/@ClassWCS/ClassWCS.m[m
[1mindex 2616aae..8a967bf 100755[m
[1m--- a/@ClassWCS/ClassWCS.m[m
[1m+++ b/@ClassWCS/ClassWCS.m[m
[36m@@ -663,7 +663,7 @@[m [mclassdef ClassWCS[m
                 % number of coef/orders[m
                 N{Iaxis} = numel(CellCoef{Iaxis});[m
             [m
[31m-                for I=1:N{1}[m
[32m+[m[32m                for I=1:N{Iaxis}[m
                     Orders  = CellOrder{Iaxis}(:,I);[m
                     % requirement also that r-comp is 0.[m
                     IndexPV = find(all(Tab{Iaxis}(1:2,:)==Orders) & Tab{Iaxis}(3,:)==0) - 1;[m
[1mdiff --git a/@ds9/ds9.m~ b/@ds9/ds9.m~[m
[1mdeleted file mode 100644[m
[1mindex db56f82..0000000[m
[1m--- a/@ds9/ds9.m~[m
[1m+++ /dev/null[m
[36m@@ -1,3078 +0,0 @@[m
[31m-%--------------------------------------------------------------------------[m
[31m-% ds9 class                                                          class[m
[31m-% Description: A static class for intearction with the ds9 display.[m
[31m-%              This include functions to load images, change their[m
[31m-%              properties, create and plot region files, printing, image[m
[31m-%              examination, interaction with SIM content and more.[m
[31m-%              Type "ds9." followed by <tab> to see the full list of[m
[31m-%              functions.[m
[31m-%              Full manual is available in manual_ds9.pdf[m
[31m-% Input  : null[m
[31m-% Output : null[m
[31m-% Tested : Matlab R2014a[m
[31m-%     By : Eran O. Ofek                    Jul 2016[m
[31m-%    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-% Reliable: 2[m
[31m-%--------------------------------------------------------------------------[m
[31m-[m
[31m-classdef ds9[m
[31m-    % A static class[m
[31m-    [m
[31m-    % Constructor method (display)[m
[31m-    methods[m
[31m-        function Obj=ds9(Image,varargin)[m
[31m-            % Display images in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Display images in ds9 (constructor).[m
[31m-            %              See also ds9.disp.[m
[31m-            % Input  : - Images to display. One of the following:[m
[31m-            %            1. String containing a single FITS image name.[m
[31m-            %            2. String with wild cards and ranges for multiple[m
[31m-            %               FITS images.[m
[31m-            %            3. Cell array of FITS image names.[m
[31m-            %            4. A matrix.[m
[31m-            %            5. A cube (display a cube).[m
[31m-            %            6. Cell array of matrices.[m
[31m-            %            7. A SIM object.[m
[31m-            %          * A vector of frames (see 'Frame') in which to load[m
[31m-            %            the images into followed by ...,key,val,... pairs,[m
[31m-            %            or just the ...,key,val,... pairs.[m
[31m-            %            'Frame' - Frame indices or frame parameters[m
[31m-            %                      (e.g., 'next'). Default is (1:N), where[m
[31m-            %                      N is the number of images to display.[m
[31m-            %            'Scale' - See ds9.scale. Default is 'mode zscale'.[m
[31m-            %            'CMap'  - See ds9.cmap. Default is [].[m
[31m-            %            'Colorbar' - See ds9.colorbar. Default is 'no'.[m
[31m-            %            'Orient'- See ds9.orient. Default is [].[m
[31m-            %            'Rotate'- See ds9.rotate. Default is [].[m
[31m-            %            'Zoom'  - See ds9.zoom. Default is 1.[m
[31m-            % Output : null[m
[31m-            % Example: ds9(rand(100,100),1,'Zoom',2)[m
[31m-            %          ds9(rand(100,100),'Zoom',2);[m
[31m-            %          ds9(Sim(1:3));[m
[31m-            %          ds9('MyFitsImage.fits');[m
[31m-            %          ds9('Images*.fits');[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            % ds9_disp(Image,varargin{:});[m
[31m-            ds9.disp(Image,varargin{:});[m
[31m-            clear Obj; % Output Object Not Assigned, therefore need to clear it[m
[31m-        end[m
[31m-        [m
[31m-    end[m
[31m-    [m
[31m-    [m
[31m-    [m
[31m-    % Static methods for ds9[m
[31m-    % Basic methods (system, command construction, open, exit,...)[m
[31m-    methods (Static)[m
[31m-        [m
[31m-        % execute xpa command[m
[31m-        function [Answer,Status]=system(String,varargin)[m
[31m-            % Construct and execute an xpa command[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - String to execute. The string may include any[m
[31m-            %            special characters (e.g., %s, %d) that will be[m
[31m-            %            populated by the additional parameters.[m
[31m-            %          * Arbitrary number of additional parameters that[m
[31m-            %            will populate the %s %d like format.[m
[31m-            % Output : - Answer[m
[31m-            % Example: ds9.system('xpaset -p ds9 frame frameno %d',FrameNumber);[m
[31m-            % Reliable: 2[m
[31m-            String = sprintf(String,varargin{:});[m
[31m-            if ismac[m
[31m-               String = strcat('set DYLD_LIBRARY_PATH "";', String);[m
[31m-               [Status,Answer]=system(String);[m
[31m-            else[m
[31m-               [Status,Answer]=system(String);[m
[31m-            end[m
[31m-            if (Status~=0)[m
[31m-                if (strfind(Answer,'not found'))[m
[31m-                    % It is possible that xpa is not installed[m
[31m-                    fprintf('\n It seems that xpa and or ds9 are not installed\n');[m
[31m-                    fprintf('ds9 instellation: http://ds9.si.edu/site/Download.html\n');[m
[31m-                    fprintf('xpa instellation: http://ds9.si.edu/site/XPA.html\n');[m
[31m-                end[m
[31m-                error('Command: %s failed - Answer: %s',String,Answer);[m
[31m-                [m
[31m-            end[m
[31m-            [m
[31m-        end[m
[31m-[m
[31m-        % construct xpa command[m
[31m-        function String=construct_command(varargin)[m
[31m-            % Construct an arguments string for ds9 command[m
[31m-            % Package: @ds9[m
[31m-            % Input  : * Arbitrary number of arguments from which to[m
[31m-            %            construct a string.[m
[31m-            %            Default is ''.[m
[31m-            % Output : The constructed string[m
[31m-            % Example: ds9.construct_command('scale linear');[m
[31m-            %          ds9.construct_command scale linear[m
[31m-            %          ds9.construct_command('log',100); % return 'log 100'[m
[31m-            %          ds9.construct_command('log 100');[m
[31m-            % Reliable: 2[m
[31m-            String = '';[m
[31m-            Narg = numel(varargin);[m
[31m-            for Iarg=1:1:Narg[m
[31m-                if (ischar(varargin{Iarg}))[m
[31m-                    String = sprintf('%s %s',String,varargin{Iarg});[m
[31m-                else[m
[31m-                    if (mod(varargin{Iarg},1)==0)[m
[31m-                        % argument is an integer[m
[31m-                        String = sprintf('%s %d',String,varargin{Iarg});[m
[31m-                    else[m
[31m-                        % argument is a double[m
[31m-                        String = sprintf('%s %f',String,varargin{Iarg});[m
[31m-                    end[m
[31m-                end[m
[31m-            end[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % xpaset[m
[31m-        function xpaset(Command)[m
[31m-            % Execute an xpaset command[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - The command to follow the 'xpaset -p ds9'.[m
[31m-            % Output : null[m
[31m-            % Reliable: 2[m
[31m-            ds9.system('xpaset -p ds9 %s',Command);[m
[31m-        end[m
[31m-        [m
[31m-        % xpaget[m
[31m-        function Ans=xpaget(Command)[m
[31m-            % Execute an xpaget command[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - The command to follow the 'xpaget ds9'.[m
[31m-            % Output : - Return output.[m
[31m-            % Reliable: 2[m
[31m-            Ans=ds9.system('xpaget ds9 %s',Command);[m
[31m-        end[m
[31m-        [m
[31m-        % xpa help[m
[31m-        function xpahelp[m
[31m-            % Open the XPA command help web page[m
[31m-            % Package: @ds9[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            % Example: ds9.xpahelp[m
[31m-            % Reliable: 2[m
[31m-           [m
[31m-            web('http://ds9.si.edu/doc/ref/xpa.html');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % check if ds9 is open[m
[31m-        function IsOpen=isopen[m
[31m-            % Check if ds9 is open (linux/mac only)[m
[31m-            % Package: @ds9[m
[31m-            % Input  : null[m
[31m-            % Output : A logical flag indicating if ds9 is open for the[m
[31m-            %          user.[m
[31m-            % Example: ds9.isopen[m
[31m-            % Reliable: 2[m
[31m-            if (ismac)[m
[31m-                Status = system('ps -A | grep ds9 | grep -v grep');[m
[31m-            else[m
[31m-                Status = system('ps -xug | grep ds9 | grep -v grep');[m
[31m-            end[m
[31m-            if (Status==1)[m
[31m-                % not open[m
[31m-                IsOpen = false;[m
[31m-            else[m
[31m-                % open[m
[31m-                IsOpen = true;[m
[31m-            end[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % open ds9[m
[31m-        function open[m
[31m-            % Open ds9 dispaly window if not exist already and set mode to region[m
[31m-            % Package: @ds9[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            % Example: ds9.open[m
[31m-            % Reliable: 2[m
[31m-            Wait = 3;  % s[m
[31m-            IsOpen = ds9.isopen;[m
[31m-            if (IsOpen)[m
[31m-                % do nothing - already open[m
[31m-                fprintf('ds9 is already open\n');[m
[31m-            else[m
[31m-                Status=system('ds9&');[m
[31m-                if (Status~=0)[m
[31m-                    warning('Can not open ds9');[m
[31m-                else[m
[31m-                    pause(Wait);[m
[31m-                end[m
[31m-            [m
[31m-            end[m
[31m-            ds9.mode('region');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % mode[m
[31m-        function mode(Mode)[m
[31m-            % Set ds9 mode[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - ds9 mode. [m
[31m-            %            none|region|crosshair|colorbar|pan|zoom|rotate|catalog|examine.[m
[31m-            %            Default is 'region'.[m
[31m-            % Output : null[m
[31m-            [m
[31m-            if (nargin==0)[m
[31m-                Mode = 'region';[m
[31m-            end[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 mode %s',Mode);[m
[31m-        end[m
[31m-        [m
[31m-        % exit ds9[m
[31m-        function exit[m
[31m-            % exit ds9[m
[31m-            % Package: @ds9[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            % Reliable: 2[m
[31m-            ds9.system('xpaset -p ds9 exit');[m
[31m-        end[m
[31m-        [m
[31m-    end[m
[31m-    [m
[31m-    % Frame methods[m
[31m-    % (frame, delete_frame, clear_frame, disp, load, load1, disp, write2fits, write2sim)[m
[31m-    methods (Static)[m
[31m-        [m
[31m-        % set/get frame[m
[31m-        function Answer=frame(FrameNumber)[m
[31m-            % Set ds9 frame[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - If not given than only get the current frame [m
[31m-            %            number. If numeric then set frame number.[m
[31m-            %            Alternatively, if a string than set to frame name.[m
[31m-            %            Possible names: 'first'|'prev'|'next'|'last'[m
[31m-            %            Additional possibilities include:[m
[31m-            %            'hide'|'move first'|'move last'|'move back'|[m
[31m-            %            'move forward'|'match wcs'|'lock wcs'|...[m
[31m-            % Output : - Current frame number.[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                % get frame number[m
[31m-                Answer = ds9.system('xpaget ds9 frame frameno');[m
[31m-            else[m
[31m-                % set frame number[m
[31m-                if ischar(FrameNumber)[m
[31m-                    % string frame[m
[31m-                    ds9.system('xpaset -p ds9 frame %s',FrameNumber);[m
[31m-                else[m
[31m-                    % numeric frame[m
[31m-                    ds9.system('xpaset -p ds9 frame frameno %d',FrameNumber);[m
[31m-                end[m
[31m-                [m
[31m-                % get current frame number if needed[m
[31m-                if (nargout>0)[m
[31m-                    Answer = ds9.system('xpaget ds9 frame frameno');[m
[31m-                end[m
[31m-            end[m
[31m-            pause(0.2);[m
[31m-        end[m
[31m-        [m
[31m-        % delete frame[m
[31m-        function delete_frame(FrameNumber)[m
[31m-            % Delete frames from ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Delete frame number, some frames or all frames[m
[31m-            %              from ds9.[m
[31m-            % Input  : - Vector of frames to delete.[m
[31m-            %            If empty then delete current frame. Default.[m
[31m-            %            If Inf then delete all frames.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.delete_frame(Inf)[m
[31m-            % Reliable: 2[m
[31m-           [m
[31m-[m
[31m-             if (nargin==0)[m
[31m-                FrameNumber = [];[m
[31m-             end[m
[31m-            [m
[31m-            if (isempty(FrameNumber))[m
[31m-                % delete current frame[m
[31m-                ds9.system('xpaset -p ds9 frame delete');[m
[31m-            else[m
[31m-                if (isinf(FrameNumber))[m
[31m-                    % get all frame numbers[m
[31m-                    Ans = ds9.system('xpaget ds9 frame all');[m
[31m-                    Frames = regexp(Ans,' ','split');[m
[31m-                    Frames = Frames(1:end-1);[m
[31m-                    FrameNumber = cellfun(@str2double,Frames);[m
[31m-                end[m
[31m-                [m
[31m-                % delete requested frames[m
[31m-                Nf = numel(FrameNumber);[m
[31m-                for If=1:1:Nf[m
[31m-                    ds9.system('xpaset -p ds9 frame frameno %d',FrameNumber(If));[m
[31m-                    ds9.system('xpaset -p ds9 frame delete');[m
[31m-                end[m
[31m-                [m
[31m-            end[m
[31m-        end[m
[31m-              [m
[31m-        % clear frame[m
[31m-        function clear_frame(FrameNumber)[m
[31m-            % Clear frames from ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Clear frame number, some frames or all frames[m
[31m-            %              from ds9.[m
[31m-            % Input  : - Vector of frames to clear.[m
[31m-            %            If empty then clear current frame. Default.[m
[31m-            %            If Inf then clear all frames.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.clear_frame(Inf)[m
[31m-            % Reliable: 2[m
[31m-           [m
[31m-            if (nargin==0)[m
[31m-                FrameNumber = [];[m
[31m-            end[m
[31m-                [m
[31m-            [m
[31m-            if (isempty(FrameNumber))[m
[31m-                % clear current frame[m
[31m-                ds9.system('xpaset -p ds9 frame clear');[m
[31m-            else[m
[31m-                if (isinf(FrameNumber))[m
[31m-                    % get all frame numbers[m
[31m-                    Ans = ds9.system('xpaget ds9 frame all');[m
[31m-                    Frames = regexp(Ans,' ','split');[m
[31m-                    Frames = Frames(1:end-1);[m
[31m-                    FrameNumber = cellfun(@str2double,Frames);[m
[31m-                end[m
[31m-                [m
[31m-                % delete requested frames[m
[31m-                Nf = numel(FrameNumber);[m
[31m-                for If=1:1:Nf[m
[31m-                    ds9.system('xpaset -p ds9 frame frameno %d',FrameNumber(If));[m
[31m-                    ds9.system('xpaset -p ds9 frame clear');[m
[31m-                end[m
[31m-                [m
[31m-            end[m
[31m-        end[m
[31m-        [m
[31m-        % Load a FITS image into ds9 frame[m
[31m-        function [Frame,CurFile]=load(FitsFile,FrameNumber)[m
[31m-            % Load a FITS image into ds9 frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Load a FITS image into ds9 frame[m
[31m-            % Input  : - FITS file name. This is either a fits file name[m
[31m-            %            in the current directory or a full path to the[m
[31m-            %            file name.[m
[31m-            %          - Frame number.[m
[31m-            %            Default is 'next'.[m
[31m-            % Output : - Current frame number[m
[31m-            %          - Current fits file name[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==1)[m
[31m-                FrameNumber = 'next';[m
[31m-            end[m
[31m-            [m
[31m-            Frame = ds9.frame(FrameNumber);[m
[31m-            [m
[31m-            % check if file name contains directory seperator[m
[31m-            if (~isempty(strfind(FitsFile,filesep)))[m
[31m-                % file name contains directory seperator[m
[31m-                % Assume that FitsFile is a full path[m
[31m-                % do nothing[m
[31m-            else[m
[31m-                % Assume FitsFile is not a full path[m
[31m-                FitsFile = sprintf('%s%s%s',pwd,filesep,FitsFile);[m
[31m-            end[m
[31m-            [m
[31m-            % load FITS file [m
[31m-            ds9.system('xpaset -p ds9 file %s',FitsFile);[m
[31m-            [m
[31m-            if (nargout>1)[m
[31m-                CurFile = ds9.system('xpaget ds9 file');[m
[31m-            end[m
[31m-[m
[31m-        end[m
[31m-        [m
[31m-        % Load a FITS image into ds9 frame number 1[m
[31m-        function [Frame,CurFile]=load1(FitsFile)[m
[31m-            % Load a FITS image into ds9 frame number 1[m
[31m-            % Package: @ds9[m
[31m-            % Description: Load a FITS image into ds9 frame number 1[m
[31m-            % Input  : - Fits file name[m
[31m-            % Output : - Current frame number[m
[31m-            %          - Current fits file name[m
[31m-            % Reliable: 2[m
[31m-            [Frame,CurFile] = ds9.load(FitsFile,1);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        function Frame=url(URL,FrameNumber)[m
[31m-            % Load FITS file from a URL[m
[31m-            % Package: @ds9[m
[31m-            % Description: Load FITS file from a URL.[m
[31m-            % Input  : - URL string.[m
[31m-            %          - Frame number.[m
[31m-            %            Default is 'next'.[m
[31m-            % Output : - Frame number.[m
[31m-            % Example: ds9.url(URL);[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            if (nargin==1)[m
[31m-                FrameNumber = 'next';[m
[31m-            end[m
[31m-            [m
[31m-            Frame = ds9.frame(FrameNumber);[m
[31m-            ds9.system('xpaset -p ds9 url %s',URL);[m
[31m-        end[m
[31m-        [m
[31m-        % display images in all formats[m
[31m-        function disp(Images,varargin)[m
[31m-            % Display images in ds9 (use ds9 for short cut)[m
[31m-            % Package: @ds9[m
[31m-            % Description: Display images in ds9 [m
[31m-            %              For shortcut use the ds9 constructor[m
[31m-            %              (see examples).[m
[31m-            % Input  : - Images to display. One of the following:[m
[31m-            %            1. String containing a single FITS image name.[m
[31m-            %            2. String with wild cards and ranges for multiple[m
[31m-            %               FITS images.[m
[31m-            %            3. Cell array of FITS image names.[m
[31m-            %            4. A matrix.[m
[31m-            %            5. A cube (display a cube).[m
[31m-            %            6. Cell array of matrices.[m
[31m-            %            7. A SIM object.[m
[31m-            %          * A vector of frames (see 'Frame') in which to load[m
[31m-            %            the images into followed by ...,key,val,... pairs,[m
[31m-            %            or just the ...,key,val,... pairs.[m
[31m-            %            'Frame' - Frame indices or frame parameters[m
[31m-            %                      (e.g., 'next'). Default is (1:N), where[m
[31m-            %                      N is the number of images to display.[m
[31m-            %            'Scale' - See ds9.scale. Default is 'mode zscale'.[m
[31m-            %            'CMap'  - See ds9.cmap. Default is [].[m
[31m-            %            'Colorbar' - See ds9.colorbar. Default is 'no'.[m
[31m-            %            'Orient'- See ds9.orient. Default is [].[m
[31m-            %            'Rotate'- See ds9.rotate. Default is [].[m
[31m-            %            'Zoom'  - See ds9.zoom. Default is 1.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.disp(rand(100,100),1,'Zoom',2)[m
[31m-            %          ds9.disp(rand(100,100),'Zoom',2);[m
[31m-            %          ds9.disp(Sim(1:3));[m
[31m-            %          ds9.disp('MyFitsImage.fits');[m
[31m-            %          ds9.disp('Images*.fits');[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            Narg = numel(varargin);[m
[31m-            if (Narg.*0.5)~=floor(Narg.*0.5)[m
[31m-                % odd number of arguments[m
[31m-                % assume 1st argument is frame[m
[31m-                Frame = varargin{1};[m
[31m-                varargin = varargin(2:end);[m
[31m-            else[m
[31m-                Frame = [];[m
[31m-            end[m
[31m-            [m
[31m-            DefV.Frame                 = [];[m
[31m-            DefV.Scale                 = 'mode zscale';[m
[31m-            DefV.CMap                  = [];[m
[31m-            DefV.Colorbar              = 'no';[m
[31m-            DefV.Orient                = [];[m
[31m-            DefV.Rotate                = [];[m
[31m-            DefV.Zoom                  = 1;[m
[31m-            InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-            [m
[31m-            % open ds9[m
[31m-            ds9.open;[m
[31m-            [m
[31m-            if (isempty(Frame))[m
[31m-                % use default instead[m
[31m-                Frame = InPar.Frame;[m
[31m-            end[m
[31m-                       [m
[31m-[m
[31m-            ImageField = SIM.ImageField;[m
[31m-            IsFits = false;[m
[31m-            [m
[31m-            % prepare cell array of string (FITS images)[m
[31m-            if (ischar(Images))[m
[31m-                [~,List] = Util.files.create_list(Images,NaN);[m
[31m-                IsFits = true;[m
[31m-                Nim = numel(List);[m
[31m-            end[m
[31m-            [m
[31m-            % prepare cell array of matrices[m
[31m-            if (isnumeric(Images))[m
[31m-                List   = {Images};[m
[31m-                IsFits = false;[m
[31m-                Nim = numel(List);[m
[31m-            end[m
[31m-            [m
[31m-            if (SIM.issim(Images))[m
[31m-                %List   = Images;  %.(ImageField);[m
[31m-                IsFits = false;[m
[31m-                Nim = numel(Images);[m
[31m-            end[m
[31m-            [m
[31m-            % create tmp file names[m
[31m-            IsTmp   = false;[m
[31m-            [m
[31m-            if (~IsFits)[m
[31m-                % create tmp image[m
[31m-                IsTmp     = true;[m
[31m-                for Iim=1:1:Nim[m
[31m-                    TmpName = sprintf('%s.fits',tempname);[m
[31m-                    % create FITS files[m
[31m-                    %fitswrite_my(List{Iim},TmpName);[m
[31m-                    if (SIM.issim(Images))[m
[31m-                        % to fix a problem - delete the PCOUNT and GCOUNT[m
[31m-                        % header keywords[m
[31m-                        %Images(Iim) = delete_key(Images(Iim),{'PCOUNT','GCOUNT','PSCALET1','PSCALET2'});[m
[31m-                        Images(Iim) = delete_key(Images(Iim),{'PCOUNT','GCOUNT','PSCALET1','PSCALET2',...[m
[31m-                            'XTENSION','TTYPE1','TFORM1','TTYPE2','TFORM2','TTYPE3','TFORM3'}); % Na'ama, 20180831, to display fits.fz (fpacked) images[m
[31m-                        [m
[31m-                        [m
[31m-                        FITS.write(Images(Iim).(ImageField),TmpName,'Header',Images(Iim).Header);[m
[31m-                    else[m
[31m-                        FITS.write(List{Iim},TmpName);[m
[31m-                    end[m
[31m-                    List{Iim} = TmpName;[m
[31m-                end[m
[31m-            end[m
[31m-           [m
[31m-            if (isempty(Frame))[m
[31m-                Frame = (1:1:Nim).';[m
[31m-            end[m
[31m-            if (~ischar(Frame))[m
[31m-                Frame = Frame(:).*ones(Nim,1);[m
[31m-            end[m
[31m-            [m
[31m-            for Iim=1:1:Nim[m
[31m-                % for each image                [m
[31m-               [m
[31m-                if (ischar(Frame))[m
[31m-                    ds9.load(List{Iim},Frame);[m
[31m-                else[m
[31m-                    ds9.load(List{Iim},Frame(Iim));[m
[31m-                end[m
[31m-                [m
[31m-                % set image properties[m
[31m-                if (~isempty(InPar.Scale))[m
[31m-                    ds9.scale(InPar.Scale);[m
[31m-                end[m
[31m-                if (~isempty(InPar.CMap))[m
[31m-                    ds9.cmap(InPar.CMap);[m
[31m-                end[m
[31m-                if (~isempty(InPar.Colorbar))[m
[31m-                    ds9.colorbar(InPar.Colorbar);[m
[31m-                end[m
[31m-                if (~isempty(InPar.Orient))[m
[31m-                    ds9.orient(InPar.Orient);[m
[31m-                end[m
[31m-                if (~isempty(InPar.Rotate))[m
[31m-                    ds9.rotate(InPar.Rotate);[m
[31m-                end[m
[31m-                if (~isempty(InPar.Zoom))[m
[31m-                    ds9.zoom(InPar.Zoom);[m
[31m-                end[m
[31m-                   [m
[31m-               [m
[31m-            end[m
[31m-            [m
[31m-            if (IsTmp)[m
[31m-                Util.files.delete_cell(List);[m
[31m-            end[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % save ds9 frame to FITS file[m
[31m-        function read2fits(FileName)[m
[31m-            % Save a ds9 frame to FITS image[m
[31m-            % Package: @ds9[m
[31m-            % Description: Save a ds9 frame to FITS image[m
[31m-            % Input  : - FITS file name to save.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.tofits('try.fits');[m
[31m-            % Reliable: [m
[31m-            [m
[31m-            % Read entire image from ds9[m
[31m-            Answer  = ds9.system('xpaset -p ds9 save %s',FileName);[m
[31m-        end[m
[31m-        [m
[31m-        % save ds9 frame to SIM image[m
[31m-        function Sim=read2sim[m
[31m-            % Save a ds9 frame in a SIM object[m
[31m-            % Package: @ds9[m
[31m-            % Description: Save a ds9 frame in a SIM object[m
[31m-            % Input  : null.[m
[31m-            % Output : - A SIM object.[m
[31m-            % Eaxmple: S=ds9.tosim;[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            % Read entire image from ds9[m
[31m-            TmpName = sprintf('%s.fits',tempname);[m
[31m-            Answer  = ds9.system('xpaset -p ds9 save %s',TmpName);[m
[31m-            %Sim     = image2sim(TmpName);[m
[31m-            Sim     = FITS.read2sim(TmpName);[m
[31m-            delete(TmpName);[m
[31m-        end[m
[31m-    end[m
[31m-    [m
[31m-    % Frame properties methods[m
[31m-    % (scale, cmap, colorbar, orient, pan, rotate, zoom, header)[m
[31m-    methods (Static)[m
[31m-        % Scale image intensity[m
[31m-        function scale(varargin)[m
[31m-            % Set the intensity scale of an image in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the intensity scale of an image in ds9[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            scale command.[m
[31m-            %            Default is 'mode zscale'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.scale('linear')[m
[31m-            %          ds9.scale('log',100)[m
[31m-            %          ds9.scale('log 100');[m
[31m-            %          ds9.scale('limits',1520,1900)[m
[31m-           % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = 'mode zscale';[m
[31m-            else[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 scale %s',Mode);[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % Set image color map[m
[31m-        function cmap(varargin)[m
[31m-            % Set the color map of an image in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the color map of an image in ds9[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            cmap command.[m
[31m-            %            Default is 'invert yes'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.cmap('Heat')[m
[31m-            %          ds9.cmap Heat[m
[31m-            %          ds9.cmap('value',5)[m
[31m-            %          ds9.cmap('cmap','match');[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = 'invert yes';[m
[31m-            else[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 cmap %s',Mode);[m
[31m-            pause(0.2);[m
[31m-[m
[31m-        end[m
[31m-        [m
[31m-        % Set image colorbar[m
[31m-        function colorbar(varargin)[m
[31m-            % set the colorbar of an ds9 image[m
[31m-            % Package: @ds9[m
[31m-            % description: set the colorbar of an ds9 image[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            colorbar command.[m
[31m-            %            Default is 'no'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.colorbar('vertical')[m
[31m-            %          ds9.colorbar('size',20)[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = 'no';[m
[31m-            else[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 colorbar %s',Mode);[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % Set image orientation[m
[31m-        function orient(varargin)[m
[31m-            % Set the x/y orientation of an image in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the x/y orientation of an image in ds9[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            orient command.[m
[31m-            %            Default is 'none'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.orient('x')[m
[31m-            %          ds9.orient('xy')[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = 'none';[m
[31m-            else[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 orient %s',Mode);[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % Set image pan[m
[31m-        function pan(varargin)[m
[31m-            % Set the pan (cursor location) of an image in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the pan (cursor location) of an image in ds9[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            pan command.[m
[31m-            %            Default is 'to 0 0 image'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.pan('200 200 image')[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = 'to 0 0 image';[m
[31m-            else[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 pan %s',Mode);[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % Set image rotate[m
[31m-        function rotate(varargin)[m
[31m-            % Set the rotation of an image in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the rotation of an image in ds9[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            rotate command.[m
[31m-            %            Default is ''.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.rotate('to',45)[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = '';[m
[31m-            else[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 rotate %s',Mode);[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % Set image zoom[m
[31m-        function zoom(varargin)[m
[31m-            % Set the zoom of an image in ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the zoom of an image in ds9[m
[31m-            % Input  : * Arbitrary number of arguments to pass to the ds9[m
[31m-            %            zoom command. If the first argument is a number[m
[31m-            %            than the word "to" will be added (absolute zoom).[m
[31m-            %            Default is 'to to 1'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.zoom(2,4)[m
[31m-            %          ds9.zoom('in')[m
[31m-            % Reliable: 2[m
[31m-            if (nargin==0)[m
[31m-                Mode = 'to 1';[m
[31m-            else[m
[31m-                if (isnumeric(varargin{1}))[m
[31m-                    Mode = 'to ';[m
[31m-                else[m
[31m-                    Mode = '';[m
[31m-                end[m
[31m-            end[m
[31m-            [m
[31m-            [m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            ds9.system('xpaset -p ds9 zoom %s',Mode);[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % header display[m
[31m-        function header(varargin)[m
[31m-            % Description: Display FITS header dialaog[m
[31m-            % Input  : - Parameters to fits header dialaog.[m
[31m-            %            Default is ''.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.header(1)[m
[31m-            %          ds9.header('save',1,'foo.txt')[m
[31m-            %          ds9.header('close')[m
[31m-            % Reliable: 2[m
[31m-            Mode = '';[m
[31m-            Mode = ds9.construct_command(Mode,varargin{:});[m
[31m-            ds9.system('xpaset -p ds9 header %s',Mode);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-    end[m
[31m-    [m
[31m-    % printing methods[m
[31m-    % (psprint)[m
[31m-    methods (Static)[m
[31m-        % print, psprint[m
[31m-        function psprint(FileName,Resolution,Color,Level)[m
[31m-            % Print a postscript file into current directory[m
[31m-            % Package: @ds9[m
[31m-            % Description: Print a postscript file into current directory.[m
[31m-            % Input  : - PS file name.[m
[31m-            %          - Resolution. Default is 150.[m
[31m-            %          - Color. Default is 'cmyk'.[m
[31m-            %          - PS level. Default is 2.[m
[31m-            % Output : null[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            Def.Resolution = 150;[m
[31m-            Def.Color      = 'cmyk';[m
[31m-            Def.Level      = 2;[m
[31m-            if (nargin==1)[m
[31m-                Resolution = Def.Resolution;[m
[31m-                Color      = Def.Color;[m
[31m-                Level      = Def.Level;[m
[31m-            elseif (nargin==2)[m
[31m-                Color      = Def.Color;[m
[31m-                Level      = Def.Level;[m
[31m-            elseif (nargin==3)[m
[31m-                Level      = Def.Level;[m
[31m-            elseif (nargin==4)[m
[31m-                % do nothing[m
[31m-            else[m
[31m-                error('Illegal number of input arguments: ds9.print(FileName,[Resolution,Color,Level])');[m
[31m-            end[m
[31m-            FileName = sprintf('%s%s%s',pwd,filesep,FileName);  % to print in current directory[m
[31m-            ds9.system('xpaset -p ds9 print destination file');[m
[31m-            ds9.system('xpaset -p ds9 print filename %s',FileName);[m
[31m-            ds9.system('xpaset -p ds9 print resolution %d',Resolution);[m
[31m-            ds9.system('xpaset -p ds9 print color %s',Color);[m
[31m-            ds9.system('xpaset -p ds9 print level %d',Level);[m
[31m-            ds9.system('xpaset -p ds9 print');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-    end[m
[31m-    [m
[31m-    % Region methods[m
[31m-    % (write_region, load_region, delete_region, save_region, plot, text)[m
[31m-    methods (Static)[m
[31m-        % construct a region file[m
[31m-        function FileName=write_region(Cat,varargin)[m
[31m-            % Write a regions file for a list of coordinates and properties[m
[31m-            % Package: @ds9[m
[31m-            % Description: Write a regions file for a list of coordinates[m
[31m-            %              and properties.[m
[31m-            % Input  : - A two column matrix of coordinates [X,Y] or[m
[31m-            %            [RA,Dec] (degrees), or an AstCat object.[m
[31m-            %            The AstCat object coordinates column names are[m
[31m-            %            defined by the 'ColName...' argumenents.[m
[31m-            %            For RA/Dec units must be degrees.[m
[31m-            %          * Arbitrary number of ...,key,val,... pairs.[m
[31m-            %            The following keywords are available:[m
[31m-            %            'FileName' - Output region file name.[m
[31m-            %                         Default is tempname.[m
[31m-            %            'Append'   - Append region file to an existing[m
[31m-            %                         region file. Default is false.[m
[31m-            %            'Coo'      - Coordinates type: 'image'|'fk5'.[m
[31m-            %                         Default is 'image' (i.e., pixels).[m
[31m-            %            'Units'    - If 'Coo' is 'fk5' than this specify[m
[31m-            %                         if the input coordinates are in 'deg'[m
[31m-            %                         or 'rad'. Default is 'deg'.[m
[31m-            %            'Marker'   - A string or a cell array of strings[m
[31m-            %                         of markers type.[m
[31m-            %                         Options are: 'circle'|'circ'|'o'[m
[31m-            %                                      'box'|'s'[m
[31m-            %                                      'ellipse'|'e'[m
[31m-            %                                      'line'|'l'[m
[31m-            %                                      'vector'|'v'[m
[31m-            %                                      'polygon'|'p'[m
[31m-            %                         Default is 'circle'.[m
[31m-            %             'Color'   - A string or a cell array of strings[m
[31m-            %                         of marker colors[m
[31m-            %                         ('red'|'blue'|'green'|'black'|[m
[31m-            %                          'white'|...).[m
[31m-            %                         Default is 'red'.[m
[31m-            %             'Width'   - A scalar or a vector of markers[m
[31m-            %                         width. Default is 1.[m
[31m-            %             'Size'    - Size array. Either one row, or a row [m
[31m-            %                         per coordinate. Default is 10.[m
[31m-            %                         Note that the required number of[m
[31m-            %                         columns in size depands on the marker[m
[31m-            %                         type.[m
[31m-            %                         Following attributes are needed:[m
[31m-            %                           For 'circle':  [Radius][m
[31m-            %                           For 'box':     [Width,Height][m
[31m-            %                           For 'ellipse': [Major axis, Minor axis][m
[31m-            %                           For 'vector':  [Length,PA][m
[31m-            %                           For 'line':    [StartX,StartY,EndX,EndY][m
[31m-            %                           For 'polygon': The coordinates are[m
[31m-            %                           used as the polygon verteces.[m
[31m-            %                         Default is 10.[m
[31m-            %             'Text'    - Text to plot with marker.[m
[31m-            %                         Default is ''.[m
[31m-            %             'Font'    - Font type. Default is 'helvetica'.[m
[31m-            %             'FontSize'- Font size. Default is 16.[m
[31m-            %             'FontStyle'-Font style. Default is 'normal'.[m
[31m-            %             'ColNameX'- Cell array of possible column names[m
[31m-            %                         of X coordinate in AstCat object.[m
[31m-            %                         If the first input in an AstCat[m
[31m-            %                         object then the first exitsing column[m
[31m-            %                         name will be used.[m
[31m-            %                         Default is[m
[31m-            %                         {'XWIN_IMAGE','X','X_IMAGE'}.[m
[31m-            %             'ColNameY'- Like 'ColNameX', but for the Y[m
[31m-            %                         coordinate.[m
[31m-            %                         Default is[m
[31m-            %                         {'YWIN_IMAGE','Y','Y_IMAGE'}.[m
[31m-            %             'ColNameRA'-Like 'ColNameX', but for the RA[m
[31m-            %                         coordinate.[m
[31m-            %                         Default is[m
[31m-            %                         {'ALPHAWIN_IMAGE','RA'}.[m
[31m-            %             'ColNameDec'-Like 'ColNameX', but for the Dec[m
[31m-            %                         coordinate.[m
[31m-            %                         Default is[m
[31m-            %                         {'DELTAWIN_IMAGE','DEC'}.[m
[31m-            % Output : - Region file name.[m
[31m-            % See also: ds9.plot[m
[31m-            % Example: FileName=write_region(Cat);[m
[31m-            %          write_region([X,Y],'Marker','s','Color','cyan')[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            DefV.FileName        = tempname;  % use temp file name[m
[31m-            DefV.Append          = false;[m
[31m-            DefV.Coo             = 'image';   % 'image'|'fk5'[m
[31m-            DefV.Units           = 'deg';     % for 'image' this is always pix![m
[31m-            DefV.Marker          = 'circle';  % 'circle'|'box'|...[m
[31m-            DefV.Color           = 'red';[m
[31m-            DefV.Width           = 1;[m
[31m-            DefV.Size            = 10;[m
[31m-            DefV.Text            = '';[m
[31m-            DefV.Font            = 'helvetica';  %'helvetica 16 normal'[m
[31m-            DefV.FontSize        = 16;[m
[31m-            DefV.FontStyle       = 'normal';[m
[31m-            DefV.ColNameX        = {'XWIN_IMAGE','X','X_IMAGE'};[m
[31m-            DefV.ColNameY        = {'YWIN_IMAGE','Y','Y_IMAGE'};[m
[31m-            DefV.ColNameRA       = {'ALPHAWIN_J2000','RA'};[m
[31m-            DefV.ColNameDec      = {'DELTAWIN_J2000','Dec'};[m
[31m-            [m
[31m-            InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-[m
[31m-            % check if region file exist[m
[31m-            if (exist(InPar.FileName,'file')==0)[m
[31m-               if (InPar.Append)[m
[31m-                   error('User requested to append region file, but file doesnt exist');[m
[31m-               end[m
[31m-            end[m
[31m-            [m
[31m-            [m
[31m-            IsXY = false;[m
[31m-            switch lower(InPar.Coo)[m
[31m-             case 'image'[m
[31m-                CooUnits    = '';[m
[31m-                IsXY        = true;[m
[31m-                InPar.Units = 'pix';[m
[31m-             case 'fk5'[m
[31m-                CooUnits = '"';[m
[31m-             otherwise[m
[31m-                error('Coo units is not supported');[m
[31m-            end[m
[31m-            [m
[31m-            % prepare catalog[m
[31m-            if (AstCat.isastcat(Cat))[m
[31m-                % read the coordinates from an AstCat object[m
[31m-                if (IsXY)[m
[31m-                    ColNameX   = select_exist_colnames(Cat,InPar.ColNameX(:));[m
[31m-                    ColNameY   = select_exist_colnames(Cat,InPar.ColNameY(:));[m
[31m-                else[m
[31m-                    ColNameX   = select_exist_colnames(Cat,InPar.ColNameRA(:));[m
[31m-                    ColNameY   = select_exist_colnames(Cat,InPar.ColNameDec(:));[m
[31m-                end[m
[31m-                [m
[31m-                X = col_get(Cat,ColNameX);[m
[31m-                Y = col_get(Cat,ColNameY);[m
[31m-            else[m
[31m-                % Assume Cat is a two column matrix [X,Y][m
[31m-                X = Cat(:,1);[m
[31m-                Y = Cat(:,2);[m
[31m-            end[m
[31m-            [m
[31m-            % In case of spherical coordinates - convert to deg[m
[31m-            if (~IsXY)[m
[31m-                Factor = convert.angular(InPar.Units,'deg');[m
[31m-                X      = X.*Factor;[m
[31m-                Y      = Y.*Factor;[m
[31m-            end[m
[31m-                [m
[31m-            [m
[31m-            % Number of regions to plot[m
[31m-            Nreg    = numel(X);[m
[31m-            % Prep properties[m
[31m-            if (~iscell(InPar.Marker))[m
[31m-                InPar.Marker = {InPar.Marker};[m
[31m-            end[m
[31m-            Nmarker = numel(InPar.Marker);[m
[31m-            if (~iscell(InPar.Color))[m
[31m-                InPar.Color = {InPar.Color};[m
[31m-            end[m
[31m-            Ncolor = numel(InPar.Color);[m
[31m-            Nwidth = numel(InPar.Width);[m
[31m-            Nsize  = size(InPar.Size,1);[m
[31m-            if (~iscell(InPar.Text))[m
[31m-                InPar.Text = {InPar.Text};[m
[31m-            end[m
[31m-            Ntext = numel(InPar.Text);[m
[31m-            if (~iscell(InPar.Font))[m
[31m-                InPar.Font = {InPar.Font};[m
[31m-            end[m
[31m-            Nfont = numel(InPar.Font);[m
[31m-            Nfontsize = numel(InPar.FontSize);[m
[31m-            if (~iscell(InPar.FontStyle))[m
[31m-                InPar.FontStyle = {InPar.FontStyle};[m
[31m-            end[m
[31m-            Nfontstyle = numel(InPar.FontStyle);[m
[31m-            [m
[31m-            % Open file[m
[31m-            if (InPar.Append)[m
[31m-                % append header to an existing region file[m
[31m-                FID = fopen(InPar.FileName,'a');[m
[31m-            else[m
[31m-                FID = fopen(InPar.FileName,'w');[m
[31m-                fprintf(FID,'# Region file format: DS9 version 4.1\n');[m
[31m-                fprintf(FID,'# Written by Eran Ofek via ds9.write_region.m\n');[m
[31m-                fprintf(FID,'global color=green dashlist=8 3 width=1 font="helvetica 10 normal" select=1 highlite=1 dash=0 fixed=0 edit=1 move=1 delete=1 include=1 source=1\n');[m
[31m-                fprintf(FID,'%s\n',InPar.Coo);[m
[31m-            end[m
[31m-[m
[31m-            % for each coordinate (refion)[m
[31m-            for Ireg=1:1:Nreg[m
[31m-                [m
[31m-                switch lower(InPar.Marker{min(Ireg,Nmarker)})[m
[31m-                    case {'circle','circ','o'}[m
[31m-                        fprintf(FID,'%s(%15.8f,%15.8f,%15.8f%s)',... [m
[31m-                                    'circle', X(Ireg), Y(Ireg),...[m
[31m-                                    InPar.Size(min(Ireg,Nsize)),CooUnits);[m
[31m-                    case {'box','b','s'}[m
[31m-                        if (numel(InPar.Size)==1)[m
[31m-                            fprintf(FID,'%s(%15.8f,%15.8f,%15.8f%s,%15.8f%s,%9.5f)',... [m
[31m-                                        'box',X(Ireg),Y(Ireg),...[m
[31m-                                        InPar.Size(min(Ireg,Nsize),1),CooUnits,...[m
[31m-                                        InPar.Size(min(Ireg,Nsize),1),CooUnits,...[m
[31m-                                        0);[m
[31m-                        else[m
[31m-                            fprintf(FID,'%s(%15.8f,%15.8f,%15.8f%s,%15.8f%s,%9.5f)',... [m
[31m-                                        'box',X(Ireg),Y(Ireg),...[m
[31m-                                        InPar.Size(min(Ireg,Nsize),1),CooUnits,...[m
[31m-                                        InPar.Size(min(Ireg,Nsize),2),CooUnits,...[m
[31m-                                        InPar.Size(min(Ireg,Nsize),3));[m
[31m-                        end[m
[31m-                    case {'ellipse','e'}[m
[31m-                        fprintf(FID,'%s(%15.8f,%15.8f,%15.8f%s,%15.8f%s,%9.5f)',... [m
[31m-                                    'ellipse',X(Ireg),Y(Ireg),...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),1),CooUnits,...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),2),CooUnits,...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),3));[m
[31m-                    case {'vector','v'}[m
[31m-                        fprintf(FID,'# %s(%15.8f,%15.8f,%15.8f%s,%9.5f)',... [m
[31m-                                    'vector',X(Ireg),Y(Ireg),...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),1),CooUnits,...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),2));[m
[31m-    [m
[31m-                    case {'line','l'}[m
[31m-                        fprintf(FID,'%s(%15.8f,%15.8f,%15.8f,%15.8f)',... [m
[31m-                                    'line',...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),1),...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),2),...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),3),...[m
[31m-                                    InPar.Size(min(Ireg,Nsize),4));[m
[31m-                                [m
[31m-                    case {'polygon','p'}[m
[31m-                        if (Ireg==1)[m
[31m-                            fprintf(FID,'%s(','polygon');[m
[31m-                        end[m
[31m-                        fprintf(FID,'%15.8f,%15.8f,',X(Ireg),Y(Ireg)); %Par.Size(Ireg,Isize));[m
[31m-                        if (Ireg==Nreg)[m
[31m-                            fprintf(FID,'%15.8f,%15.8f)',X(Ireg),Y(Ireg)); %Par.Size(Ireg,Nsize));[m
[31m-                        end[m
[31m-                    otherwise[m
[31m-                        error('Unknown Marker option');[m
[31m-                end[m
[31m-                [m
[31m-                % additional properties[m
[31m-                fprintf(FID,'# color=%s width=%d font="%s %d %s" text={%s}\n',...[m
[31m-                            InPar.Color{min(Ireg,Ncolor)},...[m
[31m-                            InPar.Width(min(Ireg,Nwidth)),...[m
[31m-                            InPar.Font{min(Ireg,Nfont)},...[m
[31m-                            InPar.FontSize(min(Ireg,Nfontsize)),...[m
[31m-                            InPar.FontStyle{min(Ireg,Nfontstyle)},...[m
[31m-                            InPar.Text{min(Ireg,Ntext)});[m
[31m-                        [m
[31m-            end[m
[31m-            fclose(FID); % close region file[m
[31m-[m
[31m-            FileName = InPar.FileName;[m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % load regions from file[m
[31m-        function load_region(FileName)[m
[31m-            % load regions file name into current ds9 frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: load regions file name into current ds9 frame.[m
[31m-            % Input  : - FileName. If file name does not contains the[m
[31m-            %            full path then assume the file is in the current[m
[31m-            %            directory.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.load_region('A.reg')[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            % check if FileName contains directory name[m
[31m-            if (isempty(strfind(FileName,filesep)))[m
[31m-                % File Name without dir[m
[31m-                % add pwd to file name[m
[31m-                FileName = sprintf('%s%s%s',pwd,filesep,FileName);[m
[31m-            end[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 regions load %s',FileName);[m
[31m-        end[m
[31m-        [m
[31m-        % delete regions from frame[m
[31m-        function delete_region[m
[31m-            % Delete all regions from ds9 frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Delete all regions from ds9 frame[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            % Example: ds9.delete_region[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 regions delete all');[m
[31m-        end[m
[31m-        [m
[31m-        % save regions to file[m
[31m-        function save_region(FileName)[m
[31m-            % Save regions into a file[m
[31m-            % Package: @ds9[m
[31m-            % Description: Save regions into a file.[m
[31m-            % Input  : FileName. If file name does not contains the[m
[31m-            %            full path then save it in the current[m
[31m-            %            directory. Default is 'ds9.reg'.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.save_region[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            if (nargin==0)[m
[31m-                FileName = 'ds9.reg';[m
[31m-            end[m
[31m-            [m
[31m-            % check if FileName contains directory name[m
[31m-            if (isempty(strfind(FileName,filesep)))[m
[31m-                % File Name without dir[m
[31m-                % add pwd to file name[m
[31m-                FileName = sprintf('%s%s%s',pwd,filesep,FileName);[m
[31m-            end[m
[31m-            ds9.system('xpaset -p ds9 regions save %s',FileName);[m
[31m-        end[m
[31m-        [m
[31m-        function plotc(varargin)[m
[31m-            % Generate and plot a region file from a list of celestial coordinates[m
[31m-            % Package: @ds9[m
[31m-            % Input  : * see ds9.plot(...,'Coo','fk5')[m
[31m-            [m
[31m-            ds9.plot(varargin{:},'Coo','fk5');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % plot regions[m
[31m-        function plot(varargin)[m
[31m-            % Generate and plot a region file from a list of coordinates[m
[31m-            % Package: @ds9[m
[31m-            % Description: Generate and plot a region file from a list of[m
[31m-            %              coordinates.[m
[31m-            %              This is like the function ds9.write_region with[m
[31m-            %              the exception that it also load the region file[m
[31m-            %              into the current frame.[m
[31m-            %              By default this program deletes the region file[m
[31m-            %              name after plotting. Use ds9.write_region to[m
[31m-            %              create the file.[m
[31m-            % Input  : * Parameters to pass to ds9.write_region.m.[m
[31m-            %            See ds9.write_region.m for details.[m
[31m-            %            Alternatively, the second argument may be a string[m
[31m-            %            containing the marker and color[m
[31m-            %            (e.g., 'yo' - yellow circle; 'ks' - black square).[m
[31m-            %            Alternatively, the first argument is X coordinate,[m
[31m-            %            the second is Y coordinate and the rest as before.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.plot([1000 1000]);[m
[31m-            %          ds9.plot([1020 1010],'Marker','s','Size',[10 10 45]);[m
[31m-            %          ds9.plot([900 900],'rs');[m
[31m-            %          ds9.plot(950,950);[m
[31m-            %          ds9.plot(950,950,'rs','size',[20 20 0]);[m
[31m-            %          ds9.plot(1000,1020,'ro','Text','Object X');[m
[31m-            %          ds9.plot(Sim);   % plot circles around AstCat object[m
[31m-            % Reliable: 2[m
[31m-            DeleteFile = true;[m
[31m-            [m
[31m-            Narg = numel(varargin);[m
[31m-            if (Narg>1)[m
[31m-                if (isnumeric(varargin{2}))[m
[31m-                    % treating ds9.plot(1,1,'o',...) like input[m
[31m-                    X = varargin{1};[m
[31m-                    Y = varargin{2};[m
[31m-                    varargin = varargin(2:end);[m
[31m-                    varargin{1} = [X,Y];[m
[31m-                    Narg = Narg - 1;[m
[31m-                end[m
[31m-                [m
[31m-                if ((Narg.*0.5)==floor(Narg.*0.5))[m
[31m-                    % treating ds9.plot([1 1],'rs',...) like input[m
[31m-                    [m
[31m-                    Size = 10;[m
[31m-                    if (~isempty(strfind(varargin{2},'o')))[m
[31m-                        Marker = 'o';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'s')))[m
[31m-                        Marker = 's';[m
[31m-                        Size   = [10 10 0];[m
[31m-                    else[m
[31m-                        Marker = 'o';[m
[31m-                    end[m
[31m-                    if (~isempty(strfind(varargin{2},'r')))[m
[31m-                        Color = 'red';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'b')))[m
[31m-                        Color = 'blue';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'g')))[m
[31m-                        Color = 'green';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'k')))[m
[31m-                        Color = 'black';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'w')))[m
[31m-                        Color = 'white';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'m')))[m
[31m-                        Color = 'magenta';[m
[31m-                    elseif (~isempty(strfind(varargin{2},'c')))[m
[31m-                        Color = 'cyan';  [m
[31m-                    elseif (~isempty(strfind(varargin{2},'y')))[m
[31m-                        Color = 'yellow'; [m
[31m-                    else[m
[31m-                        Color = 'red';[m
[31m-                    end[m
[31m-                    varargin = varargin([1, 3:end]);[m
[31m-                    if any(strcmpi(varargin,'size'))[m
[31m-                        % Size already in varargin[m
[31m-                        varargin = [varargin, {'Marker',Marker,'Color',Color}];[m
[31m-                    else[m
[31m-                        % Size is not in varargin - use default[m
[31m-                        varargin = [varargin, {'Marker',Marker,'Color',Color,'Size',Size}];[m
[31m-                    end[m
[31m-                end[m
[31m-            end[m
[31m-                [m
[31m-            FileName = ds9.write_region(varargin{:});[m
[31m-            ds9.load_region(FileName);[m
[31m-            if (DeleteFile)[m
[31m-                delete(FileName);[m
[31m-                FileName = [];[m
[31m-            end[m
[31m-            [m
[31m-        end[m
[31m-                [m
[31m-        % plot line by x/y coordinates[m
[31m-        function line_xy(X,Y,varargin)[m
[31m-            % Plot a broken line[m
[31m-            % Package: @ds9[m
[31m-            % Description: Plot a broken line (curve) in ds9 image.[m
[31m-            % Input  : - Vector of X.[m
[31m-            %          - Vector of Y.[m
[31m-            %          * Additional parameters to pass to ds9.write_region[m
[31m-            %            function. The first argument may be a plot-like[m
[31m-            %            color indicator.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.line_xy([356 400],[2000 2100],'Color','green')[m
[31m-            %          ds9.line_xy([356 400],[2000 2100],'r')[m
[31m-            %          ds9.line_xy([356 400],[2000 2100],'w','width',3)[m
[31m-            %          ds9.line_xy([360,400,500],[2000 2010 2100])[m
[31m-            % Reliable: 2[m
[31m-[m
[31m-            [m
[31m-            DeleteFile = true;[m
[31m-            [m
[31m-            Narg  = numel(varargin);[m
[31m-            Color = 'red';[m
[31m-            if ~(Narg.*0.5==floor(Narg.*0.5))[m
[31m-                % assume 3rd parameter is a color indicator[m
[31m-                [m
[31m-                if (~isempty(strfind(varargin{1},'r')))[m
[31m-                    Color = 'red';[m
[31m-                elseif (~isempty(strfind(varargin{1},'b')))[m
[31m-                    Color = 'blue';[m
[31m-                elseif (~isempty(strfind(varargin{1},'g')))[m
[31m-                    Color = 'green';[m
[31m-                elseif (~isempty(strfind(varargin{1},'k')))[m
[31m-                    Color = 'black';[m
[31m-                elseif (~isempty(strfind(varargin{1},'w')))[m
[31m-                    Color = 'white';[m
[31m-                elseif (~isempty(strfind(varargin{1},'m')))[m
[31m-                    Color = 'magenta';[m
[31m-                elseif (~isempty(strfind(varargin{1},'c')))[m
[31m-                    Color = 'cyan';  [m
[31m-                elseif (~isempty(strfind(varargin{1},'y')))[m
[31m-                    Color = 'yellow'; [m
[31m-                else[m
[31m-                    Color = 'red';[m
[31m-                end[m
[31m-                varargin = varargin(2:end);[m
[31m-            end[m
[31m-            [m
[31m-            X1 = X(1:end-1);[m
[31m-            Y1 = Y(1:end-1);[m
[31m-            X2 = X(2:end);[m
[31m-            Y2 = Y(2:end);[m
[31m-            [m
[31m-            FileName = ds9.write_region([X1(:), Y1(:)],'Color',Color,varargin{:},'Marker','line','Size',[X1(:), Y1(:), X2(:), Y2(:)]);[m
[31m-            ds9.load_region(FileName);[m
[31m-            if (DeleteFile)[m
[31m-                delete(FileName);[m
[31m-                FileName = [];[m
[31m-            end[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        function line_lt(X,Y,Length,Theta,varargin)[m
[31m-            % Plot multiple lines based on X,Y,length,theta[m
[31m-            % Package: @ds9[m
[31m-            % Description: Plot multiple lines based on X,Y,length,theta[m
[31m-            % Input  : - Vector of X starting points.[m
[31m-            %          - Vector of Y starting points.[m
[31m-            %          - Vector of line lengths.[m
[31m-            %          - Vector of line angles [deg] measured from X-axis.[m
[31m-            %          * Additional parameters to pass to ds9.write_region[m
[31m-            %            function. The first argument may be a plot-like[m
[31m-            %            color indicator.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.line_lt(400,1900,100,10)[m
[31m-            %          ds9.line_lt(400,1900,100,10,'g','Width',3)[m
[31m-            %          ds9.line_lt([400,450],[1900,1910],[100,200],[10,45])[m
[31m-            [m
[31m-            Xend = X + Length.*cosd(Theta);[m
[31m-            Yend = Y + Length.*sind(Theta);[m
[31m-            [m
[31m-            N = numel(X);[m
[31m-            for I=1:1:N[m
[31m-                % for each line[m
[31m-                ds9.line_xy([X(I), Xend(I)],[Y(I), Yend(I)],varargin{:});[m
[31m-            end[m
[31m-        end[m
[31m-        [m
[31m-        % plot text[m
[31m-        function text(X,Y,Text,varargin)[m
[31m-            % plot text to ds9 current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: plot text to ds9 current frame in image[m
[31m-            %              coordinates position.[m
[31m-            % Input  : - Image coordinate X position (pixels), or J2000.0[m
[31m-            %            R.A. (deg or sexagesimal string). If string then[m
[31m-            %            will set 'Coo' to 'fk5' and assumes that also Dec[m
[31m-            %            is given in sexagesimal format.[m
[31m-            %          - Image coordinate Y position (pixels), or J2000.0[m
[31m-            %            Dec. (deg or sexagesimal string).[m
[31m-            %          - Text.[m
[31m-            %          * Arbitrary number of ...,key,val,... pairs.[m
[31m-            %            The following keywords are available:[m
[31m-            %             'Color'   - A string or a cell array of strings[m
[31m-            %                         of marker colors[m
[31m-            %                         ('red'|'blue'|'green'|'black'|[m
[31m-            %                          'white'|...).[m
[31m-            %                         Default is 'red'.[m
[31m-            %             'Width'   - A scalar or a vector of markers[m
[31m-            %                         width. Default is 1.[m
[31m-            %             'Font'    - Font type. Default is 'helvetica'.[m
[31m-            %             'FontSize'- Font size. Default is 16.[m
[31m-            %             'FontStyle'-Font style. Default is 'normal'.[m
[31m-            %             'Coo'     - Coordinate system: 'image'|'fk5'.[m
[31m-            %                         Default is 'image'.[m
[31m-            %                         [m
[31m-            % Output : null[m
[31m-            % see also: ds9.plot, ds9.write_region[m
[31m-            % Example: ds9.text(700,900,'Hello');[m
[31m-            %          ds9.text(700,980.1,'Hello','color','cyan');[m
[31m-            %          ds9.text(149.41455,69.758364,'Star','Coo','fk5'); % deg[m
[31m-            %          ds9.text('9:56:31.559','+69:49:27.60','Object','Color','blue')[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            [m
[31m-                [m
[31m-            [m
[31m-            DefV.Color               = 'red';[m
[31m-            DefV.Width               = 1;[m
[31m-            DefV.Font                = 'helvetica';  %'helvetica 16 normal'[m
[31m-            DefV.FontSize            = 16;[m
[31m-            DefV.FontStyle           = 'normal';[m
[31m-            DefV.Coo                 = 'image';[m
[31m-            InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-            [m
[31m-            if (ischar(X))[m
[31m-                InPar.Coo = 'fk5';[m
[31m-                IsSexagesimal = true;[m
[31m-            else[m
[31m-                IsSexagesimal = false;[m
[31m-            end[m
[31m-            [m
[31m-            if (IsSexagesimal)[m
[31m-                ds9.system('echo "%s; text %s %s # color=%s width=%d font={%s %d %s} text={%s}" | xpaset ds9 regions',...[m
[31m-                                InPar.Coo,X,Y,InPar.Color,InPar.Width,InPar.Font,InPar.FontSize,InPar.FontStyle,Text);[m
[31m-            else[m
[31m-                [m
[31m-                ds9.system('echo "%s; text %f %f # color=%s width=%d font={%s %d %s} text={%s}" | xpaset ds9 regions',...[m
[31m-                            InPar.Coo,X,Y,InPar.Color,InPar.Width,InPar.Font,InPar.FontSize,InPar.FontStyle,Text);[m
[31m-            end[m
[31m-        [m
[31m-            pause(0.2);[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        [m
[31m-    end[m
[31m-    [m
[31m-    % Tile methods[m
[31m-    methods (Static)[m
[31m-        % Set the tile display mode[m
[31m-        function tile(Par)[m
[31m-            % Set the tile the display mode of ds9[m
[31m-            % Package: @ds9[m
[31m-            % Description: Set the tile the display mode of ds9.[m
[31m-            % Input  : - Either a string to pass to the tile command,[m
[31m-            %            or this is a vector of the number of columns and[m
[31m-            %            rows in the tile display (i.e., layout command)[m
[31m-            %            Alternatively a third element may be provided with[m
[31m-            %            the grid gap (in pixels).[m
[31m-            %            Default is [3,2].[m
[31m-            % Output : null[m
[31m-            % Example: ds9.tile([3 3 10])[m
[31m-            %          ds9.tile('grid direction x')[m
[31m-            [m
[31m-            if (nargin==0)[m
[31m-                Par = [3 2];[m
[31m-            end[m
[31m-            [m
[31m-            if (ischar(Par))[m
[31m-                ds9.system('xpaset -p ds9 tile %s',Par);[m
[31m-            else[m
[31m-                if (numel(Par)==2)[m
[31m-                    ds9.system('xpaset -p ds9 tile grid layout %d %d',Par(1),Par(2));[m
[31m-                elseif (numel(Par)==3)[m
[31m-                    ds9.system('xpaset -p ds9 tile grid layout %d %d',Par(1),Par(2));[m
[31m-                    ds9.system('xpaset -p ds9 tile grid gap %d',Par(3));[m
[31m-                else[m
[31m-                    error('Numeric parameter may contain 2 or 3 values [Col, Rows, Gaps]');[m
[31m-                end[m
[31m-            end[m
[31m-            ds9.system('xpaset -p ds9 tile');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        function single[m
[31m-            % Set to single image display mode[m
[31m-            % Package: @ds9[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            % Example: ds9.single[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 single');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        function blink(Interval)[m
[31m-            % Set to blink display mode[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - Time interval. Default is 0.5s.[m
[31m-            % Output : null[m
[31m-            % Example: ds9.blink[m
[31m-            % Reliable: 2[m
[31m-        [m
[31m-            if (nargin==0)[m
[31m-                Interval = 0.5;[m
[31m-            end[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 blink interval %f',Interval);[m
[31m-            ds9.system('xpaset -p ds9 blink');[m
[31m-            fprintf('To stop blink mode - execute: ds9.single\n');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % array[m
[31m-        [m
[31m-        % bin[m
[31m-        % block[m
[31m-        [m
[31m-        % blink[m
[31m-        [m
[31m-        % crop[m
[31m-        [m
[31m-        % crosshair[m
[31m-        [m
[31m-        % cursor[m
[31m-        [m
[31m-        % get data[m
[31m-        [m
[31m-        % Set grid[m
[31m-        [m
[31m-        % dssstsci[m
[31m-        function dss(RA,Dec,Size,Band,Frame,Save)[m
[31m-            % Get a DSS sky image from stsci[m
[31m-            % Package: @ds9[m
[31m-            % Description: Get a DSS sky image from stsci.[m
[31m-            % Input  : - J2000 RA [radians, [H M S], or sexagesimal string],[m
[31m-            %            or object name (object name if Dec is empty).[m
[31m-            %          - J2000 Dec [radians, [sign D M S], or sexagesimal[m
[31m-            %            string]. If empty then assume that the first[m
[31m-            %            argument is object name.[m
[31m-            %          - Image size in arcsec. Default is [900 900].[m
[31m-            %          - Band: 'red2'|'blue2'|'ir2'|'red1'|'blue1'|...[m
[31m-            %                  'quickv'|'gsc1'|'gsc2'.[m
[31m-            %            Default is 'red2'.[m
[31m-            %          - Frame number: 'new'|'current'. Default is 'new'.[m
[31m-            %          - Save. Defaukt is false.[m
[31m-            [m
[31m-            Def.Dec   = [];[m
[31m-            Def.Size  = [900 900];[m
[31m-            Def.Band  = 'red2';[m
[31m-            Def.Frame = 'new';[m
[31m-            Def.Save  = false;[m
[31m-            if (nargin==1)[m
[31m-                Dec     = Def.Dec;[m
[31m-                Size    = Def.Size;[m
[31m-                Band    = Def.Band;[m
[31m-                Frame   = Def.Frame;[m
[31m-                Save    = Def.Save;[m
[31m-            elseif (nargin==2)[m
[31m-                Size    = Def.Size;[m
[31m-                Band    = Def.Band;[m
[31m-                Frame   = Def.Frame;[m
[31m-                Save    = Def.Save;[m
[31m-            elseif (nargin==3)[m
[31m-                Band    = Def.Band;[m
[31m-                Frame   = Def.Frame;[m
[31m-                Save    = Def.Save;[m
[31m-            elseif (nargin==4)[m
[31m-                Frame   = Def.Frame;[m
[31m-                Save    = Def.Save;[m
[31m-            elseif (nargin==5)[m
[31m-                Save    = Def.Save;[m
[31m-            elseif (nargin==6)[m
[31m-                % do nothing[m
[31m-            else[m
[31m-                error('Illegal number of input arguments: dss(RA,[Dec,Size,Band,Frame,Save]');[m
[31m-            end[m
[31m-                [m
[31m-            if (isempty(Dec))[m
[31m-                % Assume RA contains object name[m
[31m-                ds9.system('xpaset -p ds9 dssstsci %s',RA);[m
[31m-            else[m
[31m-                RA  = celestial.coo.convertdms(RA,'gH','SH');[m
[31m-                Dec = celestial.coo.convertdms(Dec,'gD','SD');[m
[31m-                ds9.system('xpaset -p ds9 dssstsci coord %s %s sexagesimal',RA,Dec);[m
[31m-            end[m
[31m-            [m
[31m-            if (numel(Size)==1)[m
[31m-                Size = [Size Size];[m
[31m-            end[m
[31m-            ds9.system('xpaset -p ds9 dssstsci size %d %d arcsec');[m
[31m-            [m
[31m-            if (Save)[m
[31m-                ds9.system('xpaset -p ds9 dssstsci save yes');[m
[31m-            else[m
[31m-                ds9.system('xpaset -p ds9 dssstsci save no');[m
[31m-            end[m
[31m-            [m
[31m-            % frame[m
[31m-            ds9.system('xpaset -p ds9 dssstsci frame %s',Frame);[m
[31m-            [m
[31m-            % band[m
[31m-            Translation = {'red2','poss2ukstu_red';...[m
[31m-                           'ir2','poss2ukstu_ir';...[m
[31m-                           'blue2','poss2ukstu_blue';...[m
[31m-                           'red1','poss1_red';...[m
[31m-                           'blue1','poss1_blue';...[m
[31m-                           'quickv','quickv';...[m
[31m-                           'gsc1','phase2_gsc1';...[m
[31m-                           'gsc2','phase2_gsc2'};[m
[31m-            Iband = find(strcmp(Translation(:,1),Band));[m
[31m-            if (isempty(Iband))[m
[31m-                error('Illegal band name');[m
[31m-            end[m
[31m-            Band = Translation{Iband,2};[m
[31m-            ds9.system('xpaset -p ds9 dssstsci survey %s',Band);[m
[31m-            [m
[31m-            % get image[m
[31m-            ds9.system('xpaset -p ds9 dssstsci');[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        % dsssao[m
[31m-        % dsseso[m
[31m-        % dssstsci[m
[31m-        % nvss[m
[31m-        % vlas[m
[31m-        % vo[m
[31m-        % 2mass[m
[31m-        % skyview[m
[31m-        % url[m
[31m-        [m
[31m-        % catalog[m
[31m-        [m
[31m-        [m
[31m-        % header[m
[31m-        [m
[31m-        % iexem[m
[31m-        [m
[31m-    end % methods[m
[31m-        [m
[31m-    % lock and match methods[m
[31m-    % (lock_wcs, lock_xy, match_wcs, match_xy, match_scale, match_scalelimits)[m
[31m-    methods (Static)[m
[31m-            [m
[31m-        % lock by wcs coordinates[m
[31m-        function lock_wcs(Par)[m
[31m-            % Lock all images WCS to current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Lock all images WCS to current frame.[m
[31m-            % Input  : - true|false. If not given than toggle.[m
[31m-            % Output : null[m
[31m-           [m
[31m-            if (nargin==0)[m
[31m-                % get lock status[m
[31m-                Ans = ds9.system('xpaget ds9 lock frame wcs');[m
[31m-                switch lower(Ans(1:3))[m
[31m-                    case 'wcs'[m
[31m-                        % toggle off[m
[31m-                        Par = false;[m
[31m-                    otherwise[m
[31m-                        Par = true;[m
[31m-                end[m
[31m-            end[m
[31m-            %ds9.system('xpaset -p ds9 lock frame wcs');[m
[31m-            if (Par)[m
[31m-                ds9.system('xpaset -p ds9 lock frame wcs');[m
[31m-            else[m
[31m-                ds9.system('xpaset -p ds9 lock frame none');[m
[31m-            end[m
[31m-                        [m
[31m-        end[m
[31m-        [m
[31m-        % lock by image coordinates[m
[31m-        function lock_xy(Par)[m
[31m-            % Lock all images x/y coordinayes to current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Lock all images x/y coordinayes to current frame.[m
[31m-            % Input  : - true|false. If not given than toggle.[m
[31m-            % Output : null[m
[31m-           [m
[31m-            if (nargin==0)[m
[31m-                % get lock status[m
[31m-                Ans = ds9.system('xpaget ds9 lock frame image');[m
[31m-                switch lower(Ans(1:4))[m
[31m-                    case 'imag'[m
[31m-                        % toggle off[m
[31m-                        Par = false;[m
[31m-                    [m
[31m-                    otherwise[m
[31m-                        Par = true;[m
[31m-                        %error('Unknonw Answer from xpaget lock frame image');[m
[31m-                end[m
[31m-            end[m
[31m-            %ds9.system('xpaset -p ds9 lock frame image');[m
[31m-            if (Par)[m
[31m-                ds9.system('xpaset -p ds9 lock frame image');[m
[31m-            else[m
[31m-                ds9.system('xpaset -p ds9 lock frame none');[m
[31m-            end[m
[31m-                        [m
[31m-        end[m
[31m-        [m
[31m-        [m
[31m-        % match by wcs coordinates[m
[31m-        function match_wcs[m
[31m-            % Match the WCS coordinates of all frames to the current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Match the WCS coordinates of all frames to the[m
[31m-            %              current frame.[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 match frame wcs');[m
[31m-        end[m
[31m-        [m
[31m-        % match by image coordinates[m
[31m-        function match_xy[m
[31m-            % Match the image coordinates of all frames to the current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Match the image coordinates of all frames to the[m
[31m-            %              current frame.[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 match frame image');[m
[31m-        end[m
[31m- [m
[31m-        % match by intensity scale[m
[31m-        function match_scale[m
[31m-            % Match the intensity scale of all frames to the current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Match the intensity scale of all frames to the[m
[31m-            %              current frame.[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 match scale');[m
[31m-        end[m
[31m-            [m
[31m-        % match by intensity scale[m
[31m-        function match_scalelimits[m
[31m-            % Match the intensity scalelimits of all frames to the current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Match the intensity scalelimits of all frames to[m
[31m-            %              the current frame.[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 match scalelimits');[m
[31m-        end[m
[31m-        [m
[31m-        % match by intensity scale[m
[31m-        function match_colorbar[m
[31m-            % Match the intensity colorbar of all frames to the current frame[m
[31m-            % Package: @ds9[m
[31m-            % Description: Match the intensity colorbar of all frames to[m
[31m-            %              the current frame.[m
[31m-            % Input  : null[m
[31m-            % Output : null[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 match colorbar');[m
[31m-        end[m
[31m-[m
[31m-        [m
[31m-    end % methods[m
[31m-        [m
[31m-    [m
[31m-    % xy2coo, coo2xy[m
[31m-    methods (Static)[m
[31m-        function [CooX,CooY]=coo2xy(RA,Dec,CooType)[m
[31m-            % Convert RA/Dec to X/Y (image) using ds9 tools[m
[31m-            % Package: @ds9[m
[31m-            % Input  : - RA [deg].[m
[31m-            %          - Dec [deg].[m
[31m-            %          - Output coordinate type: {'image'|'physical'}.[m
[31m-            %            Default is 'image.[m
[31m-            % Output : - X [pix].[m
[31m-            %          - Y [pix].[m
[31m-           [m
[31m-            if (nargin<3)[m
[31m-                CooType = 'image';[m
[31m-            end[m
[31m-            N    = numel(RA);[m
[31m-            CooX = zeros(N,1);[m
[31m-            CooY = zeros(N,1);[m
[31m-            for I=1:1:N[m
[31m-                %--- set coordinates of crosshair ---[m
[31m-                ds9.system(sprintf('xpaset -p ds9 crosshair %f %f wcs icrs',RA(I),Dec(I)));[m
[31m-                %--- get Coordinates of crosshair ---[m
[31m-                CooIm = ds9.system(sprintf('xpaget ds9 crosshair %s',CooType));[m
[31m-                %[CooX(I), CooY(I)] = strread(CooIm,'%f %f',1); %,'headerlines',4);[m
[31m-                Cell = textscan(CooIm,'%f %f'); %,'headerlines',4);[m
[31m-                CooX(I) = Cell{1};[m
[31m-                CooY(I) = Cell{2};[m
[31m-            end[m
[31m-            ds9.system(sprintf('xpaset -p ds9 mode pointer'));[m
[31m-[m
[31m-        end[m
[31m-        [m
[31m-    end [m
[31m-    [m
[31m-    % Interactive control and information (mouse)[m
[31m-    % (ginput, getpos, getcoo, getbox)[m
[31m-    methods (Static)[m
[31m-        [m
[31m-        function [CooX,CooY,Val,Key]=ginput(CooType,ExitMode,Mode)[m
[31m-            % Interactively get the coordinates (X/Y or WCS)[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactively get the coordinates (X/Y or WCS) and value[m
[31m-            %              of the pixel selected by the mouse (left click) or by clicking[m
[31m-            %              any character on the ds9 display.[m
[31m-            % Input  : - Coordinate type {'fk4'|'fk5'|'icrs'|'eq'|[m
[31m-            %                             'galactic'|'image'|'physical'},[m
[31m-            %            default is 'image'.[m
[31m-            %            'eq' is equivalent to 'icrs'.[m
[31m-            %          - Operation mode:[m
[31m-            %            If numeric than will return after the user clicked[m
[31m-            %            the specified number of times.[m
[31m-            %            if 'q' than will return if the user clicked 'q'.[m
[31m-            %            Default is 'q'.[m
[31m-            %          - Operation mode:[m
[31m-            %            'any'   - will return after any character or left click is[m
[31m-            %                      pressed (default).[m
[31m-            %            'key'   - will return after any character is pressed.[m
[31m-            %            'mouse' - will return after mouse left click is pressed.[m
[31m-            % Output : - X/RA or Galactic longitude. If celestial coordinates, the[m
[31m-            %            return the result in radians.[m
[31m-            %          - Y/Dec or Galactic latitude. If celestial coordinates, the[m
[31m-            %            return the result in radians.[m
[31m-            %          - Pixel value.[m
[31m-            %          - Cell array of string of clicked events.[m
[31m-            %            '<1>' for mouse left click.[m
[31m-            % Required: XPA - http://hea-www.harvard.edu/saord/xpa/[m
[31m-            % Tested : Matlab 7.0[m
[31m-            %     By : Eran O. Ofek                    Feb 2007[m
[31m-            %    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-            % Example: [X,Y,V]=ds9.ginput(3,'fk5');   % return the WCS RA/Dec position[m
[31m-            %          [X,Y,V,Key] = ds9.ginput('icrs','q','key');[m
[31m-            %          [X,Y,V,Key] = ds9.ginput('icrs',10,'mouse');[m
[31m-            %          [X,Y,V,Key] = ds9.ginout('image',2,'any');[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            [m
[31m-            RAD = 180./pi;[m
[31m-[m
[31m-            Def.CooType  = 'image';[m
[31m-            Def.ExitMode = 'q';[m
[31m-            Def.Mode     = 'any';[m
[31m-            if (nargin==0)[m
[31m-               CooType  = Def.CooType;[m
[31m-               ExitMode = Def.ExitMode;[m
[31m-               Mode     = Def.Mode;[m
[31m-            elseif (nargin==1)[m
[31m-               ExitMode = Def.ExitMode;[m
[31m-               Mode     = Def.Mode;[m
[31m-            elseif (nargin==2)[m
[31m-               Mode     = Def.Mode;[m
[31m-            elseif (nargin==3)[m
[31m-               % do nothing[m
[31m-            else[m
[31m-               error('Illegal number of input arguments: ds9.ginput(CooType,Mode);');[m
[31m-            end[m
[31m-[m
[31m-            switch lower(Mode)[m
[31m-             case 'mouse'[m
[31m-                Mode = '';[m
[31m-            end[m
[31m-            [m
[31m-            switch lower(CooType)[m
[31m-             case {'eq','equatorial'}[m
[31m-                CooType = 'icrs';[m
[31m-             otherwise[m
[31m-                % do nothing[m
[31m-            end[m
[31m-[m
[31m-            switch lower(CooType)[m
[31m-             case {'fk4','fk5','icrs'}[m
[31m-                String = sprintf('wcs %s degrees',lower(CooType));[m
[31m-             case {'gal','galactic'}[m
[31m-                String = 'wcs galactic degrees';[m
[31m-             case {'image'}[m
[31m-                String = 'image';[m
[31m-             case {'physical'}[m
[31m-                String = 'physical';[m
[31m-             otherwise[m
[31m-                error('Unknown CooType option');[m
[31m-            end[m
[31m-[m
[31m-%             CooX  = zeros(N,1);[m
[31m-%             CooY  = zeros(N,1);[m
[31m-%             Val   = zeros(N,1);[m
[31m-%             Key   = cell(N,1);[m
[31m-            Cont  = true;[m
[31m-            I     = 0;[m
[31m-            while Cont[m
[31m-               I = I + 1;[m
[31m-               %--- get Coordinates (from interactive mouse click) ---[m
[31m-               [Coo] = ds9.system('xpaget ds9 imexam %s coordinate %s',Mode,String);[m
[31m-               SpCoo = regexp(Coo,' ','split');[m
[31m-               Key{I} = SpCoo{1};[m
[31m-               CooX(I)   = str2double(SpCoo{2});[m
[31m-               CooY(I)   = str2double(SpCoo{3});[m
[31m-[m
[31m-               %--- set crosshair position to Coordinates ---[m
[31m-               ds9.system('xpaset -p ds9 crosshair %d %d %s',floor(CooX(I)),floor(CooY(I)),String);[m
[31m-               %--- get Coordinates of crosshair ---[m
[31m-               [CooIm] = ds9.system('xpaget ds9 crosshair image');[m
[31m-[m
[31m-               %--- get Pixel value at crosshair position ---[m
[31m-               [ValStr] = ds9.system('xpaget ds9 data image %d %d 1 1 yes',floor(CooX(I)),floor(CooY(I)));[m
[31m-               ValStr = strtrim(ValStr);[m
[31m-               [m
[31m-               %--- Exit crosshair mode ---[m
[31m-               ds9.system('xpaset -p ds9 mode none');[m
[31m-[m
[31m-               if (isempty(ValStr))[m
[31m-                    Val(I) = NaN;[m
[31m-               else[m
[31m-                    Val(I)          = sscanf(ValStr,'%f');[m
[31m-               end[m
[31m-               %CooVal       = sscanf(Coo,'%f %f');[m
[31m-               switch lower(CooType)[m
[31m-                case {'fk4','fk5','icrs','gal','galactic'}[m
[31m-                   CooX(I)            = CooX(I)./RAD;[m
[31m-                   CooY(I)            = CooY(I)./RAD;[m
[31m-                otherwise[m
[31m-                   % do nothing - image coordinates[m
[31m-               end[m
[31m-[m
[31m-               if (isnumeric(ExitMode))[m
[31m-                   if (I>=ExitMode)[m
[31m-                       Cont = false;[m
[31m-                   end[m
[31m-               else[m
[31m-                   switch lower(ExitMode)[m
[31m-                       case 'q'[m
[31m-                           if (strcmpi(Key{I},'q'))[m
[31m-                               Cont = false;[m
[31m-                           end[m
[31m-                       otherwise[m
[31m-                           error('Unknown Mode option');[m
[31m-                   end[m
[31m-               end[m
[31m-            end[m
[31m-            [m
[31m-            if (isnumeric(ExitMode))[m
[31m-                CooX = CooX.';[m
[31m-                CooY = CooY.';[m
[31m-                Val  = Val.';[m
[31m-                Key  = Key.';[m
[31m-            else[m
[31m-                CooX = CooX(1:end-1).';[m
[31m-                CooY = CooY(1:end-1).';[m
[31m-                Val = Val(1:end-1).';[m
[31m-                Key = Key(1:end-1).';[m
[31m-            end[m
[31m-            [m
[31m-            ds9.system('xpaset -p ds9 mode pointer');[m
[31m-[m
[31m-        end[m
[31m-        [m
[31m-        function [CooX,CooY,Value,Key]=getpos(varargin)[m
[31m-            % Get X,Y position and pixel value[m
[31m-            % Package: @ds9[m
[31m-            % Description: Get X,Y position and pixel value in clicked[m
[31m-            %              position.[m
[31m-            % Input  : - Operation mode:[m
[31m-            %            If numeric than will return after the user clicked[m
[31m-            %            the specified number of times.[m
[31m-            %            if 'q' than will return if the user clicked 'q'.[m
[31m-            %            Default is 'q'.[m
[31m-            %          - Operation mode:[m
[31m-            %            'any'   - will return after any character or left click is[m
[31m-            %                      pressed (default).[m
[31m-            %            'key'   - will return after any character is pressed.[m
[31m-            %            'mouse' - will return after mouse left click is pressed.[m
[31m-            % Output : - X[m
[31m-            %          - Y[m
[31m-            %          - Pixel value.[m
[31m-            %          - Cell array of string of clicked events.[m
[31m-            %            '<1>' for mouse left click.[m
[31m-            % Required: XPA - http://hea-www.harvard.edu/saord/xpa/[m
[31m-            % Tested : Matlab 7.0[m
[31m-            %     By : Eran O. Ofek                    Feb 2007[m
[31m-            %    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-            % Example: [X,Y,V]=ds9.getpos(3);[m
[31m-            %          [X,Y,V,Key] = ds9.getpos(1,'key');[m
[31m-            %          [X,Y,V,Key] = ds9.getpos(2,'mouse');[m
[31m-            %          [X,Y,V,Key] = ds9.getpos(1,'any');[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            [CooX,CooY,Value,Key]=ds9.ginput('image',varargin{:});[m
[31m-            [m
[31m-        end[m
[31m-            [m
[31m-        function [CooX,CooY,Value,Key]=getcoo(varargin)[m
[31m-            % Interactively get the coordinates (WCS)[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactively get the coordinates (WCS) and value[m
[31m-            %              of the pixel selected by the mouse (left click) or by clicking[m
[31m-            %              any character on the ds9 display.[m
[31m-            % Input  : - Operation mode:[m
[31m-            %            If numeric than will return after the user clicked[m
[31m-            %            the specified number of times.[m
[31m-            %            if 'q' than will return if the user clicked 'q'.[m
[31m-            %            Default is 'q'.[m
[31m-            %          - Operation mode:[m
[31m-            %            'any'   - will return after any character or left click is[m
[31m-            %                      pressed (default).[m
[31m-            %            'key'   - will return after any character is pressed.[m
[31m-            %            'mouse' - will return after mouse left click is pressed.[m
[31m-            % Output : - RA or Galactic longitude [rad].[m
[31m-            %          - Y/Dec or Galactic latitude [rad].[m
[31m-            %          - Pixel value.[m
[31m-            %          - Cell array of string of clicked events.[m
[31m-            %            '<1>' for mouse left click.[m
[31m-            % Required: XPA - http://hea-www.harvard.edu/saord/xpa/[m
[31m-            % Tested : Matlab 7.0[m
[31m-            %     By : Eran O. Ofek                    Feb 2007[m
[31m-            %    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-            % Example: [X,Y,V]=ds9.getcoo(3);   % return the WCS RA/Dec position[m
[31m-            %          [X,Y,V,Key] = ds9.getcoo('q','key');[m
[31m-            %          [X,Y,V,Key] = ds9.getcoo(2,'mouse');[m
[31m-            %          [X,Y,V,Key] = ds9.getcoo('q','any');[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            [m
[31m-            [CooX,CooY,Value,Key]=ds9.ginput('icrs',varargin{:});[m
[31m-            [m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        function [MatVal,MatX,MatY]=getbox(Coo,Method,CooType)[m
[31m-            % Get the pixel values in a specified box region[m
[31m-            % Package: @ds9[m
[31m-            %------------------------------------------------------------------------------[m
[31m-            % getbox function                                                          ds9[m
[31m-            % Description: Get from the ds9 display the pixel values in a specified[m
[31m-            %              box region.[m
[31m-            % Input  : - Box ccordinates (in 'image' coordinates):[m
[31m-            %            [Xmin, Xmax, Ymin,Ymax]  (section)[m
[31m-            %            or[m
[31m-            %            [X_left_corner,  Y_left_corner,  X_width,[m
[31m-            %            Y_height] (corner)[m
[31m-            %            or[m
[31m-            %            [X_center,       Y_center,       X_semiwidth,[m
[31m-            %            Y_semiheight] (center).[m
[31m-            %            Alternatively, if empty than the user have to[m
[31m-            %            define two corners of the box using the mouse left[m
[31m-            %            click. Default is empty.[m
[31m-            %          - Method of box position {'section'|'corner'|'center'},[m
[31m-            %            default is 'section'.[m
[31m-            %            Note that in case of Method='center' and CooType='image',[m
[31m-            %            box size will be 2*semiwidth+1.[m
[31m-            %          - Coordinate type {'image'|'physical'|'fk4'|'fk5'|'icrs'},[m
[31m-            %            default is 'image'.[m
[31m-            %            THIS OPTION IS NOT SUPPORTED![m
[31m-            % Output : - Matrix of pixel values in box.[m
[31m-            %          - Matrix of X position in 'image' coordinates, corresponding[m
[31m-            %            to the matrix of pixel values.[m
[31m-            %          - Matrix of Y position in 'image' coordinates, corresponding[m
[31m-            %            to the matrix of pixel values.[m
[31m-            % Reference: http://hea-www.harvard.edu/RD/ds9/ref/xpa.html[m
[31m-            % Tested : Matlab 7.0[m
[31m-            %     By : Eran O. Ofek                    Feb 2007[m
[31m-            %    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-            % Example: [MatV,MatX,MatY]=ds9.getbox([101 110 101 110]);[m
[31m-            % Reliable: 2[m
[31m-            %------------------------------------------------------------------------------[m
[31m-            Def.Coo      = [];[m
[31m-            Def.Method   = 'section';[m
[31m-            Def.CooType  = 'image';[m
[31m-[m
[31m-            if (nargin==0)[m
[31m-                Coo      = Def.Coo;[m
[31m-                Method   = Def.Method;[m
[31m-                CooType  = Def.CooType;[m
[31m-            elseif (nargin==1)[m
[31m-                Method   = Def.Method;[m
[31m-                CooType  = Def.CooType;   [m
[31m-            elseif (nargin==2)[m
[31m-                CooType  = Def.CooType;[m
[31m-            elseif (nargin==3)[m
[31m-                % do nothing[m
[31m-            else[m
[31m-               error('Illegal number of input arguments: ds9.getbox(Coo,Method,CooType)');[m
[31m-            end[m
[31m-            [m
[31m-            if (isempty(Coo))[m
[31m-                % get box coordinates from mouse clicks[m
[31m-                fprintf('Select two corners of the box using the mouse left clicks\n');[m
[31m-                [X,Y]  = ds9.ginput(CooType,2,'mouse');[m
[31m-                Method = 'section';[m
[31m-                Coo    = [min(X), max(X), min(Y), max(Y)];[m
[31m-            end            [m
[31m-            [m
[31m-            Coo = round(Coo);[m
[31m-            [m
[31m-            % convert Coordinate to 'corner' meethod[m
[31m-            switch lower(Method)[m
[31m-                 case 'section'[m
[31m-                     CornerCoo = [Coo(1), Coo(3), Coo(2)-Coo(1)+1, Coo(4)-Coo(3)+1];[m
[31m-                 case 'corner'[m
[31m-                     CornerCoo = Coo;[m
[31m-                 case 'center'[m
[31m-                     CornerCoo = [Coo(1) - Coo(3), Coo(2) - Coo(4), 2.*Coo(3)+1, 2.*Coo(4)+1];[m
[31m-                otherwise[m
[31m-                     error('Unknown Method option');[m
[31m-            end[m
[31m-[m
[31m-            SizeMat = [CornerCoo(4), CornerCoo(3)];   % [SizeY, SizeX][m
[31m-            MatVal  = zeros(SizeMat(1),SizeMat(2));[m
[31m-[m
[31m-            switch CooType[m
[31m-                case 'image'[m
[31m-[m
[31m-                    [Res] = ds9.system('xpaget ds9 data %s %f %f %f %f no',CooType,round(CornerCoo));[m
[31m-[m
[31m-                    ResMat = sscanf(Res,'%d,%d = %f\n',[3 SizeMat(1).*SizeMat(2)]);[m
[31m-                    ResMat = ResMat.';[m
[31m-                    % relative position in matrix (relative to corner)[m
[31m-                    RelX = ResMat(:,1) - min(ResMat(:,1)) + 1;[m
[31m-                    RelY = ResMat(:,2) - min(ResMat(:,2)) + 1;[m
[31m-[m
[31m-                    Ind         = sub2ind(SizeMat,RelY,RelX);[m
[31m-                    MatVal(Ind) = ResMat(:,3);[m
[31m-                    %MatVal      = MatVal; %.';[m
[31m-[m
[31m-                case 'fk5'[m
[31m-                    error('NOT SUPPORTED');[m
[31m-                    %[~,Res] = ds9_system(sprintf('xpaget ds9 data %s %f %f %f %f no',CooType,round(CornerCoo)));[m
[31m-                    %ResMat = sscanf(Res,'%f,%f = %f\n',[3 SizeMat(1).*SizeMat(2)]);[m
[31m-                    %ResMat = ResMat.';[m
[31m-[m
[31m-[m
[31m-                otherwise[m
[31m-                    error('CooType option is currently unsupported');[m
[31m-            end[m
[31m-[m
[31m-            if (nargout>1)[m
[31m-               [MatX,MatY] = meshgrid((1:1:SizeMat(2)),(1:1:SizeMat(1)));[m
[31m-               MatX        = MatX + CornerCoo(1)-1;[m
[31m-               MatY        = MatY + CornerCoo(2)-1;[m
[31m-            end[m
[31m-[m
[31m-        end[m
[31m-        [m
[31m-    end % methods[m
[31m-    [m
[31m-    % Interactive examination[m
[31m-    % (imexam,[m
[31m-    methods (Static)[m
[31m-        [m
[31m-        % plot and return a line profile along the x-axis[m
[31m-        function [Res]=imexam(Image,varargin)[m
[31m-            % ds9 image examination utility[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactive image examination in ds9.[m
[31m-            % Input  : - Optional image. This may be a SIM object[m
[31m-            %            containing a catalog.[m
[31m-            %            If not given then read the image from the current[m
[31m-            %            ds9 frame.[m
[31m-            %          * Arbitrary number of ...,keyword,value,... pairs.[m
[31m-            %            The following keywords are available:[m
[31m-            %            'Plot' - Display plot. Default is true.[m
[31m-            %            'PlotPar - Cell array of additional arguments to[m
[31m-            %                     pass to the plot command.[m
[31m-            %                     Default is {}.[m
[31m-            %            'AperRad' - Vector of aperture radii in which to[m
[31m-            %                     calculate aperture photometry.[m
[31m-            %                     Default is [2 4 8 12 16].[m
[31m-            %            'Annulus' - Aperture photometry background annulus[m
[31m-            %                     [inner outer] radius.[m
[31m-            %                     Default is [16 22].[m
[31m-            %            'ZP'    - Photometry zero point. Default is 22.[m
[31m-            %            'SemiLen' - Cuts line semi-length [pix].[m
[31m-            %                      Default is 15.[m
[31m-            %            'MeanFun' - Radial plots annular mean function[m
[31m-            %                      handle. Default is @mean.[m
[31m-            %            'Radius' - Radial plots radius [pix].[m
[31m-            %                      Default is 7.[m
[31m-            %            'Sigma'  - PSF sigma guess for first moment[m
[31m-            %                      estimation [pix]. Default is 1.5.[m
[31m-            %            'MaxIter' - Maximum number of centering[m
[31m-            %                      iterations. Default is 3.[m
[31m-            %            'BackPar' - Cell array of additional arguments to[m
[31m-            %                      pass to the SIM/background function.[m
[31m-            %                      Default is {'Block',[128 128]}.[m
[31m-            %            'ExtractionFun' - Source extraction function[m
[31m-            %                      handle. Default is @mextractor.[m
[31m-            %            'ExtractionFunPar' - Cell array of additional[m
[31m-            %                      arguments to pass to the source[m
[31m-            %                      extraction function.[m
[31m-            %            'SearchRad' - Nearest object catalog search[m
[31m-            %                      radius [pix]. Default is 50.[m
[31m-            %            'Field' - SIM field from which to extract cut[m
[31m-            %                      values. Default is 'Im'.[m
[31m-            % Output : - A structure array (element per click) with the[m
[31m-            %            retrieved numerical information.[m
[31m-            [m
[31m-            DefV.Plot             = true;[m
[31m-            DefV.PlotPar          = {};[m
[31m-            DefV.AperRad          = [2 4 8 12 16];[m
[31m-            DefV.Annulus          = [16 22];[m
[31m-            DefV.ZP               = 22;[m
[31m-            DefV.SemiLen          = 15;[m
[31m-            DefV.MeanFun          = @mean;[m
[31m-            DefV.Radius           = 7;[m
[31m-            DefV.Sigma            = 1.5;[m
[31m-            DefV.MaxIter          = 3;[m
[31m-            DefV.BackPar          = {'Block',[128 128]};[m
[31m-            DefV.ExtractionFun    = @mextractor;[m
[31m-            DefV.ExtractionFunPar = {};[m
[31m-            DefV.SearchRad        = 50;[m
[31m-            DefV.Field            = SIM.ImageField;[m
[31m-            InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-[m
[31m-            if (nargin==0)[m
[31m-                Image = [];[m
[31m-            end[m
[31m-            [m
[31m-            if (isempty(Image))[m
[31m-                % Read entire image from ds9[m
[31m-                Image = ds9.read2sim;[m
[31m-            else[m
[31m-                if (SIM.issim(Image))[m
[31m-                    % image already in SIM format - do nothing[m
[31m-                else[m
[31m-                    Image = images2sim(Image);[m
[31m-                end[m
[31m-            end[m
[31m-            [m
[31m-            Cont = true;[m
[31m-            Ind  = 0;[m
[31m-            while Cont[m
[31m-                Ind = Ind + 1;[m
[31m-                fprintf('\n');[m
[31m-                fprintf('Click h for help, q to abort\n');[m
[31m-                [CooX,CooY,~,Key]=ds9.getpos(1);[m
[31m-                Res(Ind).Type = Key;[m
[31m-                Res(Ind).CooX = CooX;[m
[31m-                Res(Ind).CooY = CooY;[m
[31m-                [m
[31m-                switch Key{1}[m
[31m-                    case {'Right','Left','Up','Down'}[m
[31m-                        % move cursor[m
[31m-                        IndPos = strcmp(Key{1},{'Right','Left','Up','Down'});[m
[31m-                        Pos = [1 0; -1 0; 0 -1; 0 1]; % note that up and down are inverted (ds9)[m
[31m-                        % Move cursor relative position[m
[31m-                        ds9.system('xpaset -p ds9 cursor %d %d',Pos(IndPos,:));[m
[31m-                        [m
[31m-                    case {'h','?','H'}[m
[31m-                        % display help[m
[31m-                        fprintf('\n --- ds9.imexam Menu:\n')[m
[31m-                        fprintf('q   - Abort\n');[m
[31m-                        fprintf('h   - This help\n');[m
[31m-                        fprintf('Left mouse click - recenter on mouse click\n');[m
[31m-                        fprintf('Arrows - move cursor\n');[m
[31m-                        fprintf('v   - Plot vector cut between 2 points\n');[m
[31m-                        fprintf('x,j - Plot vector cut along x axis\n');[m
[31m-                        fprintf('y,i - Plot vector cut along y axis\n');[m
[31m-                        fprintf('s   - Surface plot around point\n');[m
[31m-                        fprintf('c   - Countour plot around point\n');[m
[31m-                        fprintf('m   - First and second moments\n');[m
[31m-                        fprintf('r   - Radial profile with centering\n');[m
[31m-                        fprintf('R   - Radial profile without centering\n');[m
[31m-                        fprintf('a   - Aperture photometry with centering\n');[m
[31m-                        fprintf('A   - Aperture photometry without centering\n');[m
[31m-                        fprintf('p   - PSF photometry with centering\n');[m
[31m-                        fprintf('P   - PSF photometry without centering\n');[m
[31m-                        fprintf('b   - Estimate local background and noise\n');[m
[31m-                        fprintf('S   - Return the nearest source found using mextractor\n');[m
[31m-                        fprintf('e   - Edit/set parameters (and show help for editing)\n');[m
[31m-                    case 'q'[m
[31m-                        % Abort[m
[31m-                        Cont = false;[m
[31m-                    case '<1>'[m
[31m-                        % center on mouse click[m
[31m-                        fprintf('Recenter image on X=%9.3f  Y=%9.3f\n',CooX,CooY);[m
[31m-                        ds9.pan('to',CooX,CooY,'image');[m
[31m-                        [m
[31m-                    case 'v'[m
[31m-                        % plot vector cut between two points[m
[31m-                        fprintf('Click on second point for vector cut plot\n');[m
[31m-                        [CooX2,CooY2,~,~]=ds9.getpos(1);[m
[31m-                        cla;  % clear axis[m
[31m-                        Res(Ind).Res  = vector_prof(Image,[CooX,CooY],[CooX2,CooY2],...[m
[31m-                                                    'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,'Field',InPar.Field);[m
[31m-                    case {'x','j'}[m
[31m-                        % plot x-axis vector around a single point[m
[31m-                        cla;  % clear axis[m
[31m-                        Res(Ind).Res = vector_prof(Image,[CooX-InPar.SemiLen, CooY],...[m
[31m-                                                         [CooX+InPar.SemiLen, CooY],...[m
[31m-                                                   'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,'Field',InPar.Field,...[m
[31m-                                                   'AxisType','x');[m
[31m-                    case {'y','i'}[m
[31m-                        % plot y-axis vector around a single point[m
[31m-                        cla;  % clear axis[m
[31m-                        Res(Ind).Res = vector_prof(Image,[CooX, CooY-InPar.SemiLen],...[m
[31m-                                                         [CooX, CooY+InPar.SemiLen],...[m
[31m-                                                   'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,'Field',InPar.Field,...[m
[31m-                                                   'AxisType','y');[m
[31m-                    case 's'[m
[31m-                        % plot surface[m
[31m-                        cla;  % clear axis[m
[31m-                        Res(Ind).Res = local_surface(Image,[CooX, CooY],InPar.SemiLen,...[m
[31m-                                                     'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,'Field',InPar.Field,...[m
[31m-                                                     'PlotFun',@surface);[m
[31m-                                                 [m
[31m-                    case 'c'[m
[31m-                        % plot contour[m
[31m-                        cla; % clear axis[m
[31m-                        Res(Ind).Res = local_surface(Image,[CooX, CooY],InPar.SemiLen,...[m
[31m-                                                     'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,'Field',InPar.Field,...[m
[31m-                                                     'PlotFun',@contour);[m
[31m-                    case 'm'[m
[31m-                        % first and second moments[m
[31m-                        Res(Ind).Res = moments(Image,[CooX,CooY],...[m
[31m-                                               'Field',InPar.Field,'Radius',InPar.Radius,...[m
[31m-                                               'Sigma',InPar.Sigma,'MaxIter',InPar.MaxIter);[m
[31m-                        Table = astcat_array2table(Res(Ind).Res);[m
[31m-                        fprintf('Clicked position: X=%9.3f   Y=%9.3f\n',Res(Ind).CooX,Res(Ind).CooY);[m
[31m-                        fprintf('1st and 2nd moments (with %d iterations centering):\n',InPar.MaxIter);[m
[31m-                        disp(Table.Cat)[m
[31m-                    case 'r'[m
[31m-                        % radial profile with centering[m
[31m-                        ResM = moments(Image,[CooX,CooY],...[m
[31m-                                               'Field',InPar.Field,'Radius',InPar.Radius,...[m
[31m-                                               'Sigma',InPar.Sigma,'MaxIter',InPar.MaxIter);[m
[31m-                        X = col_get(ResM,'XWIN_IMAGE');[m
[31m-                        Y = col_get(ResM,'YWIN_IMAGE');[m
[31m-                        fprintf('Clicked position: X=%9.3f   Y=%9.3f\n',Res(Ind).CooX,Res(Ind).CooY);[m
[31m-                        fprintf('Centered position after %d iterations: X=%9.3f   Y=%9.3f\n',InPar.MaxIter,X,Y);[m
[31m-                        cla;  % clear axis[m
[31m-                        Res(Ind).Res = rad_prof(Image,[X, Y],...[m
[31m-                                                       InPar.Radius,...[m
[31m-                                                 'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,...[m
[31m-                                                 'MeanFun',InPar.MeanFun,...[m
[31m-                                                 'Field',InPar.Field);[m
[31m-                        Res(Ind).Res.X = X;[m
[31m-                        Res(Ind).Res.Y = Y;[m
[31m-                        [m
[31m-                    case 'R'[m
[31m-                        % radial profile without centering[m
[31m-                        cla;  % clear axis[m
[31m-                        Res(Ind).Res = rad_prof(Image,[CooX, CooY],...[m
[31m-                                                       InPar.Radius,...[m
[31m-                                                 'Plot',InPar.Plot,'PlotPar',InPar.PlotPar,...[m
[31m-                                                 'MeanFun',InPar.MeanFun,...[m
[31m-                                                 'Field',InPar.Field);[m
[31m-                    case 'a'[m
[31m-                        % Aperture photometry with centering[m
[31m-                        [m
[31m-                        CatField = AstCat.CatField;[m
[31m-                        [m
[31m-                        ResM = moments(Image,[CooX,CooY],...[m
[31m-                                               'Field',InPar.Field,'Radius',InPar.Radius,...[m
[31m-                                               'Sigma',InPar.Sigma,'MaxIter',InPar.MaxIter);[m
[31m-                        X = col_get(ResM,'XWIN_IMAGE');[m
[31m-                        Y = col_get(ResM,'YWIN_IMAGE');[m
[31m-                        [m
[31m-                        fprintf('Clicked position: X=%9.3f   Y=%9.3f\n',Res(Ind).CooX,Res(Ind).CooY);[m
[31m-                        fprintf('Centered position after %d iterations: X=%9.3f   Y=%9.3f\n',InPar.MaxIter,X,Y);[m
[31m-                        [m
[31m-                        [Res(Ind).Res,ColAper] = aper_phot(Image,[X, Y],...[m
[31m-                                                 'AperRad',InPar.AperRad,...[m
[31m-                                                 'Annulus',InPar.Annulus);[m
[31m-                                             [m
[31m-                        Naper = numel(InPar.AperRad);[m
[31m-                        fprintf('Aperture photometry\n');[m
[31m-                        for Iaper=1:1:Naper[m
[31m-                            fprintf('  AperPhot Luptitude (rad=%6.2f): %6.3f +/- %6.3f\n',InPar.AperRad(Iaper),...[m
[31m-                                                 convert.flux2mag(Res(Ind).Res.(CatField)(1,ColAper.Aper(Iaper)),InPar.ZP),...[m
[31m-                                                 Res(Ind).Res.(CatField)(1,ColAper.AperErr(Iaper))./...[m
[31m-                                                 Res(Ind).Res.(CatField)(1,ColAper.Aper(Iaper)));[m
[31m-                            fprintf('  AperPhot flux (rad=%6.2f): %6.3f +/- %6.3f\n',InPar.AperRad(Iaper),...[m
[31m-                                                                             Res(Ind).Res.(CatField)(1,ColAper.Aper(Iaper)),...[m
[31m-                                                                             Res(Ind).Res.(CatField)(1,ColAper.AperErr(Iaper)));[m
[31m-                        end[m
[31m-                    case 'A'[m
[31m-                        % Aperture photometry without centering[m
[31m-                        CatField = AstCat.CatField;[m
[31m-                        [m
[31m-                        fprintf('Clicked position: X=%9.3f   Y=%9.3f\n',Res(Ind).CooX,Res(Ind).CooY);[m
[31m-[m
[31m-                        [m
[31m-                        [Res(Ind).Res,ColAper] = aper_phot(Image,[CooX, CooY],...[m
[31m-                                                 'AperRad',InPar.AperRad,...[m
[31m-                                                 'Annulus',InPar.Annulus);[m
[31m-                                             [m
[31m-                        Naper = numel(InPar.AperRad);[m
[31m-                        fprintf('Aperture photometry\n');[m
[31m-                        for Iaper=1:1:Naper[m
[31m-                            fprintf('  AperPhot Luptitude (rad=%6.2f): %6.3f +/- %6.3f\n',InPar.AperRad(Iaper),...[m
[31m-                                                 convert.flux2mag(Res(Ind).Res.(CatField)(1,ColAper.Aper(Iaper)),InPar.ZP),...[m
[31m-                                                 Res(Ind).Res.(CatField)(1,ColAper.AperErr(Iaper))./...[m
[31m-                                                 Res(Ind).Res.(CatField)(1,ColAper.Aper(Iaper)));[m
[31m-                            fprintf('  AperPhot flux (rad=%6.2f): %6.3f +/- %6.3f\n',InPar.AperRad(Iaper),...[m
[31m-                                                                             Res(Ind).Res.(CatField)(1,ColAper.Aper(Iaper)),...[m
[31m-                                                                             Res(Ind).Res.(CatField)(1,ColAper.AperErr(Iaper)));[m
[31m-                        end[m
[31m-                                                                             [m
[31m-[m
[31m-                    case 'p'[m
[31m-                        % PSF photometry with centering[m
[31m-                    case 'P'[m
[31m-                        % PSF photometry without centering[m
[31m-                        [m
[31m-                        CatField = AstCat.CatField;[m
[31m-                        [m
[31m-                        [Res(Ind).Res,ColPSF] = psf_phot(Image,[CooX, CooY]);[m
[31m-                                                 [m
[31m-                                             [m
[31m-                        fprintf('PSF photometry\n');[m
[31m-                        fprintf('  PSF phot: %6.3f +/- %6.3f\n',Res(Ind).Res.(CatField)(1,ColPSF.Flux),...[m
[31m-                                                                Res(Ind).Res.(CatField)(1,ColPSF.FluxErr));[m
[31m-                    case 'b'[m
[31m-                        % Estimate local background and noise[m
[31m-                        BackField = SIM.BackField;[m
[31m-                        ErrField  = SIM.ErrField;[m
[31m-                        [m
[31m-                        if (~isfield_populated(Image,BackField) || ~isfield_populated(Image,ErrField))[m
[31m-                            % populate the background field[m
[31m-                            Image = background(Image,InPar.BackPar{:});[m
[31m-                        end[m
[31m-                        [m
[31m-                        % get background[m
[31m-                        if (numel(Image.(BackField))==1)[m
[31m-                            Res(Ind).Res.Back = Image.(BackField);[m
[31m-                        else[m
[31m-                            Res(Ind).Res.Back = Image.(BackField)(round(CooY),round(CooX));[m
[31m-                        end[m
[31m-                        % get noise[m
[31m-                        if (numel(Image.(ErrField))==1)[m
[31m-                            Res(Ind).Res.Err = Image.(ErrField);[m
[31m-                        else[m
[31m-                            Res(Ind).Res.Err = Image.(ErrField)(round(CooY),round(CooX));[m
[31m-                        end[m
[31m-                        [m
[31m-                        fprintf('Clicked position: X=%9.3f   Y=%9.3f\n',Res(Ind).CooX,Res(Ind).CooY);[m
[31m-                        fprintf('  Background : %f\n',Res(Ind).Res.Back);[m
[31m-                        fprintf('  Noise      : %f\n',Res(Ind).Res.Err);[m
[31m-                        [m
[31m-                    case 'S'[m
[31m-                        % Return the nearest source found using mextractor[m
[31m-                        % check if catalog exist[m
[31m-                        CatField = AstCat.CatField;[m
[31m-                        if (~isfield_populated(Image,CatField))[m
[31m-                            Image = InPar.ExtractionFun(Image,InPar.ExtractionFunPar{:});[m
[31m-                        end[m
[31m-                        [AstC,Dist] = near_coo(Image,CooX,CooY,InPar.SearchRad,'RadiusUnits','pix');[m
[31m-                        D = col_get(Dist,'Dist');[m
[31m-                        [~,MinI] = min(D);[m
[31m-                        NearCat = row_select(Image,MinI);[m
[31m-                        % show catalog of nearest source[m
[31m-                        fprintf('  Nearest source\n');[m
[31m-                        show(NearCat);[m
[31m-                        [m
[31m-                    case 'e'[m
[31m-                        % Edit/set parameters (and show help for editing)[m
[31m-                        fprintf('Edit the internal ds9.imexam parameters\n');[m
[31m-                        fprintf('Possible parameters:\n');[m
[31m-                        fprintf('  Plot    - plot figure [default is true]\n');[m
[31m-                        fprintf('  AperRad - Aperture phot radii [default is [2 4 8 12 16]]\n');[m
[31m-                        fprintf('  Annulus - Annulus inner/outer radii [default is [16 22]]\n');[m
[31m-                        fprintf('  ZP      - Photometric ZP [default is 22]\n');[m
[31m-                        fprintf('  PlotPar - Plot parameters [default is {}]\n');[m
[31m-                        fprintf('  SemiLen - Line/surface semi length [default is 15]\n');[m
[31m-                        fprintf('  Radius  - Moments and radial radius [default is 7]\n');[m
[31m-                        fprintf('  MeanFun - Function for radial profile mean [default is @mean]\n');[m
[31m-                        fprintf('  Sigma   - Moments sigma of Gaussian weighting [default is 1.5]\n');[m
[31m-                        fprintf('  MaxIter - Number of moments iterations [default is 3]\n');[m
[31m-                        fprintf('  BackPar - Additional pars to pass to SIM/background [default is {}]\n');[m
[31m-                        fprintf('  ExtractionFun- Source extraction prog [default is @mextractor]\n');[m
[31m-                        fprintf('  ExtractionFunPar- Additional pars to pass to extraction prog [default is {}]\n');[m
[31m-                        fprintf('  SearchRad- Sources search radius [default is 50]\n');[m
[31m-                        fprintf('  Field   - SIM field on which to operate [default is Im]\n');[m
[31m-                        [m
[31m-                        Ans = input('Insert parameter and its value (e.g., "SearchRad=100") : ','s');[m
[31m-                        if (~isempty(Ans))[m
[31m-                            eval(sprintf('InPar.%s',Ans));[m
[31m-                        end[m
[31m-                                                                       [m
[31m-                    otherwise[m
[31m-                        fprintf('  Unknown ds9.imexam click option - try again\n');[m
[31m-                end[m
[31m-                        [m
[31m-                        [m
[31m-                        [m
[31m-                        [m
[31m-            [m
[31m-            [m
[31m-            end[m
[31m-        end[m
[31m-            [m
[31m-    end  % end methods[m
[31m-    [m
[31m-    % Interactive ploting[m
[31m-    % (imark, iline, ipoly)[m
[31m-    methods (Static)[m
[31m-        [m
[31m-        % Interactive marker plot[m
[31m-        function [X,Y,Val]=imark(varargin)[m
[31m-            % Interactive plot symbols[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactive plot symbols in right click[m
[31m-            %              coordinates. Use 'q' click to abort.[m
[31m-            %              Click 'c' to switch to circle plotting, and[m
[31m-            %              's' for box plotting.[m
[31m-            % Input  : * Any of the additional marker type parameters of[m
[31m-            %            the ds9.plot function. I.e., the arguments[m
[31m-            %            following the X,Y coordinates.[m
[31m-            % Output : - Vector of clicked X positions.[m
[31m-            %          - Vector of clicked Y positions.[m
[31m-            %          - Vector of values in clicked positions.[m
[31m-            % Example: ds9.imark;[m
[31m-            %          ds9.imark('Marker','s','Size',[10 10 45]);[m
[31m-            %          ds9.imark('rs');[m
[31m-            %          ds9.imark('rs','size',[20 20 0]);[m
[31m-            %          ds9.imark('ro','Text','Object X');[m
[31m-            % Reliable: 2[m
[31m-        [m
[31m-            Cont = true;[m
[31m-            while Cont[m
[31m-                [m
[31m-                [X,Y,Val,Key]=ds9.getpos(1,'any');[m
[31m-                Marker = [];[m
[31m-                [m
[31m-                switch Key{1}[m
[31m-                    case 'q'[m
[31m-                        % abort[m
[31m-                        Cont = false;[m
[31m-                    otherwise[m
[31m-                        switch lower(Key{1})[m
[31m-                            case '<1>'[m
[31m-                                % left click - mark with previous marker[m
[31m-                                Cont = true;[m
[31m-                            case 'c'[m
[31m-                                % plot circle[m
[31m-                                Marker = 'o';[m
[31m-                            case 's'[m
[31m-                                Marker = 's';[m
[31m-                            otherwise[m
[31m-                                % abort[m
[31m-                                Cont = true;[m
[31m-                        end[m
[31m-                end[m
[31m-                   [m
[31m-                % plot[m
[31m-                if (Cont)[m
[31m-                    if (isempty(Marker))[m
[31m-                        ds9.plot(X,Y,varargin{:});[m
[31m-                    else[m
[31m-                        % use user-defined marker[m
[31m-                        ds9.plot(X,Y,varargin{:},'Marker',Marker);[m
[31m-                    end[m
[31m-                end[m
[31m-                [m
[31m-            end[m
[31m-        end[m
[31m-        [m
[31m-        function [X,Y,ValLine,LineX,LineY]=iline(varargin)[m
[31m-            % Interactively plot a line[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactively plot a line in ds9 between two[m
[31m-            %              points defined by mouse left clicks.[m
[31m-            %              Also return the interpolated values in the image[m
[31m-            %              along the line.[m
[31m-            % Input  : * Any of the additional marker type parameters of[m
[31m-            %            the ds9.plot function. I.e., the arguments[m
[31m-            %            following the X,Y coordinates.[m
[31m-            % Output : - X coordinates of start and end points.[m
[31m-            %          - Y coordinates of start and end points.[m
[31m-            %          - Interpolated image values along the line.[m
[31m-            %          - X coordinates along the line.[m
[31m-            %          - Y coordinates along the line.[m
[31m-            % Example: [X,Y,ValLine,LineX,LineY]=ds9.iline;[m
[31m-            % Reliabel: 2[m
[31m-            [m
[31m-            InterpMethod = 'linear';[m
[31m-            [m
[31m-            fprintf('Click on two points using mouse left click or any keyboard key\n');[m
[31m-            [X,Y,~,~]=ds9.getpos(2,'any');[m
[31m-            ds9.plot(1,1,varargin{:},'Size',[X(1), Y(1), X(2), Y(2)],'Marker','line');[m
[31m-            if (nargout>2)[m
[31m-                % get values along the line[m
[31m-                [m
[31m-                [MatVal,MatX,MatY]=ds9.getbox([min(X), max(X), min(Y), max(Y)],'section');[m
[31m-                [m
[31m-                Dist       = Util.Geom.plane_dist(X(1),Y(1),X(2),Y(2));[m
[31m-                RoundDist  = round(Dist);[m
[31m-                LineX      = (X(1):(X(2)-X(1))./RoundDist:X(2)).';[m
[31m-                LineY      = (Y(1):(Y(2)-Y(1))./RoundDist:Y(2)).';[m
[31m-                ValLine = interp2(MatX,MatY,MatVal,LineX,LineY,InterpMethod);[m
[31m-            end[m
[31m-                [m
[31m-        end[m
[31m-        [m
[31m-        function [X,Y]=ipoly(varargin)[m
[31m-            % Interactively plot a polygon[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactively plot a polygon. Verteces are[m
[31m-            %              defined by mouse or keybord clicks.[m
[31m-            %              'q' to finish and abort.[m
[31m-            % Input  : * Any of the additional marker type parameters of[m
[31m-            %            the ds9.plot function. I.e., the arguments[m
[31m-            %            following the X,Y coordinates.[m
[31m-            % Output : - X coordinates of verteces.[m
[31m-            %          - Y coordinates of verteces.[m
[31m-            % Example: [x,y]=ds9.ipoly;[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            [X,Y]=ds9.getpos;[m
[31m-            X(end+1) = X(1);[m
[31m-            Y(end+1) = Y(1);[m
[31m-            N = numel(X);[m
[31m-            for I=1:1:N-1[m
[31m-                ds9.plot(1,1,varargin{:},'Size',[X(I), Y(I), X(I+1), Y(I+1)],'Marker','line');[m
[31m-            end[m
[31m-            [m
[31m-        end[m
[31m-                    [m
[31m-    end % methods[m
[31m-    [m
[31m-    % Interactive coordinates to image in browser[m
[31m-    methods (Static)[m
[31m-        function [RA,Dec,Link]=sdssnavi(Browser)[m
[31m-            % Open SDSS navigator for clicked position[m
[31m-            % Package: @ds9[m
[31m-            % Description: Click on a position in an image displayed in ds9 and this[m
[31m-            %              program will open the SDSS navigator web page for the[m
[31m-            %              coordinates.[m
[31m-            % Input  : - Broweser type:[m
[31m-            %            'browser' - existing system browser (default).[m
[31m-            %            'new'     - Matlab internal browser.[m
[31m-            % Output : - J2000.0 RA of position [radians].[m
[31m-            %          - J2000.0 Dec of position [radians].[m
[31m-            %          - Link to SDSS navigator.[m
[31m-            % Required: XPA - http://hea-www.harvard.edu/saord/xpa/[m
[31m-            % Tested : Matlab 7.11[m
[31m-            %     By : Eran O. Ofek                    May 2011[m
[31m-            %    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-            % Example: [RA,Dec,Link]=ds9.sdssnavi;[m
[31m-            % Reliable: 2[m
[31m-            %------------------------------------------------------------------------------[m
[31m-            Def.Browser = 'browser';[m
[31m-            if (nargin==0)[m
[31m-               Browser = Def.Browser;[m
[31m-            elseif (nargin==1)[m
[31m-               % do nothing[m
[31m-            else[m
[31m-               error('Illegal number of input arguments');[m
[31m-            end[m
[31m-[m
[31m-            % get RA/Dec[m
[31m-            fprintf('Click on coordinates to get SDSS navigator in browser\n');[m
[31m-            [RA,Dec]=ds9.getcoo(1);[m
[31m-[m
[31m-            % get Link to SDSS navigator[m
[31m-            [Link] = VO.SDSS.navigator_link(RA,Dec);[m
[31m-            web(Link{1},sprintf('-%s',Browser));[m
[31m-            Link = Link{1};[m
[31m-        end[m
[31m-[m
[31m-           function [RA,Dec,Link]=nedlink(Browser)[m
[31m-            % Open NED link for clicked position[m
[31m-            % Package: @ds9[m
[31m-            % Description: Click on a position in an image displayed in ds9 and this[m
[31m-            %              program will open the NED coordinate search web page for the[m
[31m-            %              coordinates.[m
[31m-            % Input  : - Broweser type:[m
[31m-            %            'browser' - existing system browser (default).[m
[31m-            %            'new'     - Matlab internal browser.[m
[31m-            % Output : - J2000.0 RA of position [radians].[m
[31m-            %          - J2000.0 Dec of position [radians].[m
[31m-            %          - Link to NED search page.[m
[31m-            % Required: XPA - http://hea-www.harvard.edu/saord/xpa/[m
[31m-            % Tested : Matlab 7.11[m
[31m-            %     By : Eran O. Ofek                    May 2011[m
[31m-            %    URL : http://weizmann.ac.il/home/eofek/matlab/[m
[31m-            % Example: [RA,Dec,Link]=ds9.sdssnavi;[m
[31m-            % Reliable: 2[m
[31m-            %------------------------------------------------------------------------------[m
[31m-            SearchRad = 3;  % arcmin[m
[31m-            Def.Browser = 'browser';[m
[31m-            if (nargin==0)[m
[31m-               Browser = Def.Browser;[m
[31m-            elseif (nargin==1)[m
[31m-               % do nothing[m
[31m-            else[m
[31m-               error('Illegal number of input arguments');[m
[31m-            end[m
[31m-[m
[31m-            % get RA/Dec[m
[31m-            fprintf('Click on coordinates to get SDSS navigator in browser\n');[m
[31m-            [RA,Dec]=ds9.getcoo(1);[m
[31m-[m
[31m-            % get Link to SDSS navigator[m
[31m-            [Link] = VO.NED.ned_link(RA,Dec,SearchRad);[m
[31m-            web(Link{1},sprintf('-%s',Browser));[m
[31m-            Link = Link{1};[m
[31m-        end[m
[31m-[m
[31m-    end % methods[m
[31m-    [m
[31m-    % Interactive coordinate to local/external catalog[m
[31m-    methods (Static)[m
[31m-        function [Cat,RA,Dec]=sdsscat(SearchRadius)[m
[31m-            % Get SDSS catalog near clicked position[m
[31m-            % Package: @ds9[m
[31m-            % Description: Get SDSS catalog near clicked position[m
[31m-            % Input  : - Search radius [arcsec]. Default is 10.[m
[31m-            % Output : - Catalog containing SDSS sources near clicked[m
[31m-            %            position.[m
[31m-            %          - Clicked J2000.0 RA coordinate [rad].[m
[31m-            %          - Clicked J2000.0 Dec coordinate [rad].[m
[31m-            % Example: [RA,Dec,Cat]=ds9.sdsscat;[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            RAD = 180./pi;[m
[31m-            [m
[31m-            Def.SearchRadius = 10;[m
[31m-            if (nargin==0)[m
[31m-                SearchRadius = Def.SearchRadius;[m
[31m-            end[m
[31m-            [m
[31m-            % get RA/Dec[m
[31m-            fprintf('Click on position to get SDSS catalog near coordinates\n');[m
[31m-            [RA,Dec]=ds9.getcoo(1);[m
[31m-            [m
[31m-            [Cat]=get_sdss(RA,Dec,SearchRadius./(RAD.*3600));[m
[31m-            [m
[31m-        end[m
[31m-        [m
[31m-        [m
[31m-        [m
[31m-        [m
[31m-    end % methods[m
[31m-    [m
[31m-    % Interact with SIM catalogs[m
[31m-    methods (Static)[m
[31m-        [m
[31m-[m
[31m-        function [Cat,MinDist,Units,XRA,YDec,PixVal]=nearestcat(Sim,varargin)[m
[31m-            % Get the nearest source in a SIM/AstCat object[m
[31m-            % Package: @ds9[m
[31m-            % Description: Get the nearest source in a SIM/AstCat object[m
[31m-            %              to the clicked position.[m
[31m-            % Input  : - A SIM or AstCat object.[m
[31m-            %          * Arbitrary number of pairs of ...,key,val,...[m
[31m-            %            arguments. The following keywords are available:[m
[31m-            %            'ColX'  - Cell array of possible keywords[m
[31m-            %                      containing the X coordinate column name[m
[31m-            %                      on which to search.[m
[31m-            %                      The first existing column name will be[m
[31m-            %                      used.[m
[31m-            %                      Default is[m
[31m-            %                      {'XWIN_IMAGE','X','ALPHAWIN_J2000','RA'}[m
[31m-            %            'ColY'  - Like 'ColX' but for the Y coordinate.[m
[31m-            %                      Default is [m
[31m-            %                      {'YWIN_IMAGE','Y','DELTAWIN_J2000','Dec'}[m
[31m-            %            'ColUnits' - Units corresponding to 'ColX'.[m
[31m-            %                      Default is {'pix','pix','deg','ra'}.[m
[31m-            %            'SrcFun'  - Source extraction function to use.[m
[31m-            %                      Default is @mextractor[m
[31m-            %            'SrcPar'  - Cell array of additional parameters[m
[31m-            %                      to pass to the source extraction[m
[31m-            %                      function. Default is {}.[m
[31m-            %            'SearchRad' - Search radius [rad] or [pix].[m
[31m-            %                      Units defined by availability of column[m
[31m-            %                      in the catalog.[m
[31m-            %                      If empty then return only the nearest[m
[31m-            %                      source.[m
[31m-            %                      Default is empty.[m
[31m-            %            'Verbose' - Default is true.[m
[31m-            % Output : - AstCat object containing the nearest source to[m
[31m-            %            clicked position.[m
[31m-            %          - Distance to nearest source [rad] or [pix].[m
[31m-            %          - Units of RA/Dec (and distance).[m
[31m-            %          - RA or X coordinate of clicked position.[m
[31m-            %          - Dec or Y coordinate of clicked position.[m
[31m-            %          - Value at clicked position.[m
[31m-            % See also: ds9.nearcat[m
[31m-            % Example: [Cat,MinDist,RA,Dec]=ds9.nearestcat(Sim);[m
[31m-            % Reliable: 2[m
[31m-            [m
[31m-            if (~AstCat.isastcat(Sim))[m
[31m-                error('First input argument must be an AstCat object');[m
[31m-            end[m
[31m-            [m
[31m-            RAD = 180./pi;[m
[31m-            CatField     = AstCat.CatField;[m
[31m-            ColCellField = AstCat.ColCellField;[m
[31m-            [m
[31m-            DefV.ColX                = {'XWIN_IMAGE','X','ALPHAWIN_J2000','RA'};[m
[31m-            DefV.ColY                = {'YWIN_IMAGE','Y','DELTAWIN_J2000','Dec'};[m
[31m-            DefV.ColUnits            = {'pix','pix','deg','rad'};[m
[31m-            DefV.SrcFun              = @mextractor;[m
[31m-            DefV.SrcPar              = {};[m
[31m-            DefV.SearchRad           = [];[m
[31m-            DefV.Verbose             = true;[m
[31m-            InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-            [m
[31m-            if (~isfield_populated(Sim,ColCellField))[m
[31m-                % Cat is not populated[m
[31m-                % run mextractor[m
[31m-                fprintf('Catalog is not populated - extract sources\n');[m
[31m-                Sim = InPar.SrcFun(Sim,InPar.SrcPar{:});[m
[31m-            end[m
[31m-            [~,ColIndX,UseIndX] = select_exist_colnames(Sim,InPar.ColX(:));[m
[31m-            [~,ColIndY]         = select_exist_colnames(Sim,InPar.ColY(:));[m
[31m-            ColUnits            = InPar.ColUnits{UseIndX};[m
[31m-            [m
[31m-            X = col_get(Sim,ColIndX);[m
[31m-            Y = col_get(Sim,ColIndY);[m
[31m-            switch lower(ColUnits)[m
[31m-                case 'deg'[m
[31m-                    X = X./RAD;[m
[31m-                    Y = Y./RAD;[m
[31m-                    ColUnits = 'rad';[m
[31m-                otherwise[m
[31m-                    % do nothing - already in pix or rad[m
[31m-            end[m
[31m-            [m
[31m-            Cont = true;[m
[31m-            Ind  = 0;[m
[31m-            while Cont[m
[31m-                Ind = Ind + 1;[m
[31m-                switch lower(ColUnits)[m
[31m-                    case {'deg','rad'}[m
[31m-                        % get RA/Dec - spherical coordinates[m
[31m-                        fprintf('Click on position to get SIM catalog near coordinates - q to abort\n');[m
[31m-                        [RA,Dec,Val,Key]=ds9.getcoo(1);[m
[31m-[m
[31m-                        D = sphere_dist(X,Y,RA,Dec);[m
[31m-                    case 'pix'[m
[31m-                        % get X/Y - planner coordinates[m
[31m-                        fprintf('Click on position to get SIM catalog near coordinates - q to abort\n');[m
[31m-                        [RA,Dec,Val,Key]=ds9.getpos(1);[m
[31m-[m
[31m-                        D = Util.Geom.plane_dist(X,Y,RA,Dec);[m
[31m-                    otherwise[m
[31m-                        error('Unknown ColUnits option');[m
[31m-                end[m
[31m-                [m
[31m-                switch lower(Key{1})[m
[31m-                    case 'q'[m
[31m-                        % abort[m
[31m-                        Cont = false;[m
[31m-                    otherwise[m
[31m-                        [~,MinInd]   = min(D);[m
[31m-                        MinDist(Ind) = D(MinInd);[m
[31m-                        if (isempty(InPar.SearchRad))[m
[31m-                            % found sources[m
[31m-                            IndF     = MinInd;[m
[31m-                        else[m
[31m-                            IndF     = D<InPar.SearchRad;[m
[31m-                        end[m
[31m-                        Cat(Ind)     = row_select(Sim,IndF);[m
[31m-                        Units{Ind}   = ColUnits;[m
[31m-                        XRA(Ind)     = RA;[m
[31m-                        YDec(Ind)    = Dec;[m
[31m-                        PixVal(Ind)  = Val;[m
[31m-[m
[31m-                        if (InPar.Verbose),[m
[31m-                            fprintf('\n');[m
[31m-                            fprintf('Clicked position:  %f %f [%s]\n',RA,Dec,Units{Ind})[m
[31m-                            fprintf('Distance: %f [%s]\n',MinDist(Ind),Units{Ind});[m
[31m-                            fprintf('Clicked position value: %f\n',PixVal(Ind));[m
[31m-                            fprintf('-----------------------\n');[m
[31m-                            disp(array2table(Cat(Ind).(CatField),'VariableNames',Cat(Ind).(ColCellField)))[m
[31m-                        end[m
[31m-                end[m
[31m-            end[m
[31m-        end[m
[31m-        [m
[31m-        [m
[31m-        function [Cat,MinDist,Units,XRA,YDec,PixVal]=nearcat(Sim,SearchRad,varargin)[m
[31m-            % Get the nearest source in a SIM/AstCat object[m
[31m-            % Package: @ds9[m
[31m-            % Description: Get the nearest source in a SIM/AstCat object[m
[31m-            %              to the clicked position.[m
[31m-            % Input  : - A SIM or AstCat object.[m
[31m-            %          - Search radius. Default is 100 (in units of queried[m
[31m-            %            column).[m
[31m-            %          * Arbitrary number of pairs of ...,key,val,...[m
[31m-            %            arguments. The following keywords are available:[m
[31m-            %            'ColX'  - Cell array of possible keywords[m
[31m-            %                      containing the X coordinate column name[m
[31m-            %                      on which to search.[m
[31m-            %                      The first existing column name will be[m
[31m-            %                      used.[m
[31m-            %                      Default is[m
[31m-            %                      {'XWIN_IMAGE','X','ALPHAWIN_J2000','RA'}[m
[31m-            %            'ColY'  - Like 'ColX' but for the Y coordinate.[m
[31m-            %                      Default is [m
[31m-            %                      {'YWIN_IMAGE','Y','DELTAWIN_J2000','Dec'}[m
[31m-            %            'ColUnits' - Units corresponding to 'ColX'.[m
[31m-            %                      Default is {'pix','pix','deg','ra'}.[m
[31m-            %            'SrcFun'  - Source extraction function to use.[m
[31m-            %                      Default is @mextractor[m
[31m-            %            'SrcPar'  - Cell array of additional parameters[m
[31m-            %                      to pass to the source extraction[m
[31m-            %                      function. Default is {}.[m
[31m-            %            'Verbose' - Default is true.[m
[31m-            % Output : - AstCat object containing the nearest source to[m
[31m-            %            clicked position.[m
[31m-            %          - Distance to nearest source [rad] or [pix].[m
[31m-            %          - Units of RA/Dec (and distance).[m
[31m-            %          - RA or X coordinate of clicked position.[m
[31m-            %          - Dec or Y coordinate of clicked position.[m
[31m-            %          - Value at clicked position.[m
[31m-            % See also: ds9.nearcat[m
[31m-            % Example: [Cat,MinDist,RA,Dec]=ds9.nearcat(Sim,100);[m
[31m-            % Reliable: 2[m
[31m-          [m
[31m-            [m
[31m-            RAD = 180./pi;[m
[31m-            CatField     = AstCat.CatField;[m
[31m-            ColCellField = AstCat.ColCellField;[m
[31m-            [m
[31m-            if (nargin==1)[m
[31m-                SearchRad = 100;[m
[31m-            end[m
[31m-            [m
[31m-            DefV.ColX                = {'XWIN_IMAGE','X','ALPHAWIN_J2000','RA'};[m
[31m-            DefV.ColY                = {'YWIN_IMAGE','Y','DELTAWIN_J2000','Dec'};[m
[31m-            DefV.ColUnits            = {'pix','pix','deg','rad'};[m
[31m-            DefV.SrcFun              = @mextractor;[m
[31m-            DefV.SrcPar              = {};[m
[31m-            DefV.Verbose             = true;[m
[31m-            InPar = InArg.populate_keyval(DefV,varargin,mfilename);[m
[31m-            [m
[31m-            [Cat,MinDist,Units,XRA,YDec,PixVal] = ds9.nearestcat(Sim,varargin{:},'SearchRad',SearchRad);[m
[31m-[m
[31m-        end[m
[31m-        [m
[31m-        [m
[31m-        [m
[31m-    end % methods[m
[31m-    [m
[31m-    % Interact with SIM images[m
[31m-    methods (Static)[m
[31m-        [m
[31m-        function Res=simval(Sim)[m
[31m-            % Interactively get values from SIM images[m
[31m-            % Package: @ds9[m
[31m-            % Description: Interactively get values from SIM images (image,[m
[31m-            %              background, error, weight and mask) at clicked[m
[31m-            %              positions. Click 'q' to abort.[m
[31m-            % Input  : - A single element SIM object.[m
[31m-            % Output : - A structure array with the results: clicked[m
[31m-            %            positions and pixel values.[m
[31m-            % Example: Res=simval(Sim);[m
[31m-            % Reliable: [m
[31m-            [m
[31m-            Verbose = true;[m
[31m-            [m
[31m-            ImageField  = SIM.ImageField;[m
[31m-            BackField   = SIM.BackField;[m
[31m-            ErrField    = SIM.ErrField;[m
[31m-            WeightField = SIM.WeightField;[m
[31m-            MaskField   = MASK.MaskField;[m
[31m-            [m
[31m-            Cont = true;[m
[31m-            Ind  = 0;[m
[31m-            while Cont[m
[31m-                % get info from mouse/key click[m
[31m-                fprintf('Click on pixel position - q to abort\n');[m
[31m-                [X,Y,Val,Key]=ds9.getpos(1);[m
[31m-                [m
[31m-                if (strcmpi(Key{1},'q'))[m
[31m-                    % abort[m
[31m-                    Cont = false;[m
[31m-                else[m
[31m-                    % Continue[m
[31m-                    Ind = Ind + 1;[m
[31m-                    [m
[31m-                    Res(Ind).X   = X;[m
[31m-                    Res(Ind).Y   = Y;[m
[31m-                    Res(Ind).Val = Val;[m
[31m-                    Res(Ind).Key = Key{1};[m
[31m-                    FX = floor(X);[m
[31m-                    FY = floor(Y);[m
[31m-                    [m
[31m-                    % get SIM data[m
[31m-                    % Image[m
[31m-                    if (isfield_populated(Sim,ImageField))[m
[31m-                        FI = sub2ind(size(Sim.(ImageField)),FY,FX);[m
[31m-                        Res(Ind).ImageVal = Sim.(ImageField)(FI);[m
[31m-                    else[m
[31m-                        Res(Ind).ImageVal = [];[m
[31m-                    end[m
[31m-                    % background[m
[31m-                    if (isfield_populated(Sim,BackField))[m
[31m-                        if (numel(Sim.(BackField))==1)[m
[31m-                            FI = 1;[m
[31m-                        else[m
[31m-                            FI = sub2ind(size(Sim.(BackField)),FY,FX);[m
[31m-                        end[m
[31m-                        Res(Ind).BackVal = Sim.(BackField)(FI);[m
[31m-                    else[m
[31m-                        Res(Ind).BackVal = [];[m
[31m-                    end[m
[31m-                    % error[m
[31m-                    if (isfield_populated(Sim,ErrField))[m
[31m-                        if (numel(Sim.(ErrField))==1)[m
[31m-                            FI = 1;[m
[31m-                        else[m
[31m-                            FI = sub2ind(size(Sim.(ErrField)),FY,FX);[m
[31m-                        end[m
[31m-                        Res(Ind).ErrVal = Sim.(ErrField)(FI);[m
[31m-                    else[m
[31m-                        Res(Ind).ErrVal = [];[m
[31m-                    end [m
[31m-                    % weight[m
[31m-                    if (isfield_populated(Sim,WeightField))[m
[31m-                        if (numel(Sim.(WeightField))==1)[m
[31m-                            FI = 1;[m
[31m-                        else[m
[31m-                            FI = sub2ind(size(Sim.(WeightField)),FY,FX);[m
[31m-                        end[m
[31m-                        Res(Ind).WeightVal = Sim.(WeightField)(FI);[m
[31m-                    else[m
[31m-                        Res(Ind).WeightVal = [];[m
[31m-                    end [m
[31m-                    % mask[m
[31m-                    if (isfield_populated(Sim,MaskField))[m
[31m-                        FI = sub2ind(size(Sim.(MaskField)),FY,FX);[m
[31m-                        Res(Ind).MaskVal = Sim.(MaskField)(FI);[m
[31m-                        % get bit mask name[m
[31m-                        Res(Ind).BitNames = mask2bitname(Sim);[m
[31m-                    else[m
[31m-                        Res(Ind).MaskVal  = [];[m
[31m-                        Res(Ind).BitNames = {};[m
[31m-                    end[m
[31m-                    [m
[31m-                    % show report[m
[31m-                    if (Verbose)[m
[31m-                        fprintf('\n');[m
[31m-                        fprintf('Clicked pixel: %f %f\n',X,Y);[m
[31m-                        fprintf('ds9 image value: %f\n',Val);[m
[31m-                        if (~isempty(Res(Ind).ImageVal))[m
[31m-                            fprintf('SIM image value: %f\n',Res(Ind).ImageVal);[m
[31m-                        end[m
[31m-                        if (~isempty(Res(Ind).BackVal))[m
[31m-                            fprintf('SIM background value: %f\n',Res(Ind).BackVal);[m
[31m-                        end[m
[31m-                        if (~isempty(Res(Ind).ErrVal))[m
[31m-                            fprintf('SIM error value: %f\n',Res(Ind).ErrVal);[m
[31m-                        end[m
[31m-                        if (~isempty(Res(Ind).WeightVal))[m
[31m-                            fprintf('SIM weight value: %f\n',Res(Ind).WeightVal);[m
[31m-                        end[m
[31m-                        if (~isempty(Res(Ind).MaskVal))[m
[31m-                            fprintf('SIM mask value: %f\n',Res(Ind).MaskVal);[m
[31m-                            fprintf('   List of bit mask names\n',Res(Ind).MaskVal);[m
[31m-                            for Im=1:1:numel(Res(Ind).BitNames)[m
[31m-                                fprintf('   %s\n',Res(Ind).BitNames{Im});[m
[31m-                            end[m
[31m-                        end[m
[31m-                        fprintf('\n');[m
[31m-                    end[m
[31m-                    [m
[31m-                end[m
[31m-                [m
[31m-            end[m
[31m-        end[m
[31m-        [m
[31m-    end[m
[31m-    [m
[31m-    [m
[31m-end % end class[m
[31m-            [m
